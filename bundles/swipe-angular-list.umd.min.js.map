{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","../../../../../packages/platform-browser/src/dom/dom_adapter.ts","../../../../../packages/platform-browser/src/browser/browser_adapter.ts","../../../../../packages/platform-browser/src/browser/generic_browser_adapter.ts","../../../../../packages/platform-browser/src/browser/location/history.ts","../../../../../packages/platform-browser/src/browser/location/browser_platform_location.ts","../../../../../packages/platform-browser/src/browser/server-transition.ts","../../../../../packages/platform-browser/src/browser/testability.ts","../../../../../packages/platform-browser/src/dom/util.ts","../../../../../packages/platform-browser/src/dom/debug/ng_probe.ts","../../../../../packages/platform-browser/src/dom/events/event_manager.ts","../../../../../packages/platform-browser/src/dom/shared_styles_host.ts","../../../../../packages/platform-browser/src/dom/dom_renderer.ts","../../../../../packages/platform-browser/src/dom/events/dom_events.ts","../../../../../packages/platform-browser/src/dom/events/hammer_gestures.ts","../../../../../packages/platform-browser/src/dom/events/key_events.ts","../../../../../packages/platform-browser/src/security/dom_sanitization_service.ts","../../../../../packages/platform-browser/src/browser.ts","../../../../../packages/platform-browser/src/browser/meta.ts","../../../../../packages/platform-browser/src/browser/title.ts","../../../../../packages/platform-browser/src/browser/tools/browser.ts","../../../../../packages/platform-browser/src/browser/tools/common_tools.ts","../../../../../packages/platform-browser/src/browser/transfer_state.ts","../../../../../packages/platform-browser/src/dom/debug/by.ts","../../../../../packages/platform-browser/src/version.ts","ng://swipe-angular-list/lib/swipe-angular-list.service.ts","ng://swipe-angular-list/lib/swipe-angular-list.component.ts","ng://swipe-angular-list/lib/swipe-service.service.ts","ng://swipe-angular-list/lib/item-list/item-list.component.ts","ng://swipe-angular-list/lib/swipe-angular-list.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__read","o","m","Symbol","iterator","e","ar","next","done","push","value","error","_DOM","getDOM","urlParsingNode","GenericBrowserDomAdapter","_super","_this","_animationPrefix","_transitionEnd","element_1","createElement","document","getStyle","domPrefixes","toLowerCase","transEndEventNames_1","WebkitTransition","MozTransition","OTransition","transition","keys","forEach","_a","tslib_1.__extends","getDistributedNodes","el","resolveAndSetHref","baseUrl","href","supportsDOMEvents","supportsNativeShadowDOM","body","createShadowRoot","getAnimationPrefix","getTransitionEnd","supportsAnimation","DomAdapter","resourceLoaderType","_attrToPropMap","class","innerHtml","readonly","tabindex","_keyMap","\b","\t","","\u001b","Del","Esc","Left","Right","Up","Down","Menu","Scroll","Win","_chromeNumKeyPadMap","A","B","C","D","E","F","G","H","I","J","K","M","N","O","`","¬ê","nodeContains","global","contains","node","compareDocumentPosition","BrowserDomAdapter","parse","templateHtml","Error","makeCurrent","adapter","hasProperty","element","name","setProperty","getProperty","invoke","methodName","args","concat","__spread","logError","window","console","log","logGroup","group","logGroupEnd","groupEnd","nodeA","nodeB","querySelector","selector","querySelectorAll","on","evt","listener","addEventListener","onAndCancel","removeEventListener","dispatchEvent","createMouseEvent","eventType","getDefaultDocument","createEvent","initEvent","preventDefault","returnValue","isPrevented","defaultPrevented","getInnerHTML","innerHTML","getTemplateContent","isTemplateElement","content","getOuterHTML","outerHTML","nodeName","nodeValue","type","firstChild","nextSibling","parentElement","parentNode","childNodes","childNodesAsList","res","clearNodes","removeChild","appendChild","replaceChild","newChild","oldChild","remove","insertBefore","parent","ref","insertAllBefore","nodes","insertAfter","setInnerHTML","getText","textContent","setText","getValue","setValue","getChecked","checked","setChecked","createComment","text","createTemplate","html","tagName","doc","createElementNS","ns","createTextNode","createScriptTag","attrName","attrValue","setAttribute","createStyleElement","css","style","getShadowRoot","shadowRoot","getHost","host","clone","cloneNode","getElementsByClassName","getElementsByTagName","classList","slice","addClass","className","add","removeClass","hasClass","setStyle","styleName","styleValue","removeStyle","stylename","hasStyle","attributeMap","Map","elAttrs","attributes","attrib","item","set","hasAttribute","attribute","hasAttributeNS","getAttribute","getAttributeNS","setAttributeNS","removeAttribute","removeAttributeNS","templateAwareRoot","createHtmlDocument","implementation","createHTMLDocument","getBoundingClientRect","top","bottom","left","right","width","height","getTitle","title","setTitle","newTitle","elementMatches","isElementNode","matches","msMatchesSelector","webkitMatchesSelector","isTextNode","nodeType","Node","TEXT_NODE","isCommentNode","COMMENT_NODE","ELEMENT_NODE","hasShadowRoot","HTMLElement","isShadowRoot","DocumentFragment","importIntoDoc","importNode","adoptNode","getHref","getEventKey","event","keyIdentifier","startsWith","String","fromCharCode","parseInt","substring","location","getGlobalEventTarget","getHistory","history","getLocation","getBaseHref","baseElement","getBaseElementHref","url","pathname","charAt","relativePath","resetBaseElement","getUserAgent","navigator","userAgent","setData","getData","getComputedStyle","supportsWebAnimation","Element","performanceNow","performance","now","Date","getTime","supportsCookies","getCookie","parseCookieValue","cookie","setCookie","encodeURIComponent","supportsState","pushState","BrowserPlatformLocation","_doc","_init","_history","getBaseHrefFromDOM","onPopState","fn","onHashChange","protocol","hostname","port","newPath","search","hash","state","replaceState","forward","back","getState","Injectable","tslib_1.__param","Inject","DOCUMENT","PlatformLocation","TRANSITION_ID","InjectionToken","SERVER_TRANSITION_PROVIDERS","provide","APP_INITIALIZER","useFactory","transitionId","injector","get","ApplicationInitStatus","donePromise","then","dom","filter","deps","Injector","multi","BrowserGetTestability","init","setTestabilityGetter","addToWindow","registry","elem","findInAncestors","testability","findTestabilityInTree","getAllTestabilities","getAllRootElements","callback","testabilities","count","didWork","decrement","didWork_","whenStable","getTestability","exportNgVar","COMPILED","CORE_TOKENS","ApplicationRef","NgZone","inspectNativeElement","getDebugNode","ELEMENT_PROBE_PROVIDERS","coreTokens","reduce","prev","token","NgProbeToken","Optional","EVENT_MANAGER_PLUGINS","EventManager","plugins","_zone","_eventNameToPlugin","manager","_plugins","reverse","eventName","handler","_findPluginFor","addGlobalEventListener","getZone","plugin","plugin_1","supports","EventManagerPlugin","SharedStylesHost","_stylesSet","Set","addStyles","styles","additions","has","onStylesAdded","getAllStyles","from","DomSharedStylesHost","_hostNodes","_styleNodes","head","_addStylesToHost","styleEl","addHost","hostNode","removeHost","delete","ngOnDestroy","styleNode","NAMESPACE_URIS","svg","xhtml","xlink","xml","xmlns","COMPONENT_REGEX","HOST_ATTR","CONTENT_ATTR","flattenStyles","compId","isArray","replace","decoratePreventDefault","eventHandler","DomRendererFactory2","eventManager","sharedStylesHost","appId","rendererByCompId","defaultRenderer","DefaultDomRenderer2","createRenderer","encapsulation","ViewEncapsulation","Emulated","renderer","id","EmulatedEncapsulationDomRenderer2","applyToHost","Native","ShadowDom","ShadowDomRenderer","begin","end","APP_ID","data","destroy","namespace","createText","refChild","selectRootElement","selectorOrNode","preserveContent","namespaceUri","flags","RendererStyleFlags2","DashCase","Important","removeProperty","checkNoSyntheticProp","listen","AT_CHARCODE","charCodeAt","nameKind","component","componentShortId","contentAttr","hostAttr","shimHostAttribute","hostEl","attachShadow","mode","nodeOrShadowRoot","__symbol__","Zone","v","ADD_EVENT_LISTENER","REMOVE_EVENT_LISTENER","symbolNames","stopSymbol","blackListedMap","blackListedEvents","res_1","isBlackListedEvent","globalListener","symbolName","taskDatas","taskData","zone","current","run","copiedTasks","DomEventsPlugin","ngZone","platformId","isPlatformServer","patchEvent","Event","delegate","stopImmediatePropagation","zoneJsLoaded","isInAngularZone","globalListenerRegistered","root","callbackRegistered","underlyingRemove","found","splice","PLATFORM_ID","EVENT_NAMES","pan","panstart","panmove","panend","pancancel","panleft","panright","panup","pandown","pinch","pinchstart","pinchmove","pinchend","pinchcancel","pinchin","pinchout","press","pressup","rotate","rotatestart","rotatemove","rotateend","rotatecancel","swipe","swipeleft","swiperight","swipeup","swipedown","tap","HAMMER_GESTURE_CONFIG","HAMMER_LOADER","HammerGestureConfig","events","overrides","buildHammer","mc","Hammer","options","enable","HammerGesturesPlugin","_config","loader","isCustomEvent","warn","cancelRegistration_1","deregister_1","catch","runOutsideAngular","eventObj","runGuarded","off","indexOf","Console","MODIFIER_KEYS","MODIFIER_KEY_GETTERS","alt","altKey","control","ctrlKey","meta","metaKey","shift","shiftKey","KeyEventsPlugin","KeyEventsPlugin_1","parseEventName","parsedEvent","outsideHandler","eventCallback","parts","split","domEventName","_normalizeKey","pop","fullKey","modifierName","index","result","getEventFullKey","modifierGetter","keyName","DomSanitizer","DomSanitizerImpl","sanitize","ctx","SecurityContext","NONE","HTML","SafeHtmlImpl","changingThisBreaksApplicationSecurity","checkNotSafeValue","_sanitizeHtml","STYLE","SafeStyleImpl","_sanitizeStyle","SCRIPT","SafeScriptImpl","URL","SafeResourceUrlImpl","SafeUrlImpl","_sanitizeUrl","RESOURCE_URL","expectedType","SafeValueImpl","getTypeName","bypassSecurityTrustHtml","bypassSecurityTrustStyle","bypassSecurityTrustScript","bypassSecurityTrustUrl","bypassSecurityTrustResourceUrl","toString","PLATFORM_BROWSER_ID","INTERNAL_BROWSER_PLATFORM_PROVIDERS","useValue","…µ0$5","PLATFORM_INITIALIZER","useClass","BROWSER_SANITIZATION_PROVIDERS","Sanitizer","useExisting","createPlatformFactory","platformCore","BROWSER_MODULE_PROVIDERS","APP_ROOT","ErrorHandler","RendererFactory2","Testability","BrowserModule","parentModule","withServerTransition","params","ngModule","BrowserModule_1","providers","NgModule","exports","CommonModule","ApplicationModule","SkipSelf","createMeta","Meta","…µ…µinject","_dom","addTag","tag","forceCreation","_getOrCreateElement","addTags","tags","getTag","attrSelector","getTags","list","updateTag","_parseSelector","_setMetaElementAttributes","removeTag","removeTagElement","_containsAttributes","prop","attr","every","providedIn","createTitle","Title","win","ChangeDetectionPerfRecord","msPerTick","numTicks","AngularProfiler","appRef","timeChangeDetection","config","record","isProfilerAvailable","profile","start","tick","profileEnd","toFixed","TransferState","store","onSerializeCallbacks","initState","transferState","TransferState_1","defaultValue","undefined","hasKey","onSerialize","toJson","JSON","stringify","initTransferState","unescapedText","script","getElementById","initialState","&a;","&q;","&s;","&l;","&g;","BrowserTransferStateModule","By","all","debugElement","nativeElement","directive","debugNode","providerTokens","Version","SwipeAngularListService","SwipeAngularListComponent","ngOnInit","Component","template","SwipeServiceService","swipeObserver","EventEmitter","closeAll","emit","ItemListComponent","elRef","swService","alive","selfElement","idElement","disabledMark","showMark","itemClass","swClick","random","deltaX","clickItem","a","action","opt","inside","render","mark","markTemplate","viewMark","defaultMark","createEmbeddedView","viewContainerMark","insert","notMarkTemplate","defaultNotMark","editTemplate","viewEdit","viewContainerEdit","defaultEdit","trashTemplate","viewTrash","viewContainerTrash","defaultTrash","setTimeout","customTemplate","dataInside","touch","viewCustomTemplate","viewContainerCustom","defaultCustom","subscribe","clickOut","ngAfterViewInit","ElementRef","Input","ViewChild","Output","static","read","ViewContainerRef","HostListener","HammerConfig","SwipeAngularListModule","declarations","imports"],"mappings":";;;;;;;;;;;;;;oFAgBA,IAAIA,EAAgB,SAASC,EAAGC,GAI5B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOA,EAAEM,eAAeD,KAAIN,EAAEM,GAAKL,EAAEK,MACpDN,EAAGC,IAGrB,SAASO,EAAUR,EAAGC,GAEzB,SAASQ,IAAOC,KAAKC,YAAcX,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEY,UAAkB,OAANX,EAAaC,OAAOW,OAAOZ,IAAMQ,EAAGG,UAAYX,EAAEW,UAAW,IAAIH,GAG5E,IAAIK,EAAW,WAQlB,OAPAA,EAAWZ,OAAOa,QAAU,SAAkBC,GAC1C,IAAK,IAAIC,EAAGC,EAAI,EAAGC,EAAIC,UAAUC,OAAQH,EAAIC,EAAGD,IAE5C,IAAK,IAAIZ,KADTW,EAAIG,UAAUF,GACOhB,OAAOU,UAAUL,eAAee,KAAKL,EAAGX,KAAIU,EAAEV,GAAKW,EAAEX,IAE9E,OAAOU,IAEKO,MAAMb,KAAMU,YAezB,SAASI,EAAWC,EAAYC,EAAQC,EAAKC,GAChD,IAA2H5B,EAAvH6B,EAAIT,UAAUC,OAAQS,EAAID,EAAI,EAAIH,EAAkB,OAATE,EAAgBA,EAAO1B,OAAO6B,yBAAyBL,EAAQC,GAAOC,EACrH,GAAuB,iBAAZI,SAAoD,mBAArBA,QAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQC,EAAKC,QACpH,IAAK,IAAIV,EAAIO,EAAWJ,OAAS,EAAGH,GAAK,EAAGA,KAASlB,EAAIyB,EAAWP,MAAIY,GAAKD,EAAI,EAAI7B,EAAE8B,GAAKD,EAAI,EAAI7B,EAAE0B,EAAQC,EAAKG,GAAK9B,EAAE0B,EAAQC,KAASG,GAChJ,OAAOD,EAAI,GAAKC,GAAK5B,OAAOgC,eAAeR,EAAQC,EAAKG,GAAIA,EAGzD,SAASK,EAAQC,EAAYC,GAChC,OAAO,SAAUX,EAAQC,GAAOU,EAAUX,EAAQC,EAAKS,IAGpD,SAASE,EAAWC,EAAaC,GACpC,GAAuB,iBAAZR,SAAoD,mBAArBA,QAAQS,SAAyB,OAAOT,QAAQS,SAASF,EAAaC,GAyD7G,SAASE,EAAOC,EAAGxB,GACtB,IAAIyB,EAAsB,mBAAXC,QAAyBF,EAAEE,OAAOC,UACjD,IAAKF,EAAG,OAAOD,EACf,IAAmBb,EAAYiB,EAA3B7B,EAAI0B,EAAEtB,KAAKqB,GAAOK,EAAK,GAC3B,IACI,WAAc,IAAN7B,GAAgBA,KAAM,MAAQW,EAAIZ,EAAE+B,QAAQC,MAAMF,EAAGG,KAAKrB,EAAEsB,OAExE,MAAOC,GAASN,EAAI,CAAEM,MAAOA,GACjC,QACQ,IACQvB,IAAMA,EAAEoB,OAASN,EAAI1B,EAAU,SAAI0B,EAAEtB,KAAKJ,GAE1D,QAAkB,GAAI6B,EAAG,MAAMA,EAAEM,OAE7B,OAAOL;;;;;;;;;;;;;AC7HX,IAAIM,EAAmB,KAEvB,SAAgBC,IACd,OAAOD,EAoBT,IC2XIE,EC1YJC,EAAA,SAAAC,GAGE,SAAAD,IAAA,IAAAE,EACED,EAAApC,KAAAZ,OAAOA,KAHDiD,EAAAC,iBAAgC,KAChCD,EAAAE,eAA8B,KAGpC,IACE,IAAMC,EAAUH,EAAKI,cAAc,MAAOC,UAC1C,GAA+C,MAA3CL,EAAKM,SAASH,EAAS,iBACzBH,EAAKC,iBAAmB,QAIxB,IAFA,IAAMM,EAAc,CAAC,SAAU,MAAO,IAAK,MAElChD,EAAI,EAAGA,EAAIgD,EAAY7C,OAAQH,IACtC,GAAgE,MAA5DyC,EAAKM,SAASH,EAASI,EAAYhD,GAAK,iBAA0B,CACpEyC,EAAKC,iBAAmB,IAAMM,EAAYhD,GAAGiD,cAAgB,IAC7D,MAKN,IAAMC,EAA8C,CAClDC,iBAAkB,sBAClBC,cAAe,gBACfC,YAAa,gCACbC,WAAY,iBAGdtE,OAAOuE,KAAKL,GAAoBM,SAAQ,SAAC/C,GACJ,MAA/BgC,EAAKM,SAASH,EAASnC,KACzBgC,EAAKE,eAAiBO,EAAmBzC,OAG7C,MAAAgD,GACAhB,EAAKC,iBAAmB,KACxBD,EAAKE,eAAiB,cAiB5B,OAnDuDe,EAAAA,EAAAA,GAsCrDnB,EAAA7C,UAAAiE,oBAAA,SAAoBC,GAA2B,OAAaA,EAAID,uBAChEpB,EAAA7C,UAAAmE,kBAAA,SAAkBD,EAAuBE,EAAiBC,GACxDH,EAAGG,KAAe,MAARA,EAAeD,EAAUA,EAAU,OAASC,GAExDxB,EAAA7C,UAAAsE,kBAAA,WAA+B,OAAO,GACtCzB,EAAA7C,UAAAuE,wBAAA,WACE,MAAuD,mBAApCnB,SAASoB,KAAMC,kBAEpC5B,EAAA7C,UAAA0E,mBAAA,WAA+B,OAAO5E,KAAKkD,iBAAmBlD,KAAKkD,iBAAmB,IACtFH,EAAA7C,UAAA2E,iBAAA,WAA6B,OAAO7E,KAAKmD,eAAiBnD,KAAKmD,eAAiB,IAChFJ,EAAA7C,UAAA4E,kBAAA,WACE,OAAgC,MAAzB9E,KAAKkD,kBAAmD,MAAvBlD,KAAKmD,gBAEjDJ,EAnDA,CFeA,WAAA,SAAAgC,IACS/E,KAAAgF,mBAAgC,KAkIzC,OAnHExF,OAAAgC,eAAIuD,EAAA7E,UAAA,gBAAa,KAAjB,WAA+C,OAAOF,KAAKiF,oBAC3D,SAAkBvC,GAAkC1C,KAAKiF,eAAiBvC,mCAkH5EqC,EAnIA,IClBME,EAAiB,CACrBC,MAAS,YACTC,UAAa,YACbC,SAAY,WACZC,SAAY,YAMRC,EAAiC,CAGrCC,KAAM,YACNC,KAAM,MACNC,IAAQ,SACRC,IAAQ,SACRC,IAAO,SACPC,IAAO,SACPC,KAAQ,YACRC,MAAS,aACTC,GAAM,UACNC,KAAQ,YACRC,KAAQ,cACRC,OAAU,aACVC,IAAO,MAMHC,EAAsB,CAC1BC,EAAK,IACLC,EAAK,IACLC,EAAK,IACLC,EAAK,IACLC,EAAK,IACLC,EAAK,IACLC,EAAK,IACLC,EAAK,IACLC,EAAK,IACLC,EAAK,IACLC,EAAK,IACLC,EAAK,IACLC,EAAK,IACLC,EAAK,IACLC,IAAQ,IACRC,IAAQ,WAGJC,EAAsD,WAC1D,GAAIC,EAAAA,QAAa,KACf,OAAOA,EAAAA,QAAa,KAAEpH,UAAUqH,UAAY,SAAqBC,GAC/D,SAA+C,GAArCxH,KAAKyH,wBAAwBD,KAHc,GAiB3DE,EAAA,SAAA1E,GAAA,SAAA0E,mDA4TA,OA5TuCxD,EAAAA,EAAAA,GACrCwD,EAAAxH,UAAAyH,MAAA,SAAMC,GAAwB,MAAM,IAAIC,MAAM,0BACvCH,EAAAI,YAAP,WDhEF,IAAkCC,EAAAA,ECgES,IAAIL,ED/DxC9E,IACHA,EAAOmF,IC+DTL,EAAAxH,UAAA8H,YAAA,SAAYC,EAAeC,GAAyB,OAAOA,KAAQD,GACnEP,EAAAxH,UAAAiI,YAAA,SAAY/D,EAAU8D,EAAcxF,GAAoB0B,EAAI8D,GAAQxF,GACpEgF,EAAAxH,UAAAkI,YAAA,SAAYhE,EAAU8D,GAAqB,OAAa9D,EAAI8D,IAC5DR,EAAAxH,UAAAmI,OAAA,SAAOjE,EAAUkE,EAAoBC,UAAoBtE,EAAMG,GAAIkE,GAAWzH,MAAAoD,EFkDzE,WACH,IAAK,IAAI3B,EAAK,GAAI9B,EAAI,EAAGA,EAAIE,UAAUC,OAAQH,IAC3C8B,EAAKA,EAAGkG,OAAOxG,EAAOtB,UAAUF,KACpC,OAAO8B,EErDqEmG,CAAIF,KAGlFb,EAAAxH,UAAAwI,SAAA,SAAS/F,GACHgG,OAAOC,UACLA,QAAQjG,MACViG,QAAQjG,MAAMA,GAEdiG,QAAQC,IAAIlG,KAKlB+E,EAAAxH,UAAA2I,IAAA,SAAIlG,GACEgG,OAAOC,SACTD,OAAOC,QAAQC,KAAOF,OAAOC,QAAQC,IAAIlG,IAI7C+E,EAAAxH,UAAA4I,SAAA,SAASnG,GACHgG,OAAOC,SACTD,OAAOC,QAAQG,OAASJ,OAAOC,QAAQG,MAAMpG,IAIjD+E,EAAAxH,UAAA8I,YAAA,WACML,OAAOC,SACTD,OAAOC,QAAQK,UAAYN,OAAOC,QAAQK,YAI9CzJ,OAAAgC,eAAIkG,EAAAxH,UAAA,gBAAa,KAAjB,WAA2B,OAAO+E,mCAElCyC,EAAAxH,UAAAqH,SAAA,SAAS2B,EAAYC,GAAuB,OAAO9B,EAAazG,KAAKsI,EAAOC,IAC5EzB,EAAAxH,UAAAkJ,cAAA,SAAchF,EAAiBiF,GAAyB,OAAOjF,EAAGgF,cAAcC,IAChF3B,EAAAxH,UAAAoJ,iBAAA,SAAiBlF,EAASiF,GAA2B,OAAOjF,EAAGkF,iBAAiBD,IAChF3B,EAAAxH,UAAAqJ,GAAA,SAAGnF,EAAUoF,EAAUC,GAAiBrF,EAAGsF,iBAAiBF,EAAKC,GAAU,IAC3E/B,EAAAxH,UAAAyJ,YAAA,SAAYvF,EAAUoF,EAAUC,GAI9B,OAHArF,EAAGsF,iBAAiBF,EAAKC,GAAU,GAG5B,WAAQrF,EAAGwF,oBAAoBJ,EAAKC,GAAU,KAEvD/B,EAAAxH,UAAA2J,cAAA,SAAczF,EAAUoF,GAAYpF,EAAGyF,cAAcL,IACrD9B,EAAAxH,UAAA4J,iBAAA,SAAiBC,GACf,IAAMP,EAAkBxJ,KAAKgK,qBAAqBC,YAAY,cAE9D,OADAT,EAAIU,UAAUH,GAAW,GAAM,GACxBP,GAET9B,EAAAxH,UAAA+J,YAAA,SAAYF,GACV,IAAMP,EAAaxJ,KAAKgK,qBAAqBC,YAAY,SAEzD,OADAT,EAAIU,UAAUH,GAAW,GAAM,GACxBP,GAET9B,EAAAxH,UAAAiK,eAAA,SAAeX,GACbA,EAAIW,iBACJX,EAAIY,aAAc,GAEpB1C,EAAAxH,UAAAmK,YAAA,SAAYb,GACV,OAAOA,EAAIc,kBAAuC,MAAnBd,EAAIY,cAAwBZ,EAAIY,aAEjE1C,EAAAxH,UAAAqK,aAAA,SAAanG,GAA2B,OAAOA,EAAGoG,WAClD9C,EAAAxH,UAAAuK,mBAAA,SAAmBrG,GACjB,MAAO,YAAaA,GAAMpE,KAAK0K,kBAAkBtG,GAAYA,EAAIuG,QAAU,MAE7EjD,EAAAxH,UAAA0K,aAAA,SAAaxG,GAA2B,OAAOA,EAAGyG,WAClDnD,EAAAxH,UAAA4K,SAAA,SAAStD,GAAsB,OAAOA,EAAKsD,UAC3CpD,EAAAxH,UAAA6K,UAAA,SAAUvD,GAA2B,OAAOA,EAAKuD,WACjDrD,EAAAxH,UAAA8K,KAAA,SAAKxD,GAAkC,OAAOA,EAAKwD,MACnDtD,EAAAxH,UAAAyK,QAAA,SAAQnD,GACN,OAAIxH,KAAKgI,YAAYR,EAAM,WACZA,EAAMmD,QAEZnD,GAGXE,EAAAxH,UAAA+K,WAAA,SAAW7G,GAAuB,OAAOA,EAAG6G,YAC5CvD,EAAAxH,UAAAgL,YAAA,SAAY9G,GAAuB,OAAOA,EAAG8G,aAC7CxD,EAAAxH,UAAAiL,cAAA,SAAc/G,GAAuB,OAAOA,EAAGgH,YAC/C1D,EAAAxH,UAAAmL,WAAA,SAAWjH,GAAmB,OAAOA,EAAGiH,YACxC3D,EAAAxH,UAAAoL,iBAAA,SAAiBlH,GAGf,IAFA,IAAMiH,EAAajH,EAAGiH,WAChBE,EAAM,IAAI5L,MAAM0L,EAAW1K,QACxBH,EAAI,EAAGA,EAAI6K,EAAW1K,OAAQH,IACrC+K,EAAI/K,GAAK6K,EAAW7K,GAEtB,OAAO+K,GAET7D,EAAAxH,UAAAsL,WAAA,SAAWpH,GACT,KAAOA,EAAG6G,YACR7G,EAAGqH,YAAYrH,EAAG6G,aAGtBvD,EAAAxH,UAAAwL,YAAA,SAAYtH,EAAUoD,GAAcpD,EAAGsH,YAAYlE,IACnDE,EAAAxH,UAAAuL,YAAA,SAAYrH,EAAUoD,GAAcpD,EAAGqH,YAAYjE,IACnDE,EAAAxH,UAAAyL,aAAA,SAAavH,EAAUwH,EAAgBC,GAAkBzH,EAAGuH,aAAaC,EAAUC,IACnFnE,EAAAxH,UAAA4L,OAAA,SAAOtE,GAIL,OAHIA,EAAK4D,YACP5D,EAAK4D,WAAWK,YAAYjE,GAEvBA,GAETE,EAAAxH,UAAA6L,aAAA,SAAaC,EAAcC,EAAWzE,GAAcwE,EAAOD,aAAavE,EAAMyE,IAC9EvE,EAAAxH,UAAAgM,gBAAA,SAAgBF,EAAcC,EAAWE,GACvCA,EAAMnI,SAAQ,SAACvD,GAAW,OAAAuL,EAAOD,aAAatL,EAAGwL,OAEnDvE,EAAAxH,UAAAkM,YAAA,SAAYJ,EAAcC,EAAWzE,GAAawE,EAAOD,aAAavE,EAAMyE,EAAIf,cAChFxD,EAAAxH,UAAAmM,aAAA,SAAajI,EAAa1B,GAAiB0B,EAAGoG,UAAY9H,GAC1DgF,EAAAxH,UAAAoM,QAAA,SAAQlI,GAAyB,OAAOA,EAAGmI,aAC3C7E,EAAAxH,UAAAsM,QAAA,SAAQpI,EAAU1B,GAAiB0B,EAAGmI,YAAc7J,GACpDgF,EAAAxH,UAAAuM,SAAA,SAASrI,GAAmB,OAAOA,EAAG1B,OACtCgF,EAAAxH,UAAAwM,SAAA,SAAStI,EAAS1B,GAAiB0B,EAAG1B,MAAQA,GAC9CgF,EAAAxH,UAAAyM,WAAA,SAAWvI,GAAoB,OAAOA,EAAGwI,SACzClF,EAAAxH,UAAA2M,WAAA,SAAWzI,EAAS1B,GAAkB0B,EAAGwI,QAAUlK,GACnDgF,EAAAxH,UAAA4M,cAAA,SAAcC,GAAyB,OAAO/M,KAAKgK,qBAAqB8C,cAAcC,IACtFrF,EAAAxH,UAAA8M,eAAA,SAAeC,GACb,IAAM3M,EAAIN,KAAKgK,qBAAqB3G,cAAc,YAElD,OADA/C,EAAEkK,UAAYyC,EACP3M,GAEToH,EAAAxH,UAAAmD,cAAA,SAAc6J,EAAiBC,GAE7B,OADAA,EAAMA,GAAOnN,KAAKgK,sBACP3G,cAAc6J,IAE3BxF,EAAAxH,UAAAkN,gBAAA,SAAgBC,EAAYH,EAAiBC,GAE3C,OADAA,EAAMA,GAAOnN,KAAKgK,sBACPoD,gBAAgBC,EAAIH,IAEjCxF,EAAAxH,UAAAoN,eAAA,SAAeP,EAAcI,GAE3B,OADAA,EAAMA,GAAOnN,KAAKgK,sBACPsD,eAAeP,IAE5BrF,EAAAxH,UAAAqN,gBAAA,SAAgBC,EAAkBC,EAAmBN,GAEnD,IAAM/I,GADN+I,EAAMA,GAAOnN,KAAKgK,sBACgB3G,cAAc,UAEhD,OADAe,EAAGsJ,aAAaF,EAAUC,GACnBrJ,GAETsD,EAAAxH,UAAAyN,mBAAA,SAAmBC,EAAaT,GAE9B,IAAMU,GADNV,EAAMA,GAAOnN,KAAKgK,sBACkB3G,cAAc,SAElD,OADArD,KAAK0L,YAAYmC,EAAO7N,KAAKsN,eAAeM,EAAKT,IAC1CU,GAETnG,EAAAxH,UAAAyE,iBAAA,SAAiBP,GAAqC,OAAaA,EAAIO,oBACvE+C,EAAAxH,UAAA4N,cAAA,SAAc1J,GAAqC,OAAaA,EAAI2J,YACpErG,EAAAxH,UAAA8N,QAAA,SAAQ5J,GAAgC,OAAaA,EAAI6J,MACzDvG,EAAAxH,UAAAgO,MAAA,SAAM1G,GAAoB,OAAOA,EAAK2G,WAAU,IAChDzG,EAAAxH,UAAAkO,uBAAA,SAAuBnG,EAAcC,GACnC,OAAOD,EAAQmG,uBAAuBlG,IAExCR,EAAAxH,UAAAmO,qBAAA,SAAqBpG,EAAcC,GACjC,OAAOD,EAAQoG,qBAAqBnG,IAEtCR,EAAAxH,UAAAoO,UAAA,SAAUrG,GAAuB,OAAOtI,MAAMO,UAAUqO,MAAM3N,KAAKqH,EAAQqG,UAAW,IACtF5G,EAAAxH,UAAAsO,SAAA,SAASvG,EAAcwG,GAAqBxG,EAAQqG,UAAUI,IAAID,IAClE/G,EAAAxH,UAAAyO,YAAA,SAAY1G,EAAcwG,GAAqBxG,EAAQqG,UAAUxC,OAAO2C,IACxE/G,EAAAxH,UAAA0O,SAAA,SAAS3G,EAAcwG,GACrB,OAAOxG,EAAQqG,UAAU/G,SAASkH,IAEpC/G,EAAAxH,UAAA2O,SAAA,SAAS5G,EAAc6G,EAAmBC,GACxC9G,EAAQ4F,MAAMiB,GAAaC,GAE7BrH,EAAAxH,UAAA8O,YAAA,SAAY/G,EAAcgH,GAGxBhH,EAAQ4F,MAAMoB,GAAa,IAE7BvH,EAAAxH,UAAAqD,SAAA,SAAS0E,EAAcgH,GAA6B,OAAOhH,EAAQ4F,MAAMoB,IACzEvH,EAAAxH,UAAAgP,SAAA,SAASjH,EAAc6G,EAAmBC,GACxC,IAAMrM,EAAQ1C,KAAKuD,SAAS0E,EAAS6G,IAAc,GACnD,OAAOC,EAAarM,GAASqM,EAAarM,EAAM/B,OAAS,GAE3D+G,EAAAxH,UAAAgN,QAAA,SAAQjF,GAAwB,OAAOA,EAAQiF,SAC/CxF,EAAAxH,UAAAiP,aAAA,SAAalH,GAGX,IAFA,IAAMsD,EAAM,IAAI6D,IACVC,EAAUpH,EAAQqH,WACf9O,EAAI,EAAGA,EAAI6O,EAAQ1O,OAAQH,IAAK,CACvC,IAAM+O,EAASF,EAAQG,KAAKhP,GAC5B+K,EAAIkE,IAAIF,EAAOrH,KAAMqH,EAAO7M,OAE9B,OAAO6I,GAET7D,EAAAxH,UAAAwP,aAAA,SAAazH,EAAkB0H,GAC7B,OAAO1H,EAAQyH,aAAaC,IAE9BjI,EAAAxH,UAAA0P,eAAA,SAAe3H,EAAkBoF,EAAYsC,GAC3C,OAAO1H,EAAQ2H,eAAevC,EAAIsC,IAEpCjI,EAAAxH,UAAA2P,aAAA,SAAa5H,EAAkB0H,GAC7B,OAAO1H,EAAQ4H,aAAaF,IAE9BjI,EAAAxH,UAAA4P,eAAA,SAAe7H,EAAkBoF,EAAYnF,GAC3C,OAAOD,EAAQ6H,eAAezC,EAAInF,IAEpCR,EAAAxH,UAAAwN,aAAA,SAAazF,EAAkBC,EAAcxF,GAAiBuF,EAAQyF,aAAaxF,EAAMxF,IACzFgF,EAAAxH,UAAA6P,eAAA,SAAe9H,EAAkBoF,EAAYnF,EAAcxF,GACzDuF,EAAQ8H,eAAe1C,EAAInF,EAAMxF,IAEnCgF,EAAAxH,UAAA8P,gBAAA,SAAgB/H,EAAkB0H,GAAqB1H,EAAQ+H,gBAAgBL,IAC/EjI,EAAAxH,UAAA+P,kBAAA,SAAkBhI,EAAkBoF,EAAYnF,GAC9CD,EAAQgI,kBAAkB5C,EAAInF,IAEhCR,EAAAxH,UAAAgQ,kBAAA,SAAkB9L,GAAiB,OAAOpE,KAAK0K,kBAAkBtG,GAAMpE,KAAK2K,QAAQvG,GAAMA,GAC1FsD,EAAAxH,UAAAiQ,mBAAA,WACE,OAAO7M,SAAS8M,eAAeC,mBAAmB,cAEpD3I,EAAAxH,UAAA8J,mBAAA,WAAiC,OAAO1G,UACxCoE,EAAAxH,UAAAoQ,sBAAA,SAAsBlM,GACpB,IACE,OAAOA,EAAGkM,wBACV,MAAArM,GACA,MAAO,CAACsM,IAAK,EAAGC,OAAQ,EAAGC,KAAM,EAAGC,MAAO,EAAGC,MAAO,EAAGC,OAAQ,KAGpElJ,EAAAxH,UAAA2Q,SAAA,SAAS1D,GAAyB,OAAOA,EAAI2D,OAC7CpJ,EAAAxH,UAAA6Q,SAAA,SAAS5D,EAAe6D,GAAoB7D,EAAI2D,MAAQE,GAAY,IACpEtJ,EAAAxH,UAAA+Q,eAAA,SAAexQ,EAAQ4I,GACrB,QAAIrJ,KAAKkR,cAAczQ,KACdA,EAAE0Q,SAAW1Q,EAAE0Q,QAAQ9H,IAC1B5I,EAAE2Q,mBAAqB3Q,EAAE2Q,kBAAkB/H,IAC3C5I,EAAE4Q,uBAAyB5Q,EAAE4Q,sBAAsBhI,KAK3D3B,EAAAxH,UAAAwK,kBAAA,SAAkBtG,GAChB,OAAOpE,KAAKkR,cAAc9M,IAAuB,aAAhBA,EAAG0G,UAEtCpD,EAAAxH,UAAAoR,WAAA,SAAW9J,GAAuB,OAAOA,EAAK+J,WAAaC,KAAKC,WAChE/J,EAAAxH,UAAAwR,cAAA,SAAclK,GAAuB,OAAOA,EAAK+J,WAAaC,KAAKG,cACnEjK,EAAAxH,UAAAgR,cAAA,SAAc1J,GAAuB,OAAOA,EAAK+J,WAAaC,KAAKI,cACnElK,EAAAxH,UAAA2R,cAAA,SAAcrK,GACZ,OAA0B,MAAnBA,EAAKuG,YAAsBvG,aAAgBsK,aAEpDpK,EAAAxH,UAAA6R,aAAA,SAAavK,GAAsB,OAAOA,aAAgBwK,kBAC1DtK,EAAAxH,UAAA+R,cAAA,SAAczK,GAAmB,OAAOlE,SAAS4O,WAAWlS,KAAKkQ,kBAAkB1I,IAAO,IAC1FE,EAAAxH,UAAAiS,UAAA,SAAU3K,GAAmB,OAAOlE,SAAS6O,UAAU3K,IACvDE,EAAAxH,UAAAkS,QAAA,SAAQhO,GAAuB,OAAOA,EAAGyL,aAAa,SAEtDnI,EAAAxH,UAAAmS,YAAA,SAAYC,GACV,IAAIrR,EAAMqR,EAAMrR,IAChB,GAAW,MAAPA,EAAa,CAKf,GAAW,OAJXA,EAAMqR,EAAMC,eAKV,MAAO,eAELtR,EAAIuR,WAAW,QACjBvR,EAAMwR,OAAOC,aAAaC,SAAS1R,EAAI2R,UAAU,GAAI,KA7T7B,IA8TpBN,EAAMO,UAAwCzM,EAAoBvG,eAAeoB,KAInFA,EAAOmF,EAA4BnF,KAKzC,OAAOqE,EAAQrE,IAAQA,GAEzByG,EAAAxH,UAAA4S,qBAAA,SAAqB3F,EAAenM,GAClC,MAAe,WAAXA,EACK2H,OAEM,aAAX3H,EACKmM,EAEM,SAAXnM,EACKmM,EAAIzI,KAEN,MAETgD,EAAAxH,UAAA6S,WAAA,WAAwB,OAAOpK,OAAOqK,SACtCtL,EAAAxH,UAAA+S,YAAA,WAA0B,OAAOtK,OAAOkK,UACxCnL,EAAAxH,UAAAgT,YAAA,SAAY/F,GACV,IAAM5I,EAmCV,WACE,IAAK4O,KACHA,EAAc7P,SAAS8F,cAAc,SAEnC,OAAO,KAGX,OAAO+J,EAAYtD,aAAa,QA1CjBuD,GACb,OAAe,MAAR7O,EAAe,KA8C1B,SAAsB8O,GACfvQ,IACHA,EAAiBQ,SAASD,cAAc,MAG1C,OADAP,EAAe4K,aAAa,OAAQ2F,GACU,MAAtCvQ,EAAewQ,SAASC,OAAO,GAAczQ,EAAewQ,SACf,IAAMxQ,EAAewQ;;;;;;;OApD3CE,CAAajP,IAE5CmD,EAAAxH,UAAAuT,iBAAA,WAA2BN,EAAc,MACzCzL,EAAAxH,UAAAwT,aAAA,WAAyB,OAAO/K,OAAOgL,UAAUC,WACjDlM,EAAAxH,UAAA2T,QAAA,SAAQ5L,EAAkBC,EAAcxF,GACtC1C,KAAK0N,aAAazF,EAAS,QAAUC,EAAMxF,IAE7CgF,EAAAxH,UAAA4T,QAAA,SAAQ7L,EAAkBC,GACxB,OAAOlI,KAAK6P,aAAa5H,EAAS,QAAUC,IAE9CR,EAAAxH,UAAA6T,iBAAA,SAAiB9L,GAAqB,OAAO8L,iBAAiB9L,IAE9DP,EAAAxH,UAAA8T,qBAAA,WACE,MAAqD,mBAAlCC,QAAS/T,UAAmB,SAEjDwH,EAAAxH,UAAAgU,eAAA,WAGE,OAAOvL,OAAOwL,aAAexL,OAAOwL,YAAYC,IAAMzL,OAAOwL,YAAYC,OACnB,IAAIC,MAAOC,WAGnE5M,EAAAxH,UAAAqU,gBAAA,WAA6B,OAAO,GAEpC7M,EAAAxH,UAAAsU,UAAA,SAAUtM,GAA6B,OAAOuM,EAAAA,kBAAiBnR,SAASoR,OAAQxM,IAEhFR,EAAAxH,UAAAyU,UAAA,SAAUzM,EAAcxF,GAGtBY,SAASoR,OAASE,mBAAmB1M,GAAQ,IAAM0M,mBAAmBlS,IAE1EgF,EA5TA,CAAuC3E,GA8TnCoQ,EAAgC;;;;;;;OExYpC,SAAgB0B,IACd,QAASlM,OAAOqK,QAAQ8B;;;;;;;OCc1B,IAAAC,EAAA,SAAA/R,GAME,SAAA+R,EAAsCC,GAAtC,IAAA/R,EACED,EAAApC,KAAAZ,OAAOA,YAD6BiD,EAAA+R,KAAAA,EAEpC/R,EAAKgS,UAkDT,OA1D6C/Q,EAAAA,EAAAA,GAa3C6Q,EAAA7U,UAAA+U,MAAA,WACGjV,KAA6B6S,SAAWhQ,IAASoQ,cAClDjT,KAAKkV,SAAWrS,IAASkQ,cAG3BgC,EAAA7U,UAAAiV,mBAAA,WAA+B,OAAOtS,IAASqQ,YAAYlT,KAAKgV,OAEhED,EAAA7U,UAAAkV,WAAA,SAAWC,GACTxS,IAASiQ,qBAAqB9S,KAAKgV,KAAM,UAAUtL,iBAAiB,WAAY2L,GAAI,IAGtFN,EAAA7U,UAAAoV,aAAA,SAAaD,GACXxS,IAASiQ,qBAAqB9S,KAAKgV,KAAM,UAAUtL,iBAAiB,aAAc2L,GAAI,IAGxF7V,OAAAgC,eAAIuT,EAAA7U,UAAA,OAAI,KAAR,WAAqB,OAAOF,KAAK6S,SAAStO,sCAC1C/E,OAAAgC,eAAIuT,EAAA7U,UAAA,WAAQ,KAAZ,WAAyB,OAAOF,KAAK6S,SAAS0C,0CAC9C/V,OAAAgC,eAAIuT,EAAA7U,UAAA,WAAQ,KAAZ,WAAyB,OAAOF,KAAK6S,SAAS2C,0CAC9ChW,OAAAgC,eAAIuT,EAAA7U,UAAA,OAAI,KAAR,WAAqB,OAAOF,KAAK6S,SAAS4C,sCAC1CjW,OAAAgC,eAAIuT,EAAA7U,UAAA,WAAQ,KAAZ,WAAyB,OAAOF,KAAK6S,SAASS,cAG9C,SAAaoC,GAAmB1V,KAAK6S,SAASS,SAAWoC,mCAFzDlW,OAAAgC,eAAIuT,EAAA7U,UAAA,SAAM,KAAV,WAAuB,OAAOF,KAAK6S,SAAS8C,wCAC5CnW,OAAAgC,eAAIuT,EAAA7U,UAAA,OAAI,KAAR,WAAqB,OAAOF,KAAK6S,SAAS+C,sCAG1Cb,EAAA7U,UAAA4U,UAAA,SAAUe,EAAY/E,EAAeuC,GAC/BwB,IACF7U,KAAKkV,SAASJ,UAAUe,EAAO/E,EAAOuC,GAEtCrT,KAAK6S,SAAS+C,KAAOvC,GAIzB0B,EAAA7U,UAAA4V,aAAA,SAAaD,EAAY/E,EAAeuC,GAClCwB,IACF7U,KAAKkV,SAASY,aAAaD,EAAO/E,EAAOuC,GAEzCrT,KAAK6S,SAAS+C,KAAOvC,GAIzB0B,EAAA7U,UAAA6V,QAAA,WAAkB/V,KAAKkV,SAASa,WAEhChB,EAAA7U,UAAA8V,KAAA,WAAehW,KAAKkV,SAASc,QAE7BjB,EAAA7U,UAAA+V,SAAA,WAAsB,OAAOjW,KAAKkV,SAASW,OAzDhCd,EAAuBjU,EAAA,CADnCoV,EAAAA,aAOcC,EAAAA,EAAAC,EAAAA,OAAOC,EAAAA,4CANTtB,GAAb,CAA6CuB,EAAAA,kBCNhCC,EAAgB,IAAIC,EAAAA,eAAe;;;;;;;OAgBhD,IAAaC,EAAgD,CAC3D,CACEC,QAASC,EAAAA,gBACTC,WAjBJ,SAAsCC,EAAsBvT,EAAewT,GACzE,OAAO,WAGLA,EAASC,IAAIC,EAAAA,uBAAuBC,YAAYC,MAAK,WACnD,IAAMC,EAAMtU,IAERlD,MAAMO,UAAUqO,MAAM1N,MAAMsW,EAAI7N,iBAAiBhG,EAAU,yBACxD8T,QAAO,SAAAhT,GAAM,OAAA+S,EAAItH,aAAazL,EAAI,mBAAqByS,KACzD7S,SAAQ,SAAAI,GAAM,OAAA+S,EAAIrL,OAAO1H,WAShCiT,KAAM,CAACd,EAAeF,EAAAA,SAAUiB,EAAAA,UAChCC,OAAO,IC9BXC,EAAA,WAIA,SAAAA,KAsDA,OArDSA,EAAAC,KAAP,WAAgBC,EAAAA,qBAAqB,IAAIF,IAEzCA,EAAAtX,UAAAyX,YAAA,SAAYC,GACVtQ,EAAAA,QAA8B,sBAAI,SAACuQ,EAAWC,QAAA,IAAAA,IAAAA,GAAA,GAC5C,IAAMC,EAAcH,EAASI,sBAAsBH,EAAMC,GACzD,GAAmB,MAAfC,EACF,MAAM,IAAIlQ,MAAM,2CAElB,OAAOkQ,GAGTzQ,EAAAA,QAAmC,2BAAI,WAAM,OAAAsQ,EAASK,uBAEtD3Q,EAAAA,QAAkC,0BAAI,WAAM,OAAAsQ,EAASM,sBAkBhD5Q,EAAAA,QAA6B,uBAChCA,EAAAA,QAA6B,qBAAI,IAEnCA,EAAAA,QAA6B,qBAAE7E,MAnBT,SAAC0V,GACrB,IAAMC,EAAgB9Q,EAAAA,QAAmC,6BACrD+Q,EAAQD,EAAczX,OACtB2X,GAAU,EACRC,EAAY,SAASC,GACzBF,EAAUA,GAAWE,EAER,KADbH,GAEEF,EAASG,IAGbF,EAAcpU,SAAQ,SAAS+T,GAC7BA,EAAYU,WAAWF,UAU7Bf,EAAAtX,UAAA8X,sBAAA,SAAsBJ,EAA+BC,EAAWC,GAE9D,GAAY,MAARD,EACF,OAAO,KAET,IAAMvX,EAAIsX,EAASc,eAAeb,GAClC,OAAS,MAALvX,EACKA,EACGwX,EAGRjV,IAASkP,aAAa8F,GACjB7X,KAAKgY,sBAAsBJ,EAAU/U,IAASmL,QAAQ6J,IAAO,GAE/D7X,KAAKgY,sBAAsBJ,EAAU/U,IAASsI,cAAc0M,IAAO,GALjE,MAObL,EA1DA;;;;;;;OCqBA,SAAgBmB,EAAYzQ,EAAcxF,GAChB,oBAAbkW,UAA6BA,YAK3BtR,EAAAA,QAAW,GAAKA,EAAAA,QAAW,IAAyC,IAC5EY,GAAQxF;;;;;;;WCxBTmW,EAAqB,CACJC,eAAkBA,EAAAA,eAClBC,OAAUA,EAAAA,QAWjC,SAAgBC,EAAqB/Q,GACnC,OAAOgR,EAAAA,aAAahR,GAoBtB,IAgBaiR,EAXgD,CAC3D,CACExC,QAASC,EAAAA,gBACTC,WAzBJ,SAA+BuC,GAG7B,OAFAR,EAb0B,QAaOK,GACjCL,EAb8B,aAaKvY,EAAA,GAAMyY,GAAoCM,GAAc,IAK7EC,QAAO,SAACC,EAAW/Y,GAAW,OAAC+Y,EAAK/Y,EAAE4H,MAAQ5H,EAAEgZ,MAAOD,IAAO,MAJrE,WAAM,OAAAL,IAuBX3B,KAAM,CACJ,CAACkC,EAAAA,aAAc,IAAIC,EAAAA,WAErBjC,OAAO,ICzCEkC,EACT,IAAIjD,EAAAA,eAAqC,uBAS7CkD,EAAA,WAOE,SAAAA,EAA2CC,EAAuCC,GAAlF,IAAA3W,EAAAjD,KAAkFA,KAAA4Z,MAAAA,EAL1E5Z,KAAA6Z,mBAAqB,IAAIzK,IAM/BuK,EAAQ3V,SAAQ,SAAApE,GAAK,OAAAA,EAAEka,QAAU7W,KACjCjD,KAAK+Z,SAAWJ,EAAQpL,QAAQyL,UAqDpC,OAzCEN,EAAAxZ,UAAAwJ,iBAAA,SAAiBzB,EAAsBgS,EAAmBC,GAExD,OADela,KAAKma,eAAeF,GACrBvQ,iBAAiBzB,EAASgS,EAAWC,IAYrDR,EAAAxZ,UAAAka,uBAAA,SAAuBpZ,EAAgBiZ,EAAmBC,GAExD,OADela,KAAKma,eAAeF,GACrBG,uBAAuBpZ,EAAQiZ,EAAWC,IAM1DR,EAAAxZ,UAAAma,QAAA,WAAoB,OAAOra,KAAK4Z,OAGhCF,EAAAxZ,UAAAia,eAAA,SAAeF,GACb,IAAMK,EAASta,KAAK6Z,mBAAmB9C,IAAIkD,GAC3C,GAAIK,EACF,OAAOA,EAIT,IADA,IAAMX,EAAU3Z,KAAK+Z,SACZvZ,EAAI,EAAGA,EAAImZ,EAAQhZ,OAAQH,IAAK,CACvC,IAAM+Z,EAASZ,EAAQnZ,GACvB,GAAI+Z,EAAOC,SAASP,GAElB,OADAja,KAAK6Z,mBAAmBpK,IAAIwK,EAAWM,GAChCA,EAGX,MAAM,IAAI1S,MAAM,2CAA2CoS,IA5DlDP,EAAY5Y,EAAA,CADxBoV,EAAAA,aAQcC,EAAAA,EAAAC,EAAAA,OAAOqD,iCAAqEV,EAAAA,UAP9EW,GAAb,gBAiEE,SAAAe,EAAoBzF,GAAAhV,KAAAgV,KAAAA,EAgBtB,OAPEyF,EAAAva,UAAAka,uBAAA,SAAuBnS,EAAiBgS,EAAmBC,GACzD,IAAMlZ,EAAsB6B,IAASiQ,qBAAqB9S,KAAKgV,KAAM/M,GACrE,IAAKjH,EACH,MAAM,IAAI6G,MAAM,4BAA4B7G,EAAM,cAAciZ,GAElE,OAAOja,KAAK0J,iBAAiB1I,EAAQiZ,EAAWC,IAEpDO,kBChGA,SAAAC,IAGY1a,KAAA2a,WAAa,IAAIC,IAgB7B,OAdEF,EAAAxa,UAAA2a,UAAA,SAAUC,GAAV,IAAA7X,EAAAjD,KACQ+a,EAAY,IAAIH,IACtBE,EAAO9W,SAAQ,SAAA6J,GACR5K,EAAK0X,WAAWK,IAAInN,KACvB5K,EAAK0X,WAAWjM,IAAIb,GACpBkN,EAAUrM,IAAIb,OAGlB7N,KAAKib,cAAcF,IAGrBL,EAAAxa,UAAA+a,cAAA,SAAcF,KAEdL,EAAAxa,UAAAgb,aAAA,WAA2B,OAAOvb,MAAMwb,KAAKnb,KAAK2a,aAjBvCD,EAAgB5Z,EAAA,CAD5BoV,EAAAA,cACYwE,oBAwBX,SAAAU,EAAsCpG,GAAtC,IAAA/R,EACED,EAAApC,KAAAZ,OAAOA,YAD6BiD,EAAA+R,KAAAA,EAF9B/R,EAAAoY,WAAa,IAAIT,IACjB3X,EAAAqY,YAAc,IAAIV,IAGxB3X,EAAKoY,WAAW3M,IAAIsG,EAAKuG,QAuB7B,OA5ByCrX,EAAAA,EAAAA,GAQ/BkX,EAAAlb,UAAAsb,iBAAR,SAAyBV,EAAqB7M,GAA9C,IAAAhL,EAAAjD,KACE8a,EAAO9W,SAAQ,SAAC6J,GACd,IAAM4N,EAAUxY,EAAK+R,KAAK3R,cAAc,SACxCoY,EAAQlP,YAAcsB,EACtB5K,EAAKqY,YAAY5M,IAAIT,EAAKvC,YAAY+P,QAI1CL,EAAAlb,UAAAwb,QAAA,SAAQC,GACN3b,KAAKwb,iBAAiBxb,KAAK2a,WAAYgB,GACvC3b,KAAKqb,WAAW3M,IAAIiN,IAGtBP,EAAAlb,UAAA0b,WAAA,SAAWD,GAAwB3b,KAAKqb,WAAWQ,OAAOF,IAE1DP,EAAAlb,UAAA+a,cAAA,SAAcF,GAAd,IAAA9X,EAAAjD,KACEA,KAAKqb,WAAWrX,SAAQ,SAAA2X,GAAY,OAAA1Y,EAAKuY,iBAAiBT,EAAWY,OAGvEP,EAAAlb,UAAA4b,YAAA,WAAsB9b,KAAKsb,YAAYtX,SAAQ,SAAA+X,GAAa,OAAAlZ,IAASiJ,OAAOiQ,OA3BjEX,EAAmBta,EAAA,CAD/BoV,EAAAA,aAIcC,EAAAA,EAAAC,EAAAA,OAAOC,EAAAA,4CAHT+E,IAA4BV,GCrB5BsB,EAAyC,CACpDC,IAAO,6BACPC,MAAS,+BACTC,MAAS,+BACTC,IAAO,uCACPC,MAAS,iCAGLC,EAAkB,UAEXC,EAAY,iBACZC,EAAe,oBAU5B,SAAgBC,EACZC,EAAgB5B,EAA0B9Z,GAC5C,IAAK,IAAIR,EAAI,EAAGA,EAAIsa,EAAOna,OAAQH,IAAK,CACtC,IAAIqN,EAAQiN,EAAOta,GAEfb,MAAMgd,QAAQ9O,GAChB4O,EAAcC,EAAQ7O,EAAO7M,IAE7B6M,EAAQA,EAAM+O,QAAQN,EAAiBI,GACvC1b,EAAOyB,KAAKoL,IAGhB,OAAO7M,EAGT,SAAS6b,EAAuBC,GAC9B,OAAO,SAACxK,IAEuB,IADAwK,EAAaxK,KAGxCA,EAAMnI,iBACNmI,EAAMlI,aAAc,IAM1B,IAAA2S,EAAA,WAIE,SAAAA,EACYC,EAAoCC,EACpBC,GADhBld,KAAAgd,aAAAA,EAAoChd,KAAAid,iBAAAA,EACpBjd,KAAAkd,MAAAA,EALpBld,KAAAmd,iBAAmB,IAAI/N,IAM7BpP,KAAKod,gBAAkB,IAAIC,EAAoBL,GAkCnD,OA/BED,EAAA7c,UAAAod,eAAA,SAAerV,EAAc+C,GAC3B,IAAK/C,IAAY+C,EACf,OAAOhL,KAAKod,gBAEd,OAAQpS,EAAKuS,eACX,KAAKC,EAAAA,kBAAkBC,SACrB,IAAIC,EAAW1d,KAAKmd,iBAAiBpG,IAAI/L,EAAK2S,IAO9C,OANKD,IACHA,EAAW,IAAIE,EACX5d,KAAKgd,aAAchd,KAAKid,iBAAkBjS,EAAMhL,KAAKkd,OACzDld,KAAKmd,iBAAiB1N,IAAIzE,EAAK2S,GAAID,IAEDA,EAAUG,YAAY5V,GACnDyV,EAET,KAAKF,EAAAA,kBAAkBM,OACvB,KAAKN,EAAAA,kBAAkBO,UACrB,OAAO,IAAIC,EAAkBhe,KAAKgd,aAAchd,KAAKid,iBAAkBhV,EAAS+C,GAClF,QACE,IAAKhL,KAAKmd,iBAAiBnC,IAAIhQ,EAAK2S,IAAK,CACvC,IAAM7C,EAAS2B,EAAczR,EAAK2S,GAAI3S,EAAK8P,OAAQ,IACnD9a,KAAKid,iBAAiBpC,UAAUC,GAChC9a,KAAKmd,iBAAiB1N,IAAIzE,EAAK2S,GAAI3d,KAAKod,iBAE1C,OAAOpd,KAAKod,kBAKlBL,EAAA7c,UAAA+d,MAAA,aACAlB,EAAA7c,UAAAge,IAAA,aAxCWnB,EAAmBjc,EAAA,CAD/BoV,EAAAA,aAOMC,EAAAA,EAAAC,EAAAA,OAAO+H,EAAAA,gCADczE,EAAwC0B,EAAmB3I,UAL1EsK,GAAb,GA2CAM,EAAA,WAGE,SAAAA,EAAoBL,GAAAhd,KAAAgd,aAAAA,EAFpBhd,KAAAoe,KAA6B5e,OAAOW,OAAO,MA8H7C,OA1HEkd,EAAAnd,UAAAme,QAAA,aAIAhB,EAAAnd,UAAAmD,cAAA,SAAc6E,EAAcoW,GAC1B,OAAIA,EAGKhb,SAAS8J,gBAAgB4O,EAAesC,IAAcA,EAAWpW,GAGnE5E,SAASD,cAAc6E,IAGhCmV,EAAAnd,UAAA4M,cAAA,SAAcpK,GAAsB,OAAOY,SAASwJ,cAAcpK,IAElE2a,EAAAnd,UAAAqe,WAAA,SAAW7b,GAAsB,OAAOY,SAASgK,eAAe5K,IAEhE2a,EAAAnd,UAAAwL,YAAA,SAAYM,EAAaJ,GAAuBI,EAAON,YAAYE,IAEnEyR,EAAAnd,UAAA6L,aAAA,SAAaC,EAAaJ,EAAe4S,GACnCxS,GACFA,EAAOD,aAAaH,EAAU4S,IAIlCnB,EAAAnd,UAAAuL,YAAA,SAAYO,EAAaH,GACnBG,GACFA,EAAOP,YAAYI,IAIvBwR,EAAAnd,UAAAue,kBAAA,SAAkBC,EAA4BC,GAC5C,IAAIva,EAAoC,iBAAnBsa,EAA8Bpb,SAAS8F,cAAcsV,GACvBA,EACnD,IAAKta,EACH,MAAM,IAAIyD,MAAM,iBAAiB6W,EAAc,gCAKjD,OAHKC,IACHva,EAAGmI,YAAc,IAEZnI,GAGTiZ,EAAAnd,UAAAkL,WAAA,SAAW5D,GAAkB,OAAOA,EAAK4D,YAEzCiS,EAAAnd,UAAAgL,YAAA,SAAY1D,GAAkB,OAAOA,EAAK0D,aAE1CmS,EAAAnd,UAAAwN,aAAA,SAAatJ,EAAS8D,EAAcxF,EAAe4b,GACjD,GAAIA,EAAW,CACbpW,EAAOoW,EAAY,IAAMpW,EAGzB,IAAM0W,EAAe5C,EAAesC,GAChCM,EACFxa,EAAG2L,eAAe6O,EAAc1W,EAAMxF,GAEtC0B,EAAGsJ,aAAaxF,EAAMxF,QAGxB0B,EAAGsJ,aAAaxF,EAAMxF,IAI1B2a,EAAAnd,UAAA8P,gBAAA,SAAgB5L,EAAS8D,EAAcoW,GACrC,GAAIA,EAAW,CAGb,IAAMM,EAAe5C,EAAesC,GAChCM,EACFxa,EAAG6L,kBAAkB2O,EAAc1W,GAKnC9D,EAAG4L,gBAAmBsO,EAAS,IAAIpW,QAGrC9D,EAAG4L,gBAAgB9H,IAIvBmV,EAAAnd,UAAAsO,SAAA,SAASpK,EAAS8D,GAAsB9D,EAAGkK,UAAUI,IAAIxG,IAEzDmV,EAAAnd,UAAAyO,YAAA,SAAYvK,EAAS8D,GAAsB9D,EAAGkK,UAAUxC,OAAO5D,IAE/DmV,EAAAnd,UAAA2O,SAAA,SAASzK,EAASyJ,EAAenL,EAAYmc,GACvCA,EAAQC,EAAAA,oBAAoBC,SAC9B3a,EAAGyJ,MAAM1F,YACL0F,EAAOnL,EAAUmc,EAAQC,EAAAA,oBAAoBE,UAAa,YAAc,IAE5E5a,EAAGyJ,MAAMA,GAASnL,GAItB2a,EAAAnd,UAAA8O,YAAA,SAAY5K,EAASyJ,EAAegR,GAC9BA,EAAQC,EAAAA,oBAAoBC,SAC9B3a,EAAGyJ,MAAMoR,eAAepR,GAIxBzJ,EAAGyJ,MAAMA,GAAS,IAItBwP,EAAAnd,UAAAiI,YAAA,SAAY/D,EAAS8D,EAAcxF,GACjCwc,EAAqBhX,EAAM,YAC3B9D,EAAG8D,GAAQxF,GAGb2a,EAAAnd,UAAAwM,SAAA,SAASlF,EAAW9E,GAAuB8E,EAAKuD,UAAYrI,GAE5D2a,EAAAnd,UAAAif,OAAA,SAAOne,EAAwCsR,EAAe6F,GAG5D,OADA+G,EAAqB5M,EAAO,YACN,iBAAXtR,EACUhB,KAAKgd,aAAa5C,uBACjCpZ,EAAQsR,EAAOuK,EAAuB1E,IAEzBnY,KAAKgd,aAAatT,iBAC1B1I,EAAQsR,EAAOuK,EAAuB1E,KAErDkF,EA/HA,GAiIM+B,EAAqB,IAAIC,WAAW,GAC1C,SAASH,EAAqBhX,EAAcoX,GAC1C,GAAIpX,EAAKmX,WAAW,KAAOD,EACzB,MAAM,IAAIvX,MACN,uBAAuByX,EAAQ,IAAIpX,EAAI,oGAI/C,IAAA0V,EAAA,SAAA5a,GAIE,SAAA4a,EACIZ,EAA4BC,EACpBsC,EAA0BrC,GAFtC,IAAAja,EAGED,EAAApC,KAAAZ,KAAMgd,IAAahd,KADTiD,EAAAsc,UAAAA,EAEV,IA/NiCC,EA+N3B1E,EAAS2B,EAAcS,EAAQ,IAAMqC,EAAU5B,GAAI4B,EAAUzE,OAAQ,WAC3EmC,EAAiBpC,UAAUC,GAE3B7X,EAAKwc,aAlO4BD,EAkOOtC,EAAQ,IAAMqC,EAAU5B,GAjO3DnB,EAAaI,QAAQN,EAAiBkD,IAkO3Cvc,EAAKyc,SA/NT,SAAkCF,GAChC,OAAOjD,EAAUK,QAAQN,EAAiBkD,GA8NxBG,CAAkBzC,EAAQ,IAAMqC,EAAU5B,MAU9D,OAtBgDzZ,EAAAA,EAAAA,GAe9C0Z,EAAA1d,UAAA2d,YAAA,SAAY5V,GAAgBjF,EAAA9C,UAAMwN,aAAY9M,KAAAZ,KAACiI,EAASjI,KAAK0f,SAAU,KAEvE9B,EAAA1d,UAAAmD,cAAA,SAAc2I,EAAa9D,GACzB,IAAM9D,EAAKpB,EAAA9C,UAAMmD,cAAazC,KAAAZ,KAACgM,EAAQ9D,GAEvC,OADAlF,EAAA9C,UAAMwN,aAAY9M,KAAAZ,KAACoE,EAAIpE,KAAKyf,YAAa,IAClCrb,GAEXwZ,EAtBA,CAAgDP,GAwBhDW,EAAA,SAAAhb,GAGE,SAAAgb,EACIhB,EAAoCC,EAC5B2C,EAAqBL,GAFjC,IAAAtc,EAGED,EAAApC,KAAAZ,KAAMgd,IAAahd,KAFmBiD,EAAAga,iBAAAA,EAC5Bha,EAAA2c,OAAAA,EAAqB3c,EAAAsc,UAAAA,EAE3BA,EAAUhC,gBAAkBC,EAAAA,kBAAkBO,UAChD9a,EAAK8K,WAAc6R,EAAeC,aAAa,CAACC,KAAM,SAEtD7c,EAAK8K,WAAc6R,EAAejb,mBAEpC1B,EAAKga,iBAAiBvB,QAAQzY,EAAK8K,YAEnC,IADA,IAAM+M,EAAS2B,EAAc8C,EAAU5B,GAAI4B,EAAUzE,OAAQ,IACpDta,EAAI,EAAGA,EAAIsa,EAAOna,OAAQH,IAAK,CACtC,IAAMib,EAAUnY,SAASD,cAAc,SACvCoY,EAAQlP,YAAcuO,EAAOta,GAC7ByC,EAAK8K,WAAWrC,YAAY+P,YAoBlC,OArCgCvX,EAAAA,EAAAA,GAqBtB8Z,EAAA9d,UAAA6f,iBAAR,SAAyBvY,GAAkB,OAAOA,IAASxH,KAAK4f,OAAS5f,KAAK+N,WAAavG,GAE3FwW,EAAA9d,UAAAme,QAAA,WAAYre,KAAKid,iBAAiBrB,WAAW5b,KAAK+N,aAElDiQ,EAAA9d,UAAAwL,YAAA,SAAYM,EAAaJ,GACvB,OAAO5I,EAAA9C,UAAMwL,YAAW9K,KAAAZ,KAACA,KAAK+f,iBAAiB/T,GAASJ,IAE1DoS,EAAA9d,UAAA6L,aAAA,SAAaC,EAAaJ,EAAe4S,GACvC,OAAOxb,EAAA9C,UAAM6L,aAAYnL,KAAAZ,KAACA,KAAK+f,iBAAiB/T,GAASJ,EAAU4S,IAErER,EAAA9d,UAAAuL,YAAA,SAAYO,EAAaH,GACvB,OAAO7I,EAAA9C,UAAMuL,YAAW7K,KAAAZ,KAACA,KAAK+f,iBAAiB/T,GAASH,IAE1DmS,EAAA9d,UAAAkL,WAAA,SAAW5D,GACT,OAAOxH,KAAK+f,iBAAiB/c,EAAA9C,UAAMkL,WAAUxK,KAAAZ,KAACA,KAAK+f,iBAAiBvY,MAExEwW,EArCA,CAAgCX,GCtP1B2C,EACsB,oBAATC,MAA0BA,KAAyB,YAC7D,SAASC,GAAqB,MAAO,kBAAoBA,GAC5DC,EAAyCH,EAAW,oBACpDI,EAA+CJ,EAAW,uBAE1DK,EAAuC,GAQvCC,EAAa,oCAIbC,EAAkB,WACtB,IAAMC,EACe,oBAATP,MAA0BA,KAAaD,EAAW,wBAC9D,GAAIQ,EAAmB,CACrB,IAAMC,EAAqC,GAE3C,OADAD,EAAkBxc,SAAQ,SAAAiW,GAAewG,EAAIxG,GAAaA,KACnDwG,GANY,GAYjBC,EAAqB,SAASzG,GAClC,QAAKsG,GAGEA,EAAe1gB,eAAeoa,IAUjC0G,EAAiB,SAAoBrO,GACzC,IAAMsO,EAAaP,EAAY/N,EAAMtH,MACrC,GAAK4V,EAAL,CAGA,IAAMC,EAAwB7gB,KAAK4gB,GACnC,GAAKC,EAAL,CAGA,IAAMtY,EAAY,CAAC+J,GACnB,GAAyB,IAArBuO,EAAUlgB,OAGZ,OADMmgB,EAAWD,EAAU,IACdE,OAASd,KAAKe,QAElBF,EAASC,KAAKE,IAAIH,EAAS5G,QAASla,KAAMuI,GAE1CuY,EAAS5G,QAAQrZ,MAAMb,KAAMuI,GAMtC,IADA,IAAM2Y,EAAcL,EAAUtS,QACrB/N,EAAI,EAAGA,EAAI0gB,EAAYvgB,SAGK,IAA9B2R,EAAcgO,GAHmB9f,IAAK,CAM3C,IAAMsgB,GAAAA,EAAWI,EAAY1gB,IAChBugB,OAASd,KAAKe,QAEzBF,EAASC,KAAKE,IAAIH,EAAS5G,QAASla,KAAMuI,GAE1CuY,EAAS5G,QAAQrZ,MAAMb,KAAMuI,OAOrC4Y,GAAA,SAAAne,GACE,SAAAme,EACsBhU,EAAkBiU,EACHC,GAFrC,IAAApe,EAGED,EAAApC,KAAAZ,KAAMmN,IAAInN,YAF4BiD,EAAAme,OAAAA,EAIjCC,GAAeC,EAAAA,iBAAiBD,IACnCpe,EAAKse,eA0HX,OAjIqCrd,EAAAA,EAAAA,GAW3Bid,EAAAjhB,UAAAqhB,WAAR,WACE,GAAqB,oBAAVC,OAA0BA,OAAUA,MAAMthB,YAGhDshB,MAAMthB,UAAkC,wCAA7C,CAIA,IAAMuhB,EAAYD,MAAMthB,UAAkC,wCACtDshB,MAAMthB,UAAUwhB,yBACpBF,MAAMthB,UAAUwhB,yBAA2B,WACrC1hB,OACFA,KAAKsgB,IAAc,GAQrBmB,GAAYA,EAAS5gB,MAAMb,KAAMU,cAMrCygB,EAAAjhB,UAAAsa,SAAA,SAASP,GAA8B,OAAO,GAE9CkH,EAAAjhB,UAAAwJ,iBAAA,SAAiBzB,EAAsBgS,EAAmBC,GAA1D,IAAAjX,EAAAjD,KAeQ2hB,EAAe1Z,EAAQkY,GACzBhI,EAA0B+B,EAG9B,IAAIyH,GAAkB5I,EAAAA,OAAO6I,oBAAqBlB,EAAmBzG,GA+BnEhS,EAA2B,iBAAEgS,EAAW9B,GAAU,OA/B8B,CAChF,IAAIyI,EAAaP,EAAYpG,GACxB2G,IACHA,EAAaP,EAAYpG,GAAa+F,EAzI9B,UAyImD/F,EA1IrD,UA4IR,IAAI4G,EAAyB5Y,EAAgB2Y,GACvCiB,EAA2BhB,GAAaA,EAAUlgB,OAAS,EAC5DkgB,IACHA,EAAa5Y,EAAgB2Y,GAAc,IAG7C,IAAMG,EAAOL,EAAmBzG,GAAagG,KAAK6B,KAAO7B,KAAKe,QAC9D,GAAyB,IAArBH,EAAUlgB,OACZkgB,EAAUpe,KAAK,CAACse,KAAMA,EAAM7G,QAAS/B,QAChC,CAEL,IADA,IAAI4J,GAAqB,EAChBvhB,EAAI,EAAGA,EAAIqgB,EAAUlgB,OAAQH,IACpC,GAAIqgB,EAAUrgB,GAAG0Z,UAAY/B,EAAU,CACrC4J,GAAqB,EACrB,MAGCA,GACHlB,EAAUpe,KAAK,CAACse,KAAMA,EAAM7G,QAAS/B,IAIpC0J,GACH5Z,EAAQkY,GAAoBlG,EAAW0G,GAAgB,GAK3D,OAAO,WAAM,OAAA1d,EAAK2G,oBAAoB3B,EAASgS,EAAW9B,KAG5DgJ,EAAAjhB,UAAA0J,oBAAA,SAAoB5I,EAAaiZ,EAAmB9B,GAClD,IAAI6J,EAAmBhhB,EAAOof,GAE9B,IAAK4B,EACH,OAAOhhB,EAA6B,oBAAEH,MAAMG,EAAQ,CAACiZ,EAAW9B,GAAU,IAE5E,IAAIyI,EAAaP,EAAYpG,GACzB4G,EAAwBD,GAAc5f,EAAO4f,GACjD,IAAKC,EAGH,OAAO7f,EAA6B,oBAAEH,MAAMG,EAAQ,CAACiZ,EAAW9B,GAAU,IAK5E,IADA,IAAI8J,GAAQ,EACHzhB,EAAI,EAAGA,EAAIqgB,EAAUlgB,OAAQH,IAEpC,GAAIqgB,EAAUrgB,GAAG0Z,UAAY/B,EAAU,CACrC8J,GAAQ,EACRpB,EAAUqB,OAAO1hB,EAAG,GACpB,MAGAyhB,EACuB,IAArBpB,EAAUlgB,QAEZqhB,EAAiBnhB,MAAMG,EAAQ,CAACiZ,EAAW0G,GAAgB,IAK7D3f,EAA6B,oBAAEH,MAAMG,EAAQ,CAACiZ,EAAW9B,GAAU,KA9H5DgJ,EAAergB,EAAA,CAD3BoV,EAAAA,aAGMC,EAAAA,EAAAC,EAAAA,OAAOC,EAAAA,WACPF,EAAAA,EAAAqD,EAAAA,YAAYrD,EAAAA,EAAAC,EAAAA,OAAO+L,EAAAA,4CADwBpJ,EAAAA,OAAMvZ,UAF3C2hB,GAAb,CAAqC1G,GCxF/B2H,GAAc,CAElBC,KAAO,EACPC,UAAY,EACZC,SAAW,EACXC,QAAU,EACVC,WAAa,EACbC,SAAW,EACXC,UAAY,EACZC,OAAS,EACTC,SAAW,EAEXC,OAAS,EACTC,YAAc,EACdC,WAAa,EACbC,UAAY,EACZC,aAAe,EACfC,SAAW,EACXC,UAAY,EAEZC,OAAS,EACTC,SAAW,EAEXC,QAAU,EACVC,aAAe,EACfC,YAAc,EACdC,WAAa,EACbC,cAAgB,EAEhBC,OAAS,EACTC,WAAa,EACbC,YAAc,EACdC,SAAW,EACXC,WAAa,EAEbC,KAAO,GASIC,GAAwB,IAAI1N,EAAAA,eAAoC,uBAehE2N,GAAgB,IAAI3N,EAAAA,eAA6B,gBAc9D4N,GAAA,WADA,SAAAA,IAOEpkB,KAAAqkB,OAAmB,GAkBnBrkB,KAAAskB,UAAqC,GAoCvC,OAZEF,EAAAlkB,UAAAqkB,YAAA,SAAYtc,GACV,IAAMuc,EAAK,IAAIC,OAASxc,EAASjI,KAAK0kB,SAKtC,IAAK,IAAMzK,KAHXuK,EAAGzN,IAAI,SAAStH,IAAI,CAACkV,QAAQ,IAC7BH,EAAGzN,IAAI,UAAUtH,IAAI,CAACkV,QAAQ,IAEN3kB,KAAKskB,UAC3BE,EAAGzN,IAAIkD,GAAWxK,IAAIzP,KAAKskB,UAAUrK,IAGvC,OAAOuK,GA1DEJ,EAAmBtjB,EAAA,CAD/BoV,EAAAA,cACYkO,GAAb,kBAgEE,SAAAQ,EACsBzX,EACqB0X,EAAsCjc,EAClCkc,GAH/C,IAAA7hB,EAIED,EAAApC,KAAAZ,KAAMmN,IAAInN,YAF+BiD,EAAA4hB,QAAAA,EAAsC5hB,EAAA2F,QAAAA,EAClC3F,EAAA6hB,OAAAA,IA+EjD,OAnF0C5gB,EAAAA,EAAAA,GAQxC0gB,EAAA1kB,UAAAsa,SAAA,SAASP,GACP,SAAKmI,GAAYviB,eAAeoa,EAAUxW,iBAAmBzD,KAAK+kB,cAAc9K,SAI1EtR,OAAe8b,SAAWzkB,KAAK8kB,UACnC9kB,KAAK4I,QAAQoc,KACT,QAAQ/K,EAAS,qGAEd,KAMX2K,EAAA1kB,UAAAwJ,iBAAA,SAAiBzB,EAAsBgS,EAAmBC,GAA1D,IAAAjX,EAAAjD,KACQ+gB,EAAO/gB,KAAK8Z,QAAQO,UAK1B,GAJAJ,EAAYA,EAAUxW,eAIhBkF,OAAe8b,QAAUzkB,KAAK8kB,OAAQ,CAI1C,IAAIG,GAAqB,EACrBC,EAAuB,WAAQD,GAAqB,GA4BxD,OA1BAjlB,KAAK8kB,SACA5N,MAAK,WAEJ,IAAMvO,OAAe8b,OAInB,OAHAxhB,EAAK2F,QAAQoc,KACT,0EACJE,EAAa,cAIVD,IAGHC,EAAajiB,EAAKyG,iBAAiBzB,EAASgS,EAAWC,OAG1DiL,OAAM,WACLliB,EAAK2F,QAAQoc,KACT,QAAQ/K,EAAS,uEAErBiL,EAAa,gBAMZ,WAAQA,KAGjB,OAAOnE,EAAKqE,mBAAkB,WAE5B,IAAMZ,EAAKvhB,EAAK4hB,QAAQN,YAAYtc,GAC9BkQ,EAAW,SAASkN,GACxBtE,EAAKuE,YAAW,WAAapL,EAAQmL,OAGvC,OADAb,EAAGjb,GAAG0Q,EAAW9B,GACV,WACLqM,EAAGe,IAAItL,EAAW9B,GAEQ,mBAAfqM,EAAGnG,SACZmG,EAAGnG,eAMXuG,EAAA1kB,UAAA6kB,cAAA,SAAc9K,GAA8B,OAAOja,KAAK6kB,QAAQR,OAAOmB,QAAQvL,IAAc,GAlFlF2K,EAAoB9jB,EAAA,CADhCoV,EAAAA,aAGMC,EAAAA,EAAAC,EAAAA,OAAOC,EAAAA,WACPF,EAAAA,EAAAC,EAAAA,OAAO8N,KACP/N,EAAAA,EAAAqD,EAAAA,YAAYrD,EAAAA,EAAAC,EAAAA,OAAO+N,mCAD4BC,GAAsCqB,EAAAA,SAAOjmB,UAHtFolB,IAA6BnK,GCtIpCiL,GAAgB,CAAC,MAAO,UAAW,OAAQ,SAK3CC,GAA2E,CAC/EC,IAAO,SAACtT,GAAyB,OAAAA,EAAMuT,QACvCC,QAAW,SAACxT,GAAyB,OAAAA,EAAMyT,SAC3CC,KAAQ,SAAC1T,GAAyB,OAAAA,EAAM2T,SACxCC,MAAS,SAAC5T,GAAyB,OAAAA,EAAM6T,WAQ3CC,GAAA,SAAApjB,GAKE,SAAAojB,EAA8BjZ,UAAYnK,EAAApC,KAAAZ,KAAMmN,IAAInN,WAyGtD,OA9GqCkE,EAAAA,EAAAA,KAAxBkiB,EAYXA,EAAAlmB,UAAAsa,SAAA,SAASP,GAA8B,OAAoD,MAA7CoM,EAAgBC,eAAerM,IAU7EmM,EAAAlmB,UAAAwJ,iBAAA,SAAiBzB,EAAsBgS,EAAmBC,GACxD,IAAMqM,EAAcF,EAAgBC,eAAerM,GAE7CuM,EACFH,EAAgBI,cAAcF,EAAqB,QAAGrM,EAASla,KAAK8Z,QAAQO,WAEhF,OAAOra,KAAK8Z,QAAQO,UAAU+K,mBAAkB,WAC9C,OAAOviB,IAAS8G,YAAY1B,EAASse,EAA0B,aAAGC,OAI/DJ,EAAAE,eAAP,SAAsBrM,GACpB,IAAMyM,EAAkBzM,EAAUxW,cAAckjB,MAAM,KAEhDC,EAAeF,EAAMR,QAC3B,GAAsB,IAAjBQ,EAAM/lB,QAAoC,YAAjBimB,GAA+C,UAAjBA,EAC1D,OAAO,KAGT,IAAM3lB,EAAMolB,EAAgBQ,cAAcH,EAAMI,OAE5CC,EAAU,GAUd,GATArB,GAAc1hB,SAAQ,SAAAgjB,GACpB,IAAMC,EAAgBP,EAAMlB,QAAQwB,GAChCC,GAAS,IACXP,EAAMxE,OAAO+E,EAAO,GACpBF,GAAWC,EAAe,QAG9BD,GAAW9lB,EAES,GAAhBylB,EAAM/lB,QAA8B,IAAfM,EAAIN,OAE3B,OAAO,KAGT,IAAMumB,EAAgC,GAGtC,OAFAA,EAAqB,aAAIN,EACzBM,EAAgB,QAAIH,EACbG,GAGFd,EAAAe,gBAAP,SAAuB7U,GACrB,IAAIyU,EAAU,GACV9lB,EAAM4B,IAASwP,YAAYC,GAgB/B,MAdY,OADZrR,EAAMA,EAAIwC,eAERxC,EAAM,QACW,MAARA,IACTA,EAAM,OAERykB,GAAc1hB,SAAQ,SAAAgjB,GAChBA,GAAgB/lB,KAEdmmB,EADmBzB,GAAqBqB,IACzB1U,KACjByU,GAAWC,EAAe,SAIhCD,GAAW9lB,GAWNmlB,EAAAK,cAAP,SAAqBM,EAAc7M,EAAmB6G,GACpD,OAAO,SAACzO,GACF+T,EAAgBc,gBAAgB7U,KAAWyU,GAC7ChG,EAAKuE,YAAW,WAAM,OAAApL,EAAQ5H,QAM7B8T,EAAAS,cAAP,SAAqBQ,GAEnB,OAAQA,GACN,IAAK,MACH,MAAO,SACT,QACE,OAAOA,IA3GFjB,EAAeC,EAAAvlB,EAAA,CAD3BoV,EAAAA,aAMcC,EAAAA,EAAAC,EAAAA,OAAOC,EAAAA,4CALT+P,GAAb,CAAqC3L,GCsDrC6M,GAAA,4BA2DE,SAAAC,EAAsCvS,GAAtC,IAAA/R,EAAmDD,EAAApC,KAAAZ,OAAOA,YAApBiD,EAAA+R,KAAAA,IAqDxC,OAtDsC9Q,EAAAA,EAAAA,GAGpCqjB,EAAArnB,UAAAsnB,SAAA,SAASC,EAAsB/kB,GAC7B,GAAa,MAATA,EAAe,OAAO,KAC1B,OAAQ+kB,GACN,KAAKC,EAAAA,gBAAgBC,KACnB,OAAOjlB,EACT,KAAKglB,EAAAA,gBAAgBE,KACnB,OAAIllB,aAAiBmlB,GAAqBnlB,EAAMolB,uCAChD9nB,KAAK+nB,kBAAkBrlB,EAAO,QACvBslB,EAAAA,eAAchoB,KAAKgV,KAAMvC,OAAO/P,KACzC,KAAKglB,EAAAA,gBAAgBO,MACnB,OAAIvlB,aAAiBwlB,GAAsBxlB,EAAMolB,uCACjD9nB,KAAK+nB,kBAAkBrlB,EAAO,SACvBylB,EAAAA,gBAAezlB,IACxB,KAAKglB,EAAAA,gBAAgBU,OACnB,GAAI1lB,aAAiB2lB,GAAgB,OAAO3lB,EAAMolB,sCAElD,MADA9nB,KAAK+nB,kBAAkBrlB,EAAO,UACxB,IAAImF,MAAM,yCAClB,KAAK6f,EAAAA,gBAAgBY,IACnB,OAAI5lB,aAAiB6lB,IAAuB7lB,aAAiB8lB,GAEpD9lB,EAAMolB,uCAEf9nB,KAAK+nB,kBAAkBrlB,EAAO,OACvB+lB,EAAAA,cAAahW,OAAO/P,KAC7B,KAAKglB,EAAAA,gBAAgBgB,aACnB,GAAIhmB,aAAiB6lB,GACnB,OAAO7lB,EAAMolB,sCAGf,MADA9nB,KAAK+nB,kBAAkBrlB,EAAO,eACxB,IAAImF,MACN,iFACN,QACE,MAAM,IAAIA,MAAM,8BAA8B4f,EAAG,wCAI/CF,EAAArnB,UAAA6nB,kBAAR,SAA0BrlB,EAAYimB,GACpC,GAAIjmB,aAAiBkmB,GACnB,MAAM,IAAI/gB,MACN,mBAAmB8gB,EAAY,WAAWjmB,EAAMmmB,cAAa,uCAKrEtB,EAAArnB,UAAA4oB,wBAAA,SAAwBpmB,GAA2B,OAAO,IAAImlB,GAAanlB,IAC3E6kB,EAAArnB,UAAA6oB,yBAAA,SAAyBrmB,GAA4B,OAAO,IAAIwlB,GAAcxlB,IAC9E6kB,EAAArnB,UAAA8oB,0BAAA,SAA0BtmB,GAA6B,OAAO,IAAI2lB,GAAe3lB,IACjF6kB,EAAArnB,UAAA+oB,uBAAA,SAAuBvmB,GAA0B,OAAO,IAAI8lB,GAAY9lB,IACxE6kB,EAAArnB,UAAAgpB,+BAAA,SAA+BxmB,GAC7B,OAAO,IAAI6lB,GAAoB7lB,IApDtB6kB,EAAgBzmB,EAAA,CAD5BoV,EAAAA,aAEcC,EAAAA,EAAAC,EAAAA,OAAOC,EAAAA,4CADTkR,IAAyBD,IAwDtCsB,GAAA,WACE,SAAAA,EAAmBd,GAAA9nB,KAAA8nB,sCAAAA,EAUrB,OAJEc,EAAA1oB,UAAAipB,SAAA,WACE,MAAO,0CAA0CnpB,KAAK8nB,sCAClD,sCAERc,EAXA,GAaAf,GAAA,SAAA7kB,GAAA,SAAA6kB,mDAEA,OAF2B3jB,EAAAA,EAAAA,GACzB2jB,EAAA3nB,UAAA2oB,YAAA,WAAgB,MAAO,QACzBhB,EAFA,CAA2Be,IAG3BV,GAAA,SAAAllB,GAAA,SAAAklB,mDAEA,OAF4BhkB,EAAAA,EAAAA,GAC1BgkB,EAAAhoB,UAAA2oB,YAAA,WAAgB,MAAO,SACzBX,EAFA,CAA4BU,IAG5BP,GAAA,SAAArlB,GAAA,SAAAqlB,mDAEA,OAF6BnkB,EAAAA,EAAAA,GAC3BmkB,EAAAnoB,UAAA2oB,YAAA,WAAgB,MAAO,UACzBR,EAFA,CAA6BO,IAG7BJ,GAAA,SAAAxlB,GAAA,SAAAwlB,mDAEA,OAF0BtkB,EAAAA,EAAAA,GACxBskB,EAAAtoB,UAAA2oB,YAAA,WAAgB,MAAO,OACzBL,EAFA,CAA0BI,IAG1BL,GAAA,SAAAvlB,GAAA,SAAAulB,mDAEA,OAFkCrkB,EAAAA,EAAAA,GAChCqkB,EAAAroB,UAAA2oB,YAAA,WAAgB,MAAO,eACzBN,EAFA,CAAkCK,OC3MCQ,EAAAA,qBADtBC,GAAwD,CACnE,CAAC3S,QAASyL,EAAAA,YAAamH,SAAQC,IAC/B,CAAC7S,QAAS8S,EAAAA,qBAAsBF,SAsBlC,WACE5hB,EAAkBI,cAClB0P,EAAsBC,QAxBoCF,OAAO,GACjE,CAACb,QAASJ,EAAAA,iBAAkBmT,SAAU1U,EAAyBsC,KAAM,CAAChB,EAAAA,WACtE,CAACK,QAASL,EAAAA,SAAUO,WA6BtB,WACE,OAAOtT,UA9BoC+T,KAAM,KAStCqS,GAAmD,CAC9D,CAAChT,QAASiT,EAAAA,UAAWC,YAAatC,IAClC,CAAC5Q,QAAS4Q,GAAcmC,SAAUlC,GAAkBlQ,KAAM,CAAChB,EAAAA,YAOzDwT,EAAAA,sBAAsBC,EAAAA,aAAc,UAAWT,IAenD,IAAaU,GAA6C,CACxDL,GACA,CAAChT,QAASsT,EAAAA,UAAUV,UAAU,GAC9B,CAAC5S,QAASuT,EAAAA,aAAcrT,WAX1B,WACE,OAAO,IAAIqT,EAAAA,cAUuC5S,KAAM,IACxD,CACEX,QAAS+C,EACTgQ,SAAUtI,GACV5J,OAAO,EACPF,KAAM,CAAChB,EAAAA,SAAU0C,EAAAA,OAAQoJ,EAAAA,cAE3B,CAACzL,QAAS+C,EAAuBgQ,SAAUrD,GAAiB7O,OAAO,EAAMF,KAAM,CAAChB,EAAAA,WAChF,CACEK,QAAS+C,EACTgQ,SAAU7E,GACVrN,OAAO,EACPF,KAAM,CAAChB,EAAAA,SAAU6N,GAAuBuB,EAAAA,SAAS,CAAC,IAAIjM,EAAAA,SAAY2K,MAEpE,CAACzN,QAASwN,GAAuBuF,SAAUrF,GAAqB/M,KAAM,IACtE,CACEX,QAASqG,EACT0M,SAAU1M,EACV1F,KAAM,CAACqC,EAAc0B,EAAqB+C,EAAAA,SAE5C,CAACzH,QAASwT,EAAAA,iBAAkBN,YAAa7M,GACzC,CAACrG,QAASgE,EAAkBkP,YAAaxO,GACzC,CAAC1E,QAAS0E,EAAqBqO,SAAUrO,EAAqB/D,KAAM,CAAChB,EAAAA,WACrE,CAACK,QAASyT,EAAAA,YAAaV,SAAUU,EAAAA,YAAa9S,KAAM,CAAC0B,EAAAA,SACrD,CAACrC,QAASgD,EAAc+P,SAAU/P,EAAcrC,KAAM,CAACoC,EAAuBV,EAAAA,SAC9EG,IAaF,WACE,SAAAkR,EAA2DC,GACzD,GAAIA,EACF,MAAM,IAAIxiB,MACN,yKAJGuiB,EAgBJA,EAAAE,qBAAP,SAA4BC,GAC1B,MAAO,CACLC,SAAUC,EACVC,UAAW,CACT,CAAChU,QAASyH,EAAAA,OAAQmL,SAAUiB,EAAOrN,OACnC,CAACxG,QAASH,EAAeqT,YAAazL,EAAAA,QACtC1H,KAtBK2T,EAAaK,EAAA3pB,EAAA,CADzB6pB,EAAAA,SAAS,CAACD,UAAWX,GAA0Ba,QAAS,CAACC,EAAAA,aAAcC,EAAAA,qBAEzD3U,EAAAA,EAAAqD,EAAAA,YAAYrD,EAAAA,EAAA4U,EAAAA,YAAY5U,EAAAA,EAAAC,EAAAA,OAAOqU,qCADjCL,GAAb,GCnEA,SAAgBY,KACd,OAAO,IAAIC,GAAKC,EAAAA,SAAS7U,EAAAA,WAS3B,IAAA4U,GAAA,WAEE,SAAAA,EAAsCjW,GAAAhV,KAAAgV,KAAAA,EAAahV,KAAKmrB,KAAOtoB,WAE/DooB,EAAA/qB,UAAAkrB,OAAA,SAAOC,EAAqBC,GAC1B,YAD0B,IAAAA,IAAAA,GAAA,GACrBD,EACErrB,KAAKurB,oBAAoBF,EAAKC,GADpB,MAInBL,EAAA/qB,UAAAsrB,QAAA,SAAQC,EAAwBH,GAAhC,IAAAroB,EAAAjD,KACE,YAD8B,IAAAsrB,IAAAA,GAAA,GACzBG,EACEA,EAAKrS,QAAO,SAAC8N,EAA2BmE,GAI7C,OAHIA,GACFnE,EAAOzkB,KAAKQ,EAAKsoB,oBAAoBF,EAAKC,IAErCpE,IACN,IANe,IASpB+D,EAAA/qB,UAAAwrB,OAAA,SAAOC,GACL,OAAKA,GACE3rB,KAAKmrB,KAAK/hB,cAAcpJ,KAAKgV,KAAM,QAAQ2W,EAAY,MADpC,MAI5BV,EAAA/qB,UAAA0rB,QAAA,SAAQD,GACN,IAAKA,EAAc,MAAO,GAC1B,IAAME,EAAoB7rB,KAAKmrB,KAAK7hB,iBAAiBtJ,KAAKgV,KAAM,QAAQ2W,EAAY,KACpF,OAAOE,EAAO,GAAGtd,MAAM3N,KAAKirB,GAAQ,IAGtCZ,EAAA/qB,UAAA4rB,UAAA,SAAUT,EAAqBhiB,GAC7B,IAAKgiB,EAAK,OAAO,KACjBhiB,EAAWA,GAAYrJ,KAAK+rB,eAAeV,GAC3C,IAAMrF,EAAwBhmB,KAAK0rB,OAAOriB,GAC1C,OAAI2c,EACKhmB,KAAKgsB,0BAA0BX,EAAKrF,GAEtChmB,KAAKurB,oBAAoBF,GAAK,IAGvCJ,EAAA/qB,UAAA+rB,UAAA,SAAUN,GAA8B3rB,KAAKksB,iBAAiBlsB,KAAK0rB,OAAOC,KAE1EV,EAAA/qB,UAAAgsB,iBAAA,SAAiBlG,GACXA,GACFhmB,KAAKmrB,KAAKrf,OAAOka,IAIbiF,EAAA/qB,UAAAqrB,oBAAR,SAA4BvF,EAAsBsF,GAEhD,QAFgD,IAAAA,IAAAA,GAAA,IAE3CA,EAAe,CAClB,IAAMjiB,EAAmBrJ,KAAK+rB,eAAe/F,GACvCnO,EAAwB7X,KAAK0rB,OAAOriB,GAI1C,GAAIwO,GAAQ7X,KAAKmsB,oBAAoBnG,EAAMnO,GAAO,OAAOA,EAE3D,IAAM5P,EAA2BjI,KAAKmrB,KAAK9nB,cAAc,QACzDrD,KAAKgsB,0BAA0BhG,EAAM/d,GACrC,IAAMsT,EAAOvb,KAAKmrB,KAAK9c,qBAAqBrO,KAAKgV,KAAM,QAAQ,GAE/D,OADAhV,KAAKmrB,KAAKzf,YAAY6P,EAAMtT,GACrBA,GAGDgjB,EAAA/qB,UAAA8rB,0BAAR,SAAkCX,EAAqBjnB,GAAvD,IAAAnB,EAAAjD,KAEE,OADAR,OAAOuE,KAAKsnB,GAAKrnB,SAAQ,SAACooB,GAAiB,OAAAnpB,EAAKkoB,KAAKzd,aAAatJ,EAAIgoB,EAAMf,EAAIe,OACzEhoB,GAGD6mB,EAAA/qB,UAAA6rB,eAAR,SAAuBV,GACrB,IAAMgB,EAAehB,EAAInjB,KAAO,OAAS,WACzC,OAAUmkB,EAAI,KAAKhB,EAAIgB,GAAK,KAGtBpB,EAAA/qB,UAAAisB,oBAAR,SAA4Bd,EAAqBxT,GAAjD,IAAA5U,EAAAjD,KACE,OAAOR,OAAOuE,KAAKsnB,GAAKiB,OAAM,SAACrrB,GAAgB,OAAAgC,EAAKkoB,KAAKtb,aAAagI,EAAM5W,KAASoqB,EAAIpqB,sFA5EhFgqB,EAAInqB,EAAA,CADhBoV,EAAAA,WAAW,CAACqW,WAAY,OAAQ3V,WAAYoU,GAAY3T,KAAM,KAGhDlB,EAAAA,EAAAC,EAAAA,OAAOC,EAAAA,4CAFT4U,GAAb,GC7BA,SAAgBuB,KACd,OAAO,IAAIC,GAAMvB,EAAAA,SAAS7U,EAAAA,WAc5B,IAAAoW,GAAA,WACE,SAAAA,EAAsCzX,GAAAhV,KAAAgV,KAAAA,SAItCyX,EAAAvsB,UAAA2Q,SAAA,WAAqB,OAAOhO,IAASgO,SAAS7Q,KAAKgV,OAMnDyX,EAAAvsB,UAAA6Q,SAAA,SAASC,GAAoBnO,IAASkO,SAAS/Q,KAAKgV,KAAMhE,mFAX/Cyb,EAAK3rB,EAAA,CADjBoV,EAAAA,WAAW,CAACqW,WAAY,OAAQ3V,WAAY4V,GAAanV,KAAM,KAEjDlB,EAAAA,EAAAC,EAAAA,OAAOC,EAAAA,4CADToW,GAAb,GCvBMC,GAAwB,oBAAX/jB,QAA0BA,QAAe,GCA5DgkB,GAKE,SAAmBC,EAA0BC,GAA1B7sB,KAAA4sB,UAAAA,EAA0B5sB,KAAA6sB,SAAAA;;;;;;;QAO/C,WAGE,SAAAC,EAAY7gB,GAA0BjM,KAAK+sB,OAAS9gB,EAAI6K,SAASC,IAAI+B,EAAAA,gBAmBrEgU,EAAA5sB,UAAA8sB,oBAAA,SAAoBC,GAClB,IAAMC,EAASD,GAAUA,EAAe,OAGlCE,EAAgD,MAA1BxkB,GAAOC,QAAQwkB,QACvCF,GAAUC,GACZxkB,GAAOC,QAAQwkB,QAJG,oBAQpB,IAFA,IAAMC,EAAQxqB,IAASqR,iBACnB2Y,EAAW,EACRA,EAAW,GAAMhqB,IAASqR,iBAAmBmZ,EAAS,KAC3DrtB,KAAK+sB,OAAOO,OACZT,IAEF,IAAM3O,EAAMrb,IAASqR,iBACjBgZ,GAAUC,GACZxkB,GAAOC,QAAQ2kB,WAdG,oBAgBpB,IAAMX,GAAa1O,EAAMmP,GAASR,EAIlC,OAHAlkB,GAAOC,QAAQC,IAAI,OAAOgkB,EAAQ,4BAClClkB,GAAOC,QAAQC,IAAO+jB,EAAUY,QAAQ,GAAE,iBAEnC,IAAIb,GAA0BC,EAAWC,IA5CpD,GC6DA,IAAAY,GAAA,WADA,SAAAA,IAEUztB,KAAA0tB,MAAuC,GACvC1tB,KAAA2tB,qBAA4D,SAsDtE,SAxDaF,EAKJA,EAAAhW,KAAP,SAAYmW,GACV,IAAMC,EAAgB,IAAIC,EAE1B,OADAD,EAAcH,MAAQE,EACfC,GAMTJ,EAAAvtB,UAAA6W,IAAA,SAAO9V,EAAkB8sB,GACvB,YAA2BC,IAApBhuB,KAAK0tB,MAAMzsB,GAAqBjB,KAAK0tB,MAAMzsB,GAAY8sB,GAMhEN,EAAAvtB,UAAAuP,IAAA,SAAOxO,EAAkByB,GAAkB1C,KAAK0tB,MAAMzsB,GAAOyB,GAK7D+qB,EAAAvtB,UAAA4L,OAAA,SAAU7K,UAAiCjB,KAAK0tB,MAAMzsB,IAKtDwsB,EAAAvtB,UAAA+tB,OAAA,SAAUhtB,GAAoB,OAAOjB,KAAK0tB,MAAM7tB,eAAeoB,IAK/DwsB,EAAAvtB,UAAAguB,YAAA,SAAejtB,EAAkBkX,GAC/BnY,KAAK2tB,qBAAqB1sB,GAAOkX,GAMnCsV,EAAAvtB,UAAAiuB,OAAA,WAEE,IAAK,IAAMltB,KAAOjB,KAAK2tB,qBACrB,GAAI3tB,KAAK2tB,qBAAqB9tB,eAAeoB,GAC3C,IACEjB,KAAK0tB,MAAMzsB,GAAOjB,KAAK2tB,qBAAqB1sB,KAC5C,MAAOoB,GACPuG,QAAQoc,KAAK,sCAAuC3iB,GAI1D,OAAO+rB,KAAKC,UAAUruB,KAAK0tB,QAtDlBD,EAAaK,EAAAhtB,EAAA,CADzBoV,EAAAA,cACYuX,GAAb,YA0DgBa,GAAkBnhB,EAAe+P,GAG/C,IAxH2BnQ,EACrBwhB,EAuHAC,EAASrhB,EAAIshB,eAAevR,EAAQ,UACtCwR,EAAe,GACnB,GAAIF,GAAUA,EAAOjiB,YACnB,IACEmiB,EAAeN,KAAKzmB,OA5HGoF,EA4HgByhB,EAAOjiB,YA3H5CgiB,EAAuC,CAC3CI,MAAO,IACPC,MAAO,IACPC,MAAO,IACPC,MAAO,IACPC,MAAO,KAEFhiB,EAAK6P,QAAQ,YAAY,SAAArc,GAAK,OAAAguB,EAAchuB,QAqH/C,MAAO8B,GACPuG,QAAQoc,KAAK,mDAAqD9H,EAAO7a,GAG7E,OAAOorB,GAAchW,KAAKiX,IAY5B,WAAA,SAAAM,KAAaA,EAA0BluB,EAAA,CAHtC6pB,EAAAA,SAAS,CACRD,UAAW,CAAC,CAAChU,QAAS+W,GAAe7W,WAAY0X,GAAmBjX,KAAM,CAAChB,EAAAA,SAAU8H,EAAAA,aAE1E6Q,IAAb,GCjJA,WAAA,SAAAC,KASSA,EAAAC,IAAP,WAAqC,OAAO,WAAM,OAAA,IAU3CD,EAAArhB,IAAP,SAAWvE,GACT,OAAO,SAAC8lB,GACN,OAAqC,MAA9BA,EAAaC,eAChBvsB,IAASoO,eAAeke,EAAaC,cAAe/lB,KAarD4lB,EAAAI,UAAP,SAAiBrkB,GACf,OAAO,SAACskB,GAAc,OAA8C,IAA9CA,EAAUC,eAAiB/J,QAAQxa,KApC7D,GCCuB,IAAIwkB,EAAAA,QAAQ;;;;;;;QFgJnC,IGnKAC,GAAA,WAOE,SAAAA,gCALDvZ,EAAAA,WAAU3N,KAAA,CAAC,CACVgkB,WAAY,wJAHd,GCAAmD,GAAA,WAaE,SAAAA,KAKF,OAHEA,EAAAxvB,UAAAyvB,SAAA,iCAbDC,EAAAA,UAASrnB,KAAA,CAAC,CACTc,SAAU,wBACVwmB,SAAU,qGAcZH,EAlBA,GCAAI,GAAA,WAQE,SAAAA,IAFA9vB,KAAA+vB,cAAsC,IAAIC,EAAAA,oBAK1CF,EAAA5vB,UAAA+vB,SAAA,SAAStS,GACP3d,KAAK+vB,cAAcG,KAAKvS,wBAV3BzH,EAAAA,WAAU3N,KAAA,CAAC,CACVgkB,WAAY,wJAHd,qBCoFE,SAAA4D,EAAYC,EAA2BC,GAAvC,IAAAptB,EAAAjD,KAAuCA,KAAAqwB,UAAAA,EAjEvCrwB,KAAAswB,OAAQ,EAERtwB,KAAAuwB,YAAc,KACdvwB,KAAAwwB,UAAY,KAQWxwB,KAAAywB,cAAe,EAElBzwB,KAAA0wB,UAAW,EAEV1wB,KAAA2wB,UAAY,GA0BjC3wB,KAAAmY,SAAW,IAAI6X,EAAAA,aAGfhwB,KAAA4wB,QAAU,IAAIZ,EAAAA,aAqCNhwB,KAAA6wB,OAAM,WAEZ,OADU,IAAIxc,MACLC,WAIJtU,KAAA6jB,UAAS,SAAItY,GAClBtI,EAAKotB,UAAUJ,SAAShtB,EAAKstB,YAAY5S,IAChC1a,EAAKwtB,eACRxtB,EAAKikB,OAAU3b,EAAIulB,OAAS,IAIpC9wB,KAAA+wB,UAAS,SAAIC,GAAW,OAAA/tB,EAAK2tB,QAAQV,KAAKc,IAE1ChxB,KAAAixB,OAAM,SAAIC,QAAA,IAAAA,IAAAA,EAAA,IACR,IACEjuB,EAAKikB,QAAS,EACP,IAAAvJ,EAAA1a,EAAAkuB,OAAAxT,GACK,SAARuT,EACFjuB,EAAKkV,SAAS+X,KAAK,CAACe,OAAQ,OAAQvuB,MAAOib,IAC1B,UAARuT,GACTjuB,EAAKkV,SAAS+X,KAAK,CAACe,OAAQ,QAASvuB,MAAOib,IAE9C,MAAOtb,GACPuG,QAAQjG,MAAM,uCASlB3C,KAAAoxB,OAAM,WAKJ,GAJIxoB,QAAQC,IAAI,QAIZ5F,EAAKytB,SAAU,CACjB,GAAIztB,EAAKkuB,OAAOE,OAASpuB,EAAKquB,aAAc,KACpCC,EAAWtuB,EAAKuuB,YAAYC,mBAAmB,MACrDxuB,EAAKyuB,kBAAkBC,OAAOJ,QACzB,GAAItuB,EAAKkuB,OAAOE,MAAQpuB,EAAKquB,aAAc,CAC1CC,EAAWtuB,EAAKquB,aAAaG,mBAAmB,MACtDxuB,EAAKyuB,kBAAkBC,OAAOJ,GAGhC,GAAKtuB,EAAKkuB,OAAOE,MAASpuB,EAAK2uB,iBAGxB,IAAK3uB,EAAKkuB,OAAOE,MAAQpuB,EAAK2uB,gBAAiB,CAC9CL,EAAWtuB,EAAK2uB,gBAAgBH,mBAAmB,MACzDxuB,EAAKyuB,kBAAkBC,OAAOJ,QALgB,KACxCA,EAAWtuB,EAAK4uB,eAAeJ,mBAAmB,MACxDxuB,EAAKyuB,kBAAkBC,OAAOJ,IASlC,GAAItuB,EAAK6uB,aAAc,KACfC,EAAW9uB,EAAK6uB,aAAaL,mBAAmB,MAClDxuB,EAAK+uB,mBACP/uB,EAAK+uB,kBAAkBL,OAAOI,QAE3B,GAA0B,OAAtB9uB,EAAK6uB,aAAuB,CAC/BC,EAAW9uB,EAAKgvB,YAAYR,mBAAmB,MACrDxuB,EAAK+uB,kBAAkBL,OAAOI,GAOhC,GAAI9uB,EAAKivB,cAAe,KAChBC,EAAYlvB,EAAKivB,cAAcT,mBAAmB,MACpDxuB,EAAKmvB,oBACPnvB,EAAKmvB,mBAAmBT,OAAOQ,QAE5B,GAA2B,OAAvBlvB,EAAKivB,cAAwB,CAChCC,EAAYlvB,EAAKovB,aAAaZ,mBAAmB,MACvDxuB,EAAKmvB,mBAAmBT,OAAOQ,GAGjCG,YAAU,WACR,GAAIrvB,EAAKsvB,eAAgB,KACjBC,EAAUpyB,EAAA,GAAO6C,EAAKkuB,OAAW,CAACsB,MAAOxvB,EAAKstB,YAAY5S,MAC1D+U,EAAqBzvB,EAAKsvB,eAAed,mBAAmB,CAChEjiB,KAAMgjB,EACN7U,GAAI1a,EAAKstB,YAAY5S,OAGrB1a,EAAK0vB,oBAAoBhB,OAAOe,OAE7B,KACCA,EAAqBzvB,EAAK2vB,cAAcnB,mBAAmB,MACjExuB,EAAK0vB,oBAAoBhB,OAAOe,MAEjC,KAhHH1yB,KAAKuwB,YAAcH,EAAMhB,cACzBpvB,KAAKwwB,UAAY,cAAcxwB,KAAK6wB,SACpC7wB,KAAKuwB,YAAY7iB,aAAa,UAAW1N,KAAKwwB,WAC9CxwB,KAAKuwB,YAAY5S,GAAK3d,KAAKwwB,UAC3BxwB,KAAKqwB,UAAUN,cAAc8C,WAAS,SAAC7B,GACjCA,IAAM/tB,EAAKstB,YAAY5S,KACzB1a,EAAKikB,QAAS,MA6GtB,OA1HEiJ,EAAAjwB,UAAA4yB,SADA,SACSxgB,GACFtS,KAAKuwB,YAAYhpB,SAAS+K,EAAMtR,UACnChB,KAAKknB,QAAS,IAelBiJ,EAAAjwB,UAAA6yB,gBAAA,WACE/yB,KAAKoxB,UAiCPjB,EAAAjwB,UAAAyvB,SAAA,iCApHDC,EAAAA,UAASrnB,KAAA,CAAC,CACTc,SAAU,eACVwmB,SAAA,i8FAZAmD,EAAAA,kBAQMlD,sCAYLmD,EAAAA,4BAOAA,EAAAA,MAAK1qB,KAAA,CAAC,kCAEN0qB,EAAAA,MAAK1qB,KAAA,CAAC,gCAEN0qB,EAAAA,MAAK1qB,KAAA,CAAC,mCAGN2qB,EAAAA,UAAS3qB,KAAA,CAAC,qCAEV2qB,EAAAA,UAAS3qB,KAAA,CAAC,qCAGV2qB,EAAAA,UAAS3qB,KAAA,CAAC,uCAEV2qB,EAAAA,UAAS3qB,KAAA,CAAC,yCAEV2qB,EAAAA,UAAS3qB,KAAA,CAAC,yCAGV0qB,EAAAA,MAAK1qB,KAAA,CAAC,wCAEN0qB,EAAAA,MAAK1qB,KAAA,CAAC,uCAEN0qB,EAAAA,MAAK1qB,KAAA,CAAC,uCAEN0qB,EAAAA,MAAK1qB,KAAA,CAAC,yCAEN0qB,EAAAA,MAAK1qB,KAAA,CAAC,qCAEN4qB,EAAAA,wBAGAA,EAAAA,kCAGAD,EAAAA,UAAS3qB,KAAA,CAAC,oBAAqB,CAAC6qB,QAAQ,EAAOC,KAAMC,EAAAA,+CAGrDJ,EAAAA,UAAS3qB,KAAA,CAAC,qBAAsB,CAAC6qB,QAAQ,EAAOC,KAAMC,EAAAA,8CAGtDJ,EAAAA,UAAS3qB,KAAA,CAAC,oBAAqB,CAAC6qB,QAAQ,EAAOC,KAAMC,EAAAA,gDAGrDJ,EAAAA,UAAS3qB,KAAA,CAAC,sBAAuB,CAAC6qB,QAAQ,EAAOC,KAAMC,EAAAA,qCAGvDC,EAAAA,aAAYhrB,KAAA,CAAC,iBAAkB,CAAC,cA2HnC4nB,wBClMA,SAAAqD,IAAA,IAAAvwB,EAAA,OAAAD,GAAAA,EAAAnC,MAAAb,KAAAU,YAAAV,YACEiD,EAAAqhB,UAAY,CACVxB,MAAO,CAAC6B,QAAQ,GAChBpB,OAAQ,CAACoB,QAAQ,MAErB,OALkCzgB,EAAAA,EAAAA,GAKlCsvB,GALkCpP,IAOlC,IAAAqP,GAAA,WAAA,SAAAA,KAcA,2BAdC9I,EAAAA,SAAQpiB,KAAA,CAAC,CACRmrB,aAAc,CAAChE,GAA2BS,IAC1CwD,QAAS,CACP9I,EAAAA,cAEFH,UAAW,CACT,CACEhU,QAASwN,GACTuF,SAAU+J,KAGd5I,QAAS,CAAC8E,GAA2BS,QAGvCsD,EAdA","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Type} from '@angular/core';\n\nlet _DOM: DomAdapter = null !;\n\nexport function getDOM() {\n  return _DOM;\n}\n\nexport function setDOM(adapter: DomAdapter) {\n  _DOM = adapter;\n}\n\nexport function setRootDomAdapter(adapter: DomAdapter) {\n  if (!_DOM) {\n    _DOM = adapter;\n  }\n}\n\n/* tslint:disable:requireParameterType */\n/**\n * Provides DOM operations in an environment-agnostic way.\n *\n * @security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n */\nexport abstract class DomAdapter {\n  public resourceLoaderType: Type<any> = null !;\n  abstract hasProperty(element: any, name: string): boolean;\n  abstract setProperty(el: Element, name: string, value: any): any;\n  abstract getProperty(el: Element, name: string): any;\n  abstract invoke(el: Element, methodName: string, args: any[]): any;\n\n  abstract logError(error: any): any;\n  abstract log(error: any): any;\n  abstract logGroup(error: any): any;\n  abstract logGroupEnd(): any;\n\n  /**\n   * Maps attribute names to their corresponding property names for cases\n   * where attribute name doesn't match property name.\n   */\n  get attrToPropMap(): {[key: string]: string} { return this._attrToPropMap; }\n  set attrToPropMap(value: {[key: string]: string}) { this._attrToPropMap = value; }\n  /** @internal */\n  // TODO(issue/24571): remove '!'.\n  _attrToPropMap !: {[key: string]: string};\n\n  abstract contains(nodeA: any, nodeB: any): boolean;\n  abstract parse(templateHtml: string): any;\n  abstract querySelector(el: any, selector: string): any;\n  abstract querySelectorAll(el: any, selector: string): any[];\n  abstract on(el: any, evt: any, listener: any): any;\n  abstract onAndCancel(el: any, evt: any, listener: any): Function;\n  abstract dispatchEvent(el: any, evt: any): any;\n  abstract createMouseEvent(eventType: any): any;\n  abstract createEvent(eventType: string): any;\n  abstract preventDefault(evt: any): any;\n  abstract isPrevented(evt: any): boolean;\n  abstract getInnerHTML(el: any): string;\n  /** Returns content if el is a <template> element, null otherwise. */\n  abstract getTemplateContent(el: any): any;\n  abstract getOuterHTML(el: any): string;\n  abstract nodeName(node: any): string;\n  abstract nodeValue(node: any): string|null;\n  abstract type(node: any): string;\n  abstract content(node: any): any;\n  abstract firstChild(el: any): Node|null;\n  abstract nextSibling(el: any): Node|null;\n  abstract parentElement(el: any): Node|null;\n  abstract childNodes(el: any): Node[];\n  abstract childNodesAsList(el: any): Node[];\n  abstract clearNodes(el: any): any;\n  abstract appendChild(el: any, node: any): any;\n  abstract removeChild(el: any, node: any): any;\n  abstract replaceChild(el: any, newNode: any, oldNode: any): any;\n  abstract remove(el: any): Node;\n  abstract insertBefore(parent: any, ref: any, node: any): any;\n  abstract insertAllBefore(parent: any, ref: any, nodes: any): any;\n  abstract insertAfter(parent: any, el: any, node: any): any;\n  abstract setInnerHTML(el: any, value: any): any;\n  abstract getText(el: any): string|null;\n  abstract setText(el: any, value: string): any;\n  abstract getValue(el: any): string;\n  abstract setValue(el: any, value: string): any;\n  abstract getChecked(el: any): boolean;\n  abstract setChecked(el: any, value: boolean): any;\n  abstract createComment(text: string): any;\n  abstract createTemplate(html: any): HTMLElement;\n  abstract createElement(tagName: any, doc?: any): HTMLElement;\n  abstract createElementNS(ns: string, tagName: string, doc?: any): Element;\n  abstract createTextNode(text: string, doc?: any): Text;\n  abstract createScriptTag(attrName: string, attrValue: string, doc?: any): HTMLElement;\n  abstract createStyleElement(css: string, doc?: any): HTMLStyleElement;\n  abstract createShadowRoot(el: any): any;\n  abstract getShadowRoot(el: any): any;\n  abstract getHost(el: any): any;\n  abstract getDistributedNodes(el: any): Node[];\n  abstract clone /*<T extends Node>*/ (node: Node /*T*/): Node /*T*/;\n  abstract getElementsByClassName(element: any, name: string): HTMLElement[];\n  abstract getElementsByTagName(element: any, name: string): HTMLElement[];\n  abstract classList(element: any): any[];\n  abstract addClass(element: any, className: string): any;\n  abstract removeClass(element: any, className: string): any;\n  abstract hasClass(element: any, className: string): boolean;\n  abstract setStyle(element: any, styleName: string, styleValue: string): any;\n  abstract removeStyle(element: any, styleName: string): any;\n  abstract getStyle(element: any, styleName: string): string;\n  abstract hasStyle(element: any, styleName: string, styleValue?: string): boolean;\n  abstract tagName(element: any): string;\n  abstract attributeMap(element: any): Map<string, string>;\n  abstract hasAttribute(element: any, attribute: string): boolean;\n  abstract hasAttributeNS(element: any, ns: string, attribute: string): boolean;\n  abstract getAttribute(element: any, attribute: string): string|null;\n  abstract getAttributeNS(element: any, ns: string, attribute: string): string|null;\n  abstract setAttribute(element: any, name: string, value: string): any;\n  abstract setAttributeNS(element: any, ns: string, name: string, value: string): any;\n  abstract removeAttribute(element: any, attribute: string): any;\n  abstract removeAttributeNS(element: any, ns: string, attribute: string): any;\n  abstract templateAwareRoot(el: any): any;\n  abstract createHtmlDocument(): HTMLDocument;\n  abstract getDefaultDocument(): Document;\n  abstract getBoundingClientRect(el: any): any;\n  abstract getTitle(doc: Document): string;\n  abstract setTitle(doc: Document, newTitle: string): any;\n  abstract elementMatches(n: any, selector: string): boolean;\n  abstract isTemplateElement(el: any): boolean;\n  abstract isTextNode(node: any): boolean;\n  abstract isCommentNode(node: any): boolean;\n  abstract isElementNode(node: any): boolean;\n  abstract hasShadowRoot(node: any): boolean;\n  abstract isShadowRoot(node: any): boolean;\n  abstract importIntoDoc /*<T extends Node>*/ (node: Node /*T*/): Node /*T*/;\n  abstract adoptNode /*<T extends Node>*/ (node: Node /*T*/): Node /*T*/;\n  abstract getHref(element: any): string;\n  abstract getEventKey(event: any): string;\n  abstract resolveAndSetHref(element: any, baseUrl: string, href: string): any;\n  abstract supportsDOMEvents(): boolean;\n  abstract supportsNativeShadowDOM(): boolean;\n  abstract getGlobalEventTarget(doc: Document, target: string): any;\n  abstract getHistory(): History;\n  abstract getLocation(): Location;\n  abstract getBaseHref(doc: Document): string|null;\n  abstract resetBaseElement(): void;\n  abstract getUserAgent(): string;\n  abstract setData(element: any, name: string, value: string): any;\n  abstract getComputedStyle(element: any): any;\n  abstract getData(element: any, name: string): string|null;\n  abstract supportsWebAnimation(): boolean;\n  abstract performanceNow(): number;\n  abstract getAnimationPrefix(): string;\n  abstract getTransitionEnd(): string;\n  abstract supportsAnimation(): boolean;\n\n  abstract supportsCookies(): boolean;\n  abstract getCookie(name: string): string|null;\n  abstract setCookie(name: string, value: string): any;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {√â¬µparseCookieValue as parseCookieValue} from '@angular/common';\nimport {√â¬µglobal as global} from '@angular/core';\n\nimport {setRootDomAdapter} from '../dom/dom_adapter';\n\nimport {GenericBrowserDomAdapter} from './generic_browser_adapter';\n\nconst _attrToPropMap = {\n  'class': 'className',\n  'innerHtml': 'innerHTML',\n  'readonly': 'readOnly',\n  'tabindex': 'tabIndex',\n};\n\nconst DOM_KEY_LOCATION_NUMPAD = 3;\n\n// Map to convert some key or keyIdentifier values to what will be returned by getEventKey\nconst _keyMap: {[k: string]: string} = {\n  // The following values are here for cross-browser compatibility and to match the W3C standard\n  // cf http://www.w3.org/TR/DOM-Level-3-Events-key/\n  '\\b': 'Backspace',\n  '\\t': 'Tab',\n  '\\x7F': 'Delete',\n  '\\x1B': 'Escape',\n  'Del': 'Delete',\n  'Esc': 'Escape',\n  'Left': 'ArrowLeft',\n  'Right': 'ArrowRight',\n  'Up': 'ArrowUp',\n  'Down': 'ArrowDown',\n  'Menu': 'ContextMenu',\n  'Scroll': 'ScrollLock',\n  'Win': 'OS'\n};\n\n// There is a bug in Chrome for numeric keypad keys:\n// https://code.google.com/p/chromium/issues/detail?id=155654\n// 1, 2, 3 ... are reported as A, B, C ...\nconst _chromeNumKeyPadMap = {\n  'A': '1',\n  'B': '2',\n  'C': '3',\n  'D': '4',\n  'E': '5',\n  'F': '6',\n  'G': '7',\n  'H': '8',\n  'I': '9',\n  'J': '*',\n  'K': '+',\n  'M': '-',\n  'N': '.',\n  'O': '/',\n  '\\x60': '0',\n  '\\x90': 'NumLock'\n};\n\nconst nodeContains: (this: Node, other: Node) => boolean = (() => {\n  if (global['Node']) {\n    return global['Node'].prototype.contains || function(this: Node, node: any) {\n      return !!(this.compareDocumentPosition(node) & 16);\n    };\n  }\n\n  return undefined as any;\n})();\n\n/**\n * A `DomAdapter` powered by full browser DOM APIs.\n *\n * @security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n */\n/* tslint:disable:requireParameterType no-console */\nexport class BrowserDomAdapter extends GenericBrowserDomAdapter {\n  parse(templateHtml: string) { throw new Error('parse not implemented'); }\n  static makeCurrent() { setRootDomAdapter(new BrowserDomAdapter()); }\n  hasProperty(element: Node, name: string): boolean { return name in element; }\n  setProperty(el: Node, name: string, value: any) { (<any>el)[name] = value; }\n  getProperty(el: Node, name: string): any { return (<any>el)[name]; }\n  invoke(el: Node, methodName: string, args: any[]): any { (<any>el)[methodName](...args); }\n\n  // TODO(tbosch): move this into a separate environment class once we have it\n  logError(error: string): void {\n    if (window.console) {\n      if (console.error) {\n        console.error(error);\n      } else {\n        console.log(error);\n      }\n    }\n  }\n\n  log(error: string): void {\n    if (window.console) {\n      window.console.log && window.console.log(error);\n    }\n  }\n\n  logGroup(error: string): void {\n    if (window.console) {\n      window.console.group && window.console.group(error);\n    }\n  }\n\n  logGroupEnd(): void {\n    if (window.console) {\n      window.console.groupEnd && window.console.groupEnd();\n    }\n  }\n\n  get attrToPropMap(): any { return _attrToPropMap; }\n\n  contains(nodeA: any, nodeB: any): boolean { return nodeContains.call(nodeA, nodeB); }\n  querySelector(el: HTMLElement, selector: string): any { return el.querySelector(selector); }\n  querySelectorAll(el: any, selector: string): any[] { return el.querySelectorAll(selector); }\n  on(el: Node, evt: any, listener: any) { el.addEventListener(evt, listener, false); }\n  onAndCancel(el: Node, evt: any, listener: any): Function {\n    el.addEventListener(evt, listener, false);\n    // Needed to follow Dart's subscription semantic, until fix of\n    // https://code.google.com/p/dart/issues/detail?id=17406\n    return () => { el.removeEventListener(evt, listener, false); };\n  }\n  dispatchEvent(el: Node, evt: any) { el.dispatchEvent(evt); }\n  createMouseEvent(eventType: string): MouseEvent {\n    const evt: MouseEvent = this.getDefaultDocument().createEvent('MouseEvent');\n    evt.initEvent(eventType, true, true);\n    return evt;\n  }\n  createEvent(eventType: any): Event {\n    const evt: Event = this.getDefaultDocument().createEvent('Event');\n    evt.initEvent(eventType, true, true);\n    return evt;\n  }\n  preventDefault(evt: Event) {\n    evt.preventDefault();\n    evt.returnValue = false;\n  }\n  isPrevented(evt: Event): boolean {\n    return evt.defaultPrevented || evt.returnValue != null && !evt.returnValue;\n  }\n  getInnerHTML(el: HTMLElement): string { return el.innerHTML; }\n  getTemplateContent(el: Node): Node|null {\n    return 'content' in el && this.isTemplateElement(el) ? (<any>el).content : null;\n  }\n  getOuterHTML(el: HTMLElement): string { return el.outerHTML; }\n  nodeName(node: Node): string { return node.nodeName; }\n  nodeValue(node: Node): string|null { return node.nodeValue; }\n  type(node: HTMLInputElement): string { return node.type; }\n  content(node: Node): Node {\n    if (this.hasProperty(node, 'content')) {\n      return (<any>node).content;\n    } else {\n      return node;\n    }\n  }\n  firstChild(el: Node): Node|null { return el.firstChild; }\n  nextSibling(el: Node): Node|null { return el.nextSibling; }\n  parentElement(el: Node): Node|null { return el.parentNode; }\n  childNodes(el: any): Node[] { return el.childNodes; }\n  childNodesAsList(el: Node): any[] {\n    const childNodes = el.childNodes;\n    const res = new Array(childNodes.length);\n    for (let i = 0; i < childNodes.length; i++) {\n      res[i] = childNodes[i];\n    }\n    return res;\n  }\n  clearNodes(el: Node) {\n    while (el.firstChild) {\n      el.removeChild(el.firstChild);\n    }\n  }\n  appendChild(el: Node, node: Node) { el.appendChild(node); }\n  removeChild(el: Node, node: Node) { el.removeChild(node); }\n  replaceChild(el: Node, newChild: Node, oldChild: Node) { el.replaceChild(newChild, oldChild); }\n  remove(node: Node): Node {\n    if (node.parentNode) {\n      node.parentNode.removeChild(node);\n    }\n    return node;\n  }\n  insertBefore(parent: Node, ref: Node, node: Node) { parent.insertBefore(node, ref); }\n  insertAllBefore(parent: Node, ref: Node, nodes: Node[]) {\n    nodes.forEach((n: any) => parent.insertBefore(n, ref));\n  }\n  insertAfter(parent: Node, ref: Node, node: any) { parent.insertBefore(node, ref.nextSibling); }\n  setInnerHTML(el: Element, value: string) { el.innerHTML = value; }\n  getText(el: Node): string|null { return el.textContent; }\n  setText(el: Node, value: string) { el.textContent = value; }\n  getValue(el: any): string { return el.value; }\n  setValue(el: any, value: string) { el.value = value; }\n  getChecked(el: any): boolean { return el.checked; }\n  setChecked(el: any, value: boolean) { el.checked = value; }\n  createComment(text: string): Comment { return this.getDefaultDocument().createComment(text); }\n  createTemplate(html: any): HTMLElement {\n    const t = this.getDefaultDocument().createElement('template');\n    t.innerHTML = html;\n    return t;\n  }\n  createElement(tagName: string, doc?: Document): HTMLElement {\n    doc = doc || this.getDefaultDocument();\n    return doc.createElement(tagName);\n  }\n  createElementNS(ns: string, tagName: string, doc?: Document): Element {\n    doc = doc || this.getDefaultDocument();\n    return doc.createElementNS(ns, tagName);\n  }\n  createTextNode(text: string, doc?: Document): Text {\n    doc = doc || this.getDefaultDocument();\n    return doc.createTextNode(text);\n  }\n  createScriptTag(attrName: string, attrValue: string, doc?: Document): HTMLScriptElement {\n    doc = doc || this.getDefaultDocument();\n    const el = <HTMLScriptElement>doc.createElement('SCRIPT');\n    el.setAttribute(attrName, attrValue);\n    return el;\n  }\n  createStyleElement(css: string, doc?: Document): HTMLStyleElement {\n    doc = doc || this.getDefaultDocument();\n    const style = <HTMLStyleElement>doc.createElement('style');\n    this.appendChild(style, this.createTextNode(css, doc));\n    return style;\n  }\n  createShadowRoot(el: HTMLElement): DocumentFragment { return (<any>el).createShadowRoot(); }\n  getShadowRoot(el: HTMLElement): DocumentFragment { return (<any>el).shadowRoot; }\n  getHost(el: HTMLElement): HTMLElement { return (<any>el).host; }\n  clone(node: Node): Node { return node.cloneNode(true); }\n  getElementsByClassName(element: any, name: string): HTMLElement[] {\n    return element.getElementsByClassName(name);\n  }\n  getElementsByTagName(element: any, name: string): HTMLElement[] {\n    return element.getElementsByTagName(name);\n  }\n  classList(element: any): any[] { return Array.prototype.slice.call(element.classList, 0); }\n  addClass(element: any, className: string) { element.classList.add(className); }\n  removeClass(element: any, className: string) { element.classList.remove(className); }\n  hasClass(element: any, className: string): boolean {\n    return element.classList.contains(className);\n  }\n  setStyle(element: any, styleName: string, styleValue: string) {\n    element.style[styleName] = styleValue;\n  }\n  removeStyle(element: any, stylename: string) {\n    // IE requires '' instead of null\n    // see https://github.com/angular/angular/issues/7916\n    element.style[stylename] = '';\n  }\n  getStyle(element: any, stylename: string): string { return element.style[stylename]; }\n  hasStyle(element: any, styleName: string, styleValue?: string|null): boolean {\n    const value = this.getStyle(element, styleName) || '';\n    return styleValue ? value == styleValue : value.length > 0;\n  }\n  tagName(element: any): string { return element.tagName; }\n  attributeMap(element: any): Map<string, string> {\n    const res = new Map<string, string>();\n    const elAttrs = element.attributes;\n    for (let i = 0; i < elAttrs.length; i++) {\n      const attrib = elAttrs.item(i);\n      res.set(attrib.name, attrib.value);\n    }\n    return res;\n  }\n  hasAttribute(element: Element, attribute: string): boolean {\n    return element.hasAttribute(attribute);\n  }\n  hasAttributeNS(element: Element, ns: string, attribute: string): boolean {\n    return element.hasAttributeNS(ns, attribute);\n  }\n  getAttribute(element: Element, attribute: string): string|null {\n    return element.getAttribute(attribute);\n  }\n  getAttributeNS(element: Element, ns: string, name: string): string|null {\n    return element.getAttributeNS(ns, name);\n  }\n  setAttribute(element: Element, name: string, value: string) { element.setAttribute(name, value); }\n  setAttributeNS(element: Element, ns: string, name: string, value: string) {\n    element.setAttributeNS(ns, name, value);\n  }\n  removeAttribute(element: Element, attribute: string) { element.removeAttribute(attribute); }\n  removeAttributeNS(element: Element, ns: string, name: string) {\n    element.removeAttributeNS(ns, name);\n  }\n  templateAwareRoot(el: Node): any { return this.isTemplateElement(el) ? this.content(el) : el; }\n  createHtmlDocument(): HTMLDocument {\n    return document.implementation.createHTMLDocument('fakeTitle');\n  }\n  getDefaultDocument(): Document { return document; }\n  getBoundingClientRect(el: Element): any {\n    try {\n      return el.getBoundingClientRect();\n    } catch {\n      return {top: 0, bottom: 0, left: 0, right: 0, width: 0, height: 0};\n    }\n  }\n  getTitle(doc: Document): string { return doc.title; }\n  setTitle(doc: Document, newTitle: string) { doc.title = newTitle || ''; }\n  elementMatches(n: any, selector: string): boolean {\n    if (this.isElementNode(n)) {\n      return n.matches && n.matches(selector) ||\n          n.msMatchesSelector && n.msMatchesSelector(selector) ||\n          n.webkitMatchesSelector && n.webkitMatchesSelector(selector);\n    }\n\n    return false;\n  }\n  isTemplateElement(el: Node): boolean {\n    return this.isElementNode(el) && el.nodeName === 'TEMPLATE';\n  }\n  isTextNode(node: Node): boolean { return node.nodeType === Node.TEXT_NODE; }\n  isCommentNode(node: Node): boolean { return node.nodeType === Node.COMMENT_NODE; }\n  isElementNode(node: Node): boolean { return node.nodeType === Node.ELEMENT_NODE; }\n  hasShadowRoot(node: any): boolean {\n    return node.shadowRoot != null && node instanceof HTMLElement;\n  }\n  isShadowRoot(node: any): boolean { return node instanceof DocumentFragment; }\n  importIntoDoc(node: Node): any { return document.importNode(this.templateAwareRoot(node), true); }\n  adoptNode(node: Node): any { return document.adoptNode(node); }\n  getHref(el: Element): string { return el.getAttribute('href') !; }\n\n  getEventKey(event: any): string {\n    let key = event.key;\n    if (key == null) {\n      key = event.keyIdentifier;\n      // keyIdentifier is defined in the old draft of DOM Level 3 Events implemented by Chrome and\n      // Safari cf\n      // http://www.w3.org/TR/2007/WD-DOM-Level-3-Events-20071221/events.html#Events-KeyboardEvents-Interfaces\n      if (key == null) {\n        return 'Unidentified';\n      }\n      if (key.startsWith('U+')) {\n        key = String.fromCharCode(parseInt(key.substring(2), 16));\n        if (event.location === DOM_KEY_LOCATION_NUMPAD && _chromeNumKeyPadMap.hasOwnProperty(key)) {\n          // There is a bug in Chrome for numeric keypad keys:\n          // https://code.google.com/p/chromium/issues/detail?id=155654\n          // 1, 2, 3 ... are reported as A, B, C ...\n          key = (_chromeNumKeyPadMap as any)[key];\n        }\n      }\n    }\n\n    return _keyMap[key] || key;\n  }\n  getGlobalEventTarget(doc: Document, target: string): EventTarget|null {\n    if (target === 'window') {\n      return window;\n    }\n    if (target === 'document') {\n      return doc;\n    }\n    if (target === 'body') {\n      return doc.body;\n    }\n    return null;\n  }\n  getHistory(): History { return window.history; }\n  getLocation(): Location { return window.location; }\n  getBaseHref(doc: Document): string|null {\n    const href = getBaseElementHref();\n    return href == null ? null : relativePath(href);\n  }\n  resetBaseElement(): void { baseElement = null; }\n  getUserAgent(): string { return window.navigator.userAgent; }\n  setData(element: Element, name: string, value: string) {\n    this.setAttribute(element, 'data-' + name, value);\n  }\n  getData(element: Element, name: string): string|null {\n    return this.getAttribute(element, 'data-' + name);\n  }\n  getComputedStyle(element: any): any { return getComputedStyle(element); }\n  // TODO(tbosch): move this into a separate environment class once we have it\n  supportsWebAnimation(): boolean {\n    return typeof(<any>Element).prototype['animate'] === 'function';\n  }\n  performanceNow(): number {\n    // performance.now() is not available in all browsers, see\n    // http://caniuse.com/#search=performance.now\n    return window.performance && window.performance.now ? window.performance.now() :\n                                                          new Date().getTime();\n  }\n\n  supportsCookies(): boolean { return true; }\n\n  getCookie(name: string): string|null { return parseCookieValue(document.cookie, name); }\n\n  setCookie(name: string, value: string) {\n    // document.cookie is magical, assigning into it assigns/overrides one cookie value, but does\n    // not clear other cookies.\n    document.cookie = encodeURIComponent(name) + '=' + encodeURIComponent(value);\n  }\n}\n\nlet baseElement: HTMLElement|null = null;\nfunction getBaseElementHref(): string|null {\n  if (!baseElement) {\n    baseElement = document.querySelector('base') !;\n    if (!baseElement) {\n      return null;\n    }\n  }\n  return baseElement.getAttribute('href');\n}\n\n// based on urlUtils.js in AngularJS 1\nlet urlParsingNode: any;\nfunction relativePath(url: any): string {\n  if (!urlParsingNode) {\n    urlParsingNode = document.createElement('a');\n  }\n  urlParsingNode.setAttribute('href', url);\n  return (urlParsingNode.pathname.charAt(0) === '/') ? urlParsingNode.pathname :\n                                                       '/' + urlParsingNode.pathname;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DomAdapter} from '../dom/dom_adapter';\n\n\n\n/**\n * Provides DOM operations in any browser environment.\n *\n * @security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n */\nexport abstract class GenericBrowserDomAdapter extends DomAdapter {\n  private _animationPrefix: string|null = null;\n  private _transitionEnd: string|null = null;\n  constructor() {\n    super();\n    try {\n      const element = this.createElement('div', document);\n      if (this.getStyle(element, 'animationName') != null) {\n        this._animationPrefix = '';\n      } else {\n        const domPrefixes = ['Webkit', 'Moz', 'O', 'ms'];\n\n        for (let i = 0; i < domPrefixes.length; i++) {\n          if (this.getStyle(element, domPrefixes[i] + 'AnimationName') != null) {\n            this._animationPrefix = '-' + domPrefixes[i].toLowerCase() + '-';\n            break;\n          }\n        }\n      }\n\n      const transEndEventNames: {[key: string]: string} = {\n        WebkitTransition: 'webkitTransitionEnd',\n        MozTransition: 'transitionend',\n        OTransition: 'oTransitionEnd otransitionend',\n        transition: 'transitionend'\n      };\n\n      Object.keys(transEndEventNames).forEach((key: string) => {\n        if (this.getStyle(element, key) != null) {\n          this._transitionEnd = transEndEventNames[key];\n        }\n      });\n    } catch {\n      this._animationPrefix = null;\n      this._transitionEnd = null;\n    }\n  }\n\n  getDistributedNodes(el: HTMLElement): Node[] { return (<any>el).getDistributedNodes(); }\n  resolveAndSetHref(el: HTMLAnchorElement, baseUrl: string, href: string) {\n    el.href = href == null ? baseUrl : baseUrl + '/../' + href;\n  }\n  supportsDOMEvents(): boolean { return true; }\n  supportsNativeShadowDOM(): boolean {\n    return typeof(<any>document.body).createShadowRoot === 'function';\n  }\n  getAnimationPrefix(): string { return this._animationPrefix ? this._animationPrefix : ''; }\n  getTransitionEnd(): string { return this._transitionEnd ? this._transitionEnd : ''; }\n  supportsAnimation(): boolean {\n    return this._animationPrefix != null && this._transitionEnd != null;\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport function supportsState(): boolean {\n  return !!window.history.pushState;\n}","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DOCUMENT, LocationChangeListener, PlatformLocation} from '@angular/common';\nimport {Inject, Injectable} from '@angular/core';\n\nimport {getDOM} from '../../dom/dom_adapter';\n\nimport {supportsState} from './history';\n\n\n\n/**\n * `PlatformLocation` encapsulates all of the direct calls to platform APIs.\n * This class should not be used directly by an application developer. Instead, use\n * {@link Location}.\n */\n@Injectable()\nexport class BrowserPlatformLocation extends PlatformLocation {\n  // TODO(issue/24571): remove '!'.\n  public readonly location !: Location;\n  // TODO(issue/24571): remove '!'.\n  private _history !: History;\n\n  constructor(@Inject(DOCUMENT) private _doc: any) {\n    super();\n    this._init();\n  }\n\n  // This is moved to its own method so that `MockPlatformLocationStrategy` can overwrite it\n  /** @internal */\n  _init() {\n    (this as{location: Location}).location = getDOM().getLocation();\n    this._history = getDOM().getHistory();\n  }\n\n  getBaseHrefFromDOM(): string { return getDOM().getBaseHref(this._doc) !; }\n\n  onPopState(fn: LocationChangeListener): void {\n    getDOM().getGlobalEventTarget(this._doc, 'window').addEventListener('popstate', fn, false);\n  }\n\n  onHashChange(fn: LocationChangeListener): void {\n    getDOM().getGlobalEventTarget(this._doc, 'window').addEventListener('hashchange', fn, false);\n  }\n\n  get href(): string { return this.location.href; }\n  get protocol(): string { return this.location.protocol; }\n  get hostname(): string { return this.location.hostname; }\n  get port(): string { return this.location.port; }\n  get pathname(): string { return this.location.pathname; }\n  get search(): string { return this.location.search; }\n  get hash(): string { return this.location.hash; }\n  set pathname(newPath: string) { this.location.pathname = newPath; }\n\n  pushState(state: any, title: string, url: string): void {\n    if (supportsState()) {\n      this._history.pushState(state, title, url);\n    } else {\n      this.location.hash = url;\n    }\n  }\n\n  replaceState(state: any, title: string, url: string): void {\n    if (supportsState()) {\n      this._history.replaceState(state, title, url);\n    } else {\n      this.location.hash = url;\n    }\n  }\n\n  forward(): void { this._history.forward(); }\n\n  back(): void { this._history.back(); }\n\n  getState(): unknown { return this._history.state; }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DOCUMENT} from '@angular/common';\nimport {APP_INITIALIZER, ApplicationInitStatus, Inject, InjectionToken, Injector, StaticProvider} from '@angular/core';\n\nimport {getDOM} from '../dom/dom_adapter';\n\n/**\n * An id that identifies a particular application being bootstrapped, that should\n * match across the client/server boundary.\n */\nexport const TRANSITION_ID = new InjectionToken('TRANSITION_ID');\n\nexport function appInitializerFactory(transitionId: string, document: any, injector: Injector) {\n  return () => {\n    // Wait for all application initializers to be completed before removing the styles set by\n    // the server.\n    injector.get(ApplicationInitStatus).donePromise.then(() => {\n      const dom = getDOM();\n      const styles: any[] =\n          Array.prototype.slice.apply(dom.querySelectorAll(document, `style[ng-transition]`));\n      styles.filter(el => dom.getAttribute(el, 'ng-transition') === transitionId)\n          .forEach(el => dom.remove(el));\n    });\n  };\n}\n\nexport const SERVER_TRANSITION_PROVIDERS: StaticProvider[] = [\n  {\n    provide: APP_INITIALIZER,\n    useFactory: appInitializerFactory,\n    deps: [TRANSITION_ID, DOCUMENT, Injector],\n    multi: true\n  },\n];\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {GetTestability, Testability, TestabilityRegistry, setTestabilityGetter, √â¬µglobal as global} from '@angular/core';\n\nimport {getDOM} from '../dom/dom_adapter';\n\nexport class BrowserGetTestability implements GetTestability {\n  static init() { setTestabilityGetter(new BrowserGetTestability()); }\n\n  addToWindow(registry: TestabilityRegistry): void {\n    global['getAngularTestability'] = (elem: any, findInAncestors: boolean = true) => {\n      const testability = registry.findTestabilityInTree(elem, findInAncestors);\n      if (testability == null) {\n        throw new Error('Could not find testability for element.');\n      }\n      return testability;\n    };\n\n    global['getAllAngularTestabilities'] = () => registry.getAllTestabilities();\n\n    global['getAllAngularRootElements'] = () => registry.getAllRootElements();\n\n    const whenAllStable = (callback: any /** TODO #9100 */) => {\n      const testabilities = global['getAllAngularTestabilities']();\n      let count = testabilities.length;\n      let didWork = false;\n      const decrement = function(didWork_: any /** TODO #9100 */) {\n        didWork = didWork || didWork_;\n        count--;\n        if (count == 0) {\n          callback(didWork);\n        }\n      };\n      testabilities.forEach(function(testability: any /** TODO #9100 */) {\n        testability.whenStable(decrement);\n      });\n    };\n\n    if (!global['frameworkStabilizers']) {\n      global['frameworkStabilizers'] = [];\n    }\n    global['frameworkStabilizers'].push(whenAllStable);\n  }\n\n  findTestabilityInTree(registry: TestabilityRegistry, elem: any, findInAncestors: boolean):\n      Testability|null {\n    if (elem == null) {\n      return null;\n    }\n    const t = registry.getTestability(elem);\n    if (t != null) {\n      return t;\n    } else if (!findInAncestors) {\n      return null;\n    }\n    if (getDOM().isShadowRoot(elem)) {\n      return this.findTestabilityInTree(registry, getDOM().getHost(elem), true);\n    }\n    return this.findTestabilityInTree(registry, getDOM().parentElement(elem), true);\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {√â¬µglobal as global} from '@angular/core';\n\nconst CAMEL_CASE_REGEXP = /([A-Z])/g;\nconst DASH_CASE_REGEXP = /-([a-z])/g;\n\n\nexport function camelCaseToDashCase(input: string): string {\n  return input.replace(CAMEL_CASE_REGEXP, (...m: string[]) => '-' + m[1].toLowerCase());\n}\n\nexport function dashCaseToCamelCase(input: string): string {\n  return input.replace(DASH_CASE_REGEXP, (...m: string[]) => m[1].toUpperCase());\n}\n\n/**\n * Exports the value under a given `name` in the global property `ng`. For example `ng.probe` if\n * `name` is `'probe'`.\n * @param name Name under which it will be exported. Keep in mind this will be a property of the\n * global `ng` object.\n * @param value The value to export.\n */\nexport function exportNgVar(name: string, value: any): void {\n  if (typeof COMPILED === 'undefined' || !COMPILED) {\n    // Note: we can't export `ng` when using closure enhanced optimization as:\n    // - closure declares globals itself for minified names, which sometimes clobber our `ng` global\n    // - we can't declare a closure extern as the namespace `ng` is already used within Google\n    //   for typings for angularJS (via `goog.provide('ng....')`).\n    const ng = global['ng'] = (global['ng'] as{[key: string]: any} | undefined) || {};\n    ng[name] = value;\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {APP_INITIALIZER, ApplicationRef, DebugNode, NgProbeToken, NgZone, Optional, Provider, getDebugNode} from '@angular/core';\n\nimport {exportNgVar} from '../util';\n\nconst CORE_TOKENS = (() => ({\n                       'ApplicationRef': ApplicationRef,\n                       'NgZone': NgZone,\n                     }))();\n\nconst INSPECT_GLOBAL_NAME = 'probe';\nconst CORE_TOKENS_GLOBAL_NAME = 'coreTokens';\n\n/**\n * Returns a {@link DebugElement} for the given native DOM element, or\n * null if the given native element does not have an Angular view associated\n * with it.\n */\nexport function inspectNativeElement(element: any): DebugNode|null {\n  return getDebugNode(element);\n}\n\nexport function _createNgProbe(coreTokens: NgProbeToken[]): any {\n  exportNgVar(INSPECT_GLOBAL_NAME, inspectNativeElement);\n  exportNgVar(CORE_TOKENS_GLOBAL_NAME, {...CORE_TOKENS, ..._ngProbeTokensToMap(coreTokens || [])});\n  return () => inspectNativeElement;\n}\n\nfunction _ngProbeTokensToMap(tokens: NgProbeToken[]): {[name: string]: any} {\n  return tokens.reduce((prev: any, t: any) => (prev[t.name] = t.token, prev), {});\n}\n\n/**\n * In Ivy, we don't support NgProbe because we have our own set of testing utilities\n * with more robust functionality.\n *\n * We shouldn't bring in NgProbe because it prevents DebugNode and friends from\n * tree-shaking properly.\n */\nexport const ELEMENT_PROBE_PROVIDERS__POST_R3__ = [];\n\n/**\n * Providers which support debugging Angular applications (e.g. via `ng.probe`).\n */\nexport const ELEMENT_PROBE_PROVIDERS__PRE_R3__: Provider[] = [\n  {\n    provide: APP_INITIALIZER,\n    useFactory: _createNgProbe,\n    deps: [\n      [NgProbeToken, new Optional()],\n    ],\n    multi: true,\n  },\n];\n\nexport const ELEMENT_PROBE_PROVIDERS = ELEMENT_PROBE_PROVIDERS__PRE_R3__;\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Inject, Injectable, InjectionToken, NgZone} from '@angular/core';\n\nimport {getDOM} from '../dom_adapter';\n\n/**\n * The injection token for the event-manager plug-in service.\n *\n * @publicApi\n */\nexport const EVENT_MANAGER_PLUGINS =\n    new InjectionToken<EventManagerPlugin[]>('EventManagerPlugins');\n\n/**\n * An injectable service that provides event management for Angular\n * through a browser plug-in.\n *\n * @publicApi\n */\n@Injectable()\nexport class EventManager {\n  private _plugins: EventManagerPlugin[];\n  private _eventNameToPlugin = new Map<string, EventManagerPlugin>();\n\n  /**\n   * Initializes an instance of the event-manager service.\n   */\n  constructor(@Inject(EVENT_MANAGER_PLUGINS) plugins: EventManagerPlugin[], private _zone: NgZone) {\n    plugins.forEach(p => p.manager = this);\n    this._plugins = plugins.slice().reverse();\n  }\n\n  /**\n   * Registers a handler for a specific element and event.\n   *\n   * @param element The HTML element to receive event notifications.\n   * @param eventName The name of the event to listen for.\n   * @param handler A function to call when the notification occurs. Receives the\n   * event object as an argument.\n   * @returns  A callback function that can be used to remove the handler.\n   */\n  addEventListener(element: HTMLElement, eventName: string, handler: Function): Function {\n    const plugin = this._findPluginFor(eventName);\n    return plugin.addEventListener(element, eventName, handler);\n  }\n\n  /**\n   * Registers a global handler for an event in a target view.\n   *\n   * @param target A target for global event notifications. One of \"window\", \"document\", or \"body\".\n   * @param eventName The name of the event to listen for.\n   * @param handler A function to call when the notification occurs. Receives the\n   * event object as an argument.\n   * @returns A callback function that can be used to remove the handler.\n   */\n  addGlobalEventListener(target: string, eventName: string, handler: Function): Function {\n    const plugin = this._findPluginFor(eventName);\n    return plugin.addGlobalEventListener(target, eventName, handler);\n  }\n\n  /**\n   * Retrieves the compilation zone in which event listeners are registered.\n   */\n  getZone(): NgZone { return this._zone; }\n\n  /** @internal */\n  _findPluginFor(eventName: string): EventManagerPlugin {\n    const plugin = this._eventNameToPlugin.get(eventName);\n    if (plugin) {\n      return plugin;\n    }\n\n    const plugins = this._plugins;\n    for (let i = 0; i < plugins.length; i++) {\n      const plugin = plugins[i];\n      if (plugin.supports(eventName)) {\n        this._eventNameToPlugin.set(eventName, plugin);\n        return plugin;\n      }\n    }\n    throw new Error(`No event manager plugin found for event ${eventName}`);\n  }\n}\n\nexport abstract class EventManagerPlugin {\n  constructor(private _doc: any) {}\n\n  // TODO(issue/24571): remove '!'.\n  manager !: EventManager;\n\n  abstract supports(eventName: string): boolean;\n\n  abstract addEventListener(element: HTMLElement, eventName: string, handler: Function): Function;\n\n  addGlobalEventListener(element: string, eventName: string, handler: Function): Function {\n    const target: HTMLElement = getDOM().getGlobalEventTarget(this._doc, element);\n    if (!target) {\n      throw new Error(`Unsupported event target ${target} for event ${eventName}`);\n    }\n    return this.addEventListener(target, eventName, handler);\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DOCUMENT} from '@angular/common';\nimport {Inject, Injectable, OnDestroy} from '@angular/core';\nimport {getDOM} from './dom_adapter';\n\n@Injectable()\nexport class SharedStylesHost {\n  /** @internal */\n  protected _stylesSet = new Set<string>();\n\n  addStyles(styles: string[]): void {\n    const additions = new Set<string>();\n    styles.forEach(style => {\n      if (!this._stylesSet.has(style)) {\n        this._stylesSet.add(style);\n        additions.add(style);\n      }\n    });\n    this.onStylesAdded(additions);\n  }\n\n  onStylesAdded(additions: Set<string>): void {}\n\n  getAllStyles(): string[] { return Array.from(this._stylesSet); }\n}\n\n@Injectable()\nexport class DomSharedStylesHost extends SharedStylesHost implements OnDestroy {\n  private _hostNodes = new Set<Node>();\n  private _styleNodes = new Set<Node>();\n  constructor(@Inject(DOCUMENT) private _doc: any) {\n    super();\n    this._hostNodes.add(_doc.head);\n  }\n\n  private _addStylesToHost(styles: Set<string>, host: Node): void {\n    styles.forEach((style: string) => {\n      const styleEl = this._doc.createElement('style');\n      styleEl.textContent = style;\n      this._styleNodes.add(host.appendChild(styleEl));\n    });\n  }\n\n  addHost(hostNode: Node): void {\n    this._addStylesToHost(this._stylesSet, hostNode);\n    this._hostNodes.add(hostNode);\n  }\n\n  removeHost(hostNode: Node): void { this._hostNodes.delete(hostNode); }\n\n  onStylesAdded(additions: Set<string>): void {\n    this._hostNodes.forEach(hostNode => this._addStylesToHost(additions, hostNode));\n  }\n\n  ngOnDestroy(): void { this._styleNodes.forEach(styleNode => getDOM().remove(styleNode)); }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {APP_ID, Inject, Injectable, Renderer2, RendererFactory2, RendererStyleFlags2, RendererType2, ViewEncapsulation} from '@angular/core';\n\nimport {EventManager} from './events/event_manager';\nimport {DomSharedStylesHost} from './shared_styles_host';\n\nexport const NAMESPACE_URIS: {[ns: string]: string} = {\n  'svg': 'http://www.w3.org/2000/svg',\n  'xhtml': 'http://www.w3.org/1999/xhtml',\n  'xlink': 'http://www.w3.org/1999/xlink',\n  'xml': 'http://www.w3.org/XML/1998/namespace',\n  'xmlns': 'http://www.w3.org/2000/xmlns/',\n};\n\nconst COMPONENT_REGEX = /%COMP%/g;\nexport const COMPONENT_VARIABLE = '%COMP%';\nexport const HOST_ATTR = `_nghost-${COMPONENT_VARIABLE}`;\nexport const CONTENT_ATTR = `_ngcontent-${COMPONENT_VARIABLE}`;\n\nexport function shimContentAttribute(componentShortId: string): string {\n  return CONTENT_ATTR.replace(COMPONENT_REGEX, componentShortId);\n}\n\nexport function shimHostAttribute(componentShortId: string): string {\n  return HOST_ATTR.replace(COMPONENT_REGEX, componentShortId);\n}\n\nexport function flattenStyles(\n    compId: string, styles: Array<any|any[]>, target: string[]): string[] {\n  for (let i = 0; i < styles.length; i++) {\n    let style = styles[i];\n\n    if (Array.isArray(style)) {\n      flattenStyles(compId, style, target);\n    } else {\n      style = style.replace(COMPONENT_REGEX, compId);\n      target.push(style);\n    }\n  }\n  return target;\n}\n\nfunction decoratePreventDefault(eventHandler: Function): Function {\n  return (event: any) => {\n    const allowDefaultBehavior = eventHandler(event);\n    if (allowDefaultBehavior === false) {\n      // TODO(tbosch): move preventDefault into event plugins...\n      event.preventDefault();\n      event.returnValue = false;\n    }\n  };\n}\n\n@Injectable()\nexport class DomRendererFactory2 implements RendererFactory2 {\n  private rendererByCompId = new Map<string, Renderer2>();\n  private defaultRenderer: Renderer2;\n\n  constructor(\n      private eventManager: EventManager, private sharedStylesHost: DomSharedStylesHost,\n      @Inject(APP_ID) private appId: string) {\n    this.defaultRenderer = new DefaultDomRenderer2(eventManager);\n  }\n\n  createRenderer(element: any, type: RendererType2|null): Renderer2 {\n    if (!element || !type) {\n      return this.defaultRenderer;\n    }\n    switch (type.encapsulation) {\n      case ViewEncapsulation.Emulated: {\n        let renderer = this.rendererByCompId.get(type.id);\n        if (!renderer) {\n          renderer = new EmulatedEncapsulationDomRenderer2(\n              this.eventManager, this.sharedStylesHost, type, this.appId);\n          this.rendererByCompId.set(type.id, renderer);\n        }\n        (<EmulatedEncapsulationDomRenderer2>renderer).applyToHost(element);\n        return renderer;\n      }\n      case ViewEncapsulation.Native:\n      case ViewEncapsulation.ShadowDom:\n        return new ShadowDomRenderer(this.eventManager, this.sharedStylesHost, element, type);\n      default: {\n        if (!this.rendererByCompId.has(type.id)) {\n          const styles = flattenStyles(type.id, type.styles, []);\n          this.sharedStylesHost.addStyles(styles);\n          this.rendererByCompId.set(type.id, this.defaultRenderer);\n        }\n        return this.defaultRenderer;\n      }\n    }\n  }\n\n  begin() {}\n  end() {}\n}\n\nclass DefaultDomRenderer2 implements Renderer2 {\n  data: {[key: string]: any} = Object.create(null);\n\n  constructor(private eventManager: EventManager) {}\n\n  destroy(): void {}\n\n  destroyNode: null;\n\n  createElement(name: string, namespace?: string): any {\n    if (namespace) {\n      // In cases where Ivy (not ViewEngine) is giving us the actual namespace, the look up by key\n      // will result in undefined, so we just return the namespace here.\n      return document.createElementNS(NAMESPACE_URIS[namespace] || namespace, name);\n    }\n\n    return document.createElement(name);\n  }\n\n  createComment(value: string): any { return document.createComment(value); }\n\n  createText(value: string): any { return document.createTextNode(value); }\n\n  appendChild(parent: any, newChild: any): void { parent.appendChild(newChild); }\n\n  insertBefore(parent: any, newChild: any, refChild: any): void {\n    if (parent) {\n      parent.insertBefore(newChild, refChild);\n    }\n  }\n\n  removeChild(parent: any, oldChild: any): void {\n    if (parent) {\n      parent.removeChild(oldChild);\n    }\n  }\n\n  selectRootElement(selectorOrNode: string|any, preserveContent?: boolean): any {\n    let el: any = typeof selectorOrNode === 'string' ? document.querySelector(selectorOrNode) :\n                                                       selectorOrNode;\n    if (!el) {\n      throw new Error(`The selector \"${selectorOrNode}\" did not match any elements`);\n    }\n    if (!preserveContent) {\n      el.textContent = '';\n    }\n    return el;\n  }\n\n  parentNode(node: any): any { return node.parentNode; }\n\n  nextSibling(node: any): any { return node.nextSibling; }\n\n  setAttribute(el: any, name: string, value: string, namespace?: string): void {\n    if (namespace) {\n      name = namespace + ':' + name;\n      // TODO(benlesh): Ivy may cause issues here because it's passing around\n      // full URIs for namespaces, therefore this lookup will fail.\n      const namespaceUri = NAMESPACE_URIS[namespace];\n      if (namespaceUri) {\n        el.setAttributeNS(namespaceUri, name, value);\n      } else {\n        el.setAttribute(name, value);\n      }\n    } else {\n      el.setAttribute(name, value);\n    }\n  }\n\n  removeAttribute(el: any, name: string, namespace?: string): void {\n    if (namespace) {\n      // TODO(benlesh): Ivy may cause issues here because it's passing around\n      // full URIs for namespaces, therefore this lookup will fail.\n      const namespaceUri = NAMESPACE_URIS[namespace];\n      if (namespaceUri) {\n        el.removeAttributeNS(namespaceUri, name);\n      } else {\n        // TODO(benlesh): Since ivy is passing around full URIs for namespaces\n        // this could result in properties like `http://www.w3.org/2000/svg:cx=\"123\"`,\n        // which is wrong.\n        el.removeAttribute(`${namespace}:${name}`);\n      }\n    } else {\n      el.removeAttribute(name);\n    }\n  }\n\n  addClass(el: any, name: string): void { el.classList.add(name); }\n\n  removeClass(el: any, name: string): void { el.classList.remove(name); }\n\n  setStyle(el: any, style: string, value: any, flags: RendererStyleFlags2): void {\n    if (flags & RendererStyleFlags2.DashCase) {\n      el.style.setProperty(\n          style, value, !!(flags & RendererStyleFlags2.Important) ? 'important' : '');\n    } else {\n      el.style[style] = value;\n    }\n  }\n\n  removeStyle(el: any, style: string, flags: RendererStyleFlags2): void {\n    if (flags & RendererStyleFlags2.DashCase) {\n      el.style.removeProperty(style);\n    } else {\n      // IE requires '' instead of null\n      // see https://github.com/angular/angular/issues/7916\n      el.style[style] = '';\n    }\n  }\n\n  setProperty(el: any, name: string, value: any): void {\n    checkNoSyntheticProp(name, 'property');\n    el[name] = value;\n  }\n\n  setValue(node: any, value: string): void { node.nodeValue = value; }\n\n  listen(target: 'window'|'document'|'body'|any, event: string, callback: (event: any) => boolean):\n      () => void {\n    checkNoSyntheticProp(event, 'listener');\n    if (typeof target === 'string') {\n      return <() => void>this.eventManager.addGlobalEventListener(\n          target, event, decoratePreventDefault(callback));\n    }\n    return <() => void>this.eventManager.addEventListener(\n               target, event, decoratePreventDefault(callback)) as() => void;\n  }\n}\n\nconst AT_CHARCODE = (() => '@'.charCodeAt(0))();\nfunction checkNoSyntheticProp(name: string, nameKind: string) {\n  if (name.charCodeAt(0) === AT_CHARCODE) {\n    throw new Error(\n        `Found the synthetic ${nameKind} ${name}. Please include either \"BrowserAnimationsModule\" or \"NoopAnimationsModule\" in your application.`);\n  }\n}\n\nclass EmulatedEncapsulationDomRenderer2 extends DefaultDomRenderer2 {\n  private contentAttr: string;\n  private hostAttr: string;\n\n  constructor(\n      eventManager: EventManager, sharedStylesHost: DomSharedStylesHost,\n      private component: RendererType2, appId: string) {\n    super(eventManager);\n    const styles = flattenStyles(appId + '-' + component.id, component.styles, []);\n    sharedStylesHost.addStyles(styles);\n\n    this.contentAttr = shimContentAttribute(appId + '-' + component.id);\n    this.hostAttr = shimHostAttribute(appId + '-' + component.id);\n  }\n\n  applyToHost(element: any) { super.setAttribute(element, this.hostAttr, ''); }\n\n  createElement(parent: any, name: string): Element {\n    const el = super.createElement(parent, name);\n    super.setAttribute(el, this.contentAttr, '');\n    return el;\n  }\n}\n\nclass ShadowDomRenderer extends DefaultDomRenderer2 {\n  private shadowRoot: any;\n\n  constructor(\n      eventManager: EventManager, private sharedStylesHost: DomSharedStylesHost,\n      private hostEl: any, private component: RendererType2) {\n    super(eventManager);\n    if (component.encapsulation === ViewEncapsulation.ShadowDom) {\n      this.shadowRoot = (hostEl as any).attachShadow({mode: 'open'});\n    } else {\n      this.shadowRoot = (hostEl as any).createShadowRoot();\n    }\n    this.sharedStylesHost.addHost(this.shadowRoot);\n    const styles = flattenStyles(component.id, component.styles, []);\n    for (let i = 0; i < styles.length; i++) {\n      const styleEl = document.createElement('style');\n      styleEl.textContent = styles[i];\n      this.shadowRoot.appendChild(styleEl);\n    }\n  }\n\n  private nodeOrShadowRoot(node: any): any { return node === this.hostEl ? this.shadowRoot : node; }\n\n  destroy() { this.sharedStylesHost.removeHost(this.shadowRoot); }\n\n  appendChild(parent: any, newChild: any): void {\n    return super.appendChild(this.nodeOrShadowRoot(parent), newChild);\n  }\n  insertBefore(parent: any, newChild: any, refChild: any): void {\n    return super.insertBefore(this.nodeOrShadowRoot(parent), newChild, refChild);\n  }\n  removeChild(parent: any, oldChild: any): void {\n    return super.removeChild(this.nodeOrShadowRoot(parent), oldChild);\n  }\n  parentNode(node: any): any {\n    return this.nodeOrShadowRoot(super.parentNode(this.nodeOrShadowRoot(node)));\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DOCUMENT, isPlatformServer} from '@angular/common';\nimport {Inject, Injectable, NgZone, Optional, PLATFORM_ID} from '@angular/core';\n\nimport {EventManagerPlugin} from './event_manager';\n\n/**\n * Detect if Zone is present. If it is then use simple zone aware 'addEventListener'\n * since Angular can do much more\n * efficient bookkeeping than Zone can, because we have additional information. This speeds up\n * addEventListener by 3x.\n */\nconst __symbol__ =\n    (() => (typeof Zone !== 'undefined') && (Zone as any)['__symbol__'] ||\n         function(v: string): string { return '__zone_symbol__' + v; })();\nconst ADD_EVENT_LISTENER: 'addEventListener' = __symbol__('addEventListener');\nconst REMOVE_EVENT_LISTENER: 'removeEventListener' = __symbol__('removeEventListener');\n\nconst symbolNames: {[key: string]: string} = {};\n\nconst FALSE = 'FALSE';\nconst ANGULAR = 'ANGULAR';\nconst NATIVE_ADD_LISTENER = 'addEventListener';\nconst NATIVE_REMOVE_LISTENER = 'removeEventListener';\n\n// use the same symbol string which is used in zone.js\nconst stopSymbol = '__zone_symbol__propagationStopped';\nconst stopMethodSymbol = '__zone_symbol__stopImmediatePropagation';\n\n\nconst blackListedMap = (() => {\n  const blackListedEvents: string[] =\n      (typeof Zone !== 'undefined') && (Zone as any)[__symbol__('BLACK_LISTED_EVENTS')];\n  if (blackListedEvents) {\n    const res: {[eventName: string]: string} = {};\n    blackListedEvents.forEach(eventName => { res[eventName] = eventName; });\n    return res;\n  }\n  return undefined;\n})();\n\n\nconst isBlackListedEvent = function(eventName: string) {\n  if (!blackListedMap) {\n    return false;\n  }\n  return blackListedMap.hasOwnProperty(eventName);\n};\n\ninterface TaskData {\n  zone: any;\n  handler: Function;\n}\n\n// a global listener to handle all dom event,\n// so we do not need to create a closure every time\nconst globalListener = function(this: any, event: Event) {\n  const symbolName = symbolNames[event.type];\n  if (!symbolName) {\n    return;\n  }\n  const taskDatas: TaskData[] = this[symbolName];\n  if (!taskDatas) {\n    return;\n  }\n  const args: any = [event];\n  if (taskDatas.length === 1) {\n    // if taskDatas only have one element, just invoke it\n    const taskData = taskDatas[0];\n    if (taskData.zone !== Zone.current) {\n      // only use Zone.run when Zone.current not equals to stored zone\n      return taskData.zone.run(taskData.handler, this, args);\n    } else {\n      return taskData.handler.apply(this, args);\n    }\n  } else {\n    // copy tasks as a snapshot to avoid event handlers remove\n    // itself or others\n    const copiedTasks = taskDatas.slice();\n    for (let i = 0; i < copiedTasks.length; i++) {\n      // if other listener call event.stopImmediatePropagation\n      // just break\n      if ((event as any)[stopSymbol] === true) {\n        break;\n      }\n      const taskData = copiedTasks[i];\n      if (taskData.zone !== Zone.current) {\n        // only use Zone.run when Zone.current not equals to stored zone\n        taskData.zone.run(taskData.handler, this, args);\n      } else {\n        taskData.handler.apply(this, args);\n      }\n    }\n  }\n};\n\n@Injectable()\nexport class DomEventsPlugin extends EventManagerPlugin {\n  constructor(\n      @Inject(DOCUMENT) doc: any, private ngZone: NgZone,\n      @Optional() @Inject(PLATFORM_ID) platformId: {}|null) {\n    super(doc);\n\n    if (!platformId || !isPlatformServer(platformId)) {\n      this.patchEvent();\n    }\n  }\n\n  private patchEvent() {\n    if (typeof Event === 'undefined' || !Event || !Event.prototype) {\n      return;\n    }\n    if ((Event.prototype as any)[stopMethodSymbol]) {\n      // already patched by zone.js\n      return;\n    }\n    const delegate = (Event.prototype as any)[stopMethodSymbol] =\n        Event.prototype.stopImmediatePropagation;\n    Event.prototype.stopImmediatePropagation = function(this: any) {\n      if (this) {\n        this[stopSymbol] = true;\n      }\n\n      // We should call native delegate in case in some environment part of\n      // the application will not use the patched Event. Also we cast the\n      // \"arguments\" to any since \"stopImmediatePropagation\" technically does not\n      // accept any arguments, but we don't know what developers pass through the\n      // function and we want to not break these calls.\n      delegate && delegate.apply(this, arguments as any);\n    };\n  }\n\n  // This plugin should come last in the list of plugins, because it accepts all\n  // events.\n  supports(eventName: string): boolean { return true; }\n\n  addEventListener(element: HTMLElement, eventName: string, handler: Function): Function {\n    /**\n     * This code is about to add a listener to the DOM. If Zone.js is present, than\n     * `addEventListener` has been patched. The patched code adds overhead in both\n     * memory and speed (3x slower) than native. For this reason if we detect that\n     * Zone.js is present we use a simple version of zone aware addEventListener instead.\n     * The result is faster registration and the zone will be restored.\n     * But ZoneSpec.onScheduleTask, ZoneSpec.onInvokeTask, ZoneSpec.onCancelTask\n     * will not be invoked\n     * We also do manual zone restoration in element.ts renderEventHandlerClosure method.\n     *\n     * NOTE: it is possible that the element is from different iframe, and so we\n     * have to check before we execute the method.\n     */\n    const self = this;\n    const zoneJsLoaded = element[ADD_EVENT_LISTENER];\n    let callback: EventListener = handler as EventListener;\n    // if zonejs is loaded and current zone is not ngZone\n    // we keep Zone.current on target for later restoration.\n    if (zoneJsLoaded && (!NgZone.isInAngularZone() || isBlackListedEvent(eventName))) {\n      let symbolName = symbolNames[eventName];\n      if (!symbolName) {\n        symbolName = symbolNames[eventName] = __symbol__(ANGULAR + eventName + FALSE);\n      }\n      let taskDatas: TaskData[] = (element as any)[symbolName];\n      const globalListenerRegistered = taskDatas && taskDatas.length > 0;\n      if (!taskDatas) {\n        taskDatas = (element as any)[symbolName] = [];\n      }\n\n      const zone = isBlackListedEvent(eventName) ? Zone.root : Zone.current;\n      if (taskDatas.length === 0) {\n        taskDatas.push({zone: zone, handler: callback});\n      } else {\n        let callbackRegistered = false;\n        for (let i = 0; i < taskDatas.length; i++) {\n          if (taskDatas[i].handler === callback) {\n            callbackRegistered = true;\n            break;\n          }\n        }\n        if (!callbackRegistered) {\n          taskDatas.push({zone: zone, handler: callback});\n        }\n      }\n\n      if (!globalListenerRegistered) {\n        element[ADD_EVENT_LISTENER](eventName, globalListener, false);\n      }\n    } else {\n      element[NATIVE_ADD_LISTENER](eventName, callback, false);\n    }\n    return () => this.removeEventListener(element, eventName, callback);\n  }\n\n  removeEventListener(target: any, eventName: string, callback: Function): void {\n    let underlyingRemove = target[REMOVE_EVENT_LISTENER];\n    // zone.js not loaded, use native removeEventListener\n    if (!underlyingRemove) {\n      return target[NATIVE_REMOVE_LISTENER].apply(target, [eventName, callback, false]);\n    }\n    let symbolName = symbolNames[eventName];\n    let taskDatas: TaskData[] = symbolName && target[symbolName];\n    if (!taskDatas) {\n      // addEventListener not using patched version\n      // just call native removeEventListener\n      return target[NATIVE_REMOVE_LISTENER].apply(target, [eventName, callback, false]);\n    }\n    // fix issue 20532, should be able to remove\n    // listener which was added inside of ngZone\n    let found = false;\n    for (let i = 0; i < taskDatas.length; i++) {\n      // remove listener from taskDatas if the callback equals\n      if (taskDatas[i].handler === callback) {\n        found = true;\n        taskDatas.splice(i, 1);\n        break;\n      }\n    }\n    if (found) {\n      if (taskDatas.length === 0) {\n        // all listeners are removed, we can remove the globalListener from target\n        underlyingRemove.apply(target, [eventName, globalListener, false]);\n      }\n    } else {\n      // not found in taskDatas, the callback may be added inside of ngZone\n      // use native remove listener to remove the callback\n      target[NATIVE_REMOVE_LISTENER].apply(target, [eventName, callback, false]);\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DOCUMENT} from '@angular/common';\nimport {Inject, Injectable, InjectionToken, Optional, √â¬µConsole as Console} from '@angular/core';\n\nimport {EventManagerPlugin} from './event_manager';\n\n/**\n * Supported HammerJS recognizer event names.\n */\nconst EVENT_NAMES = {\n  // pan\n  'pan': true,\n  'panstart': true,\n  'panmove': true,\n  'panend': true,\n  'pancancel': true,\n  'panleft': true,\n  'panright': true,\n  'panup': true,\n  'pandown': true,\n  // pinch\n  'pinch': true,\n  'pinchstart': true,\n  'pinchmove': true,\n  'pinchend': true,\n  'pinchcancel': true,\n  'pinchin': true,\n  'pinchout': true,\n  // press\n  'press': true,\n  'pressup': true,\n  // rotate\n  'rotate': true,\n  'rotatestart': true,\n  'rotatemove': true,\n  'rotateend': true,\n  'rotatecancel': true,\n  // swipe\n  'swipe': true,\n  'swipeleft': true,\n  'swiperight': true,\n  'swipeup': true,\n  'swipedown': true,\n  // tap\n  'tap': true,\n};\n\n/**\n * DI token for providing [HammerJS](http://hammerjs.github.io/) support to Angular.\n * @see `HammerGestureConfig`\n *\n * @publicApi\n */\nexport const HAMMER_GESTURE_CONFIG = new InjectionToken<HammerGestureConfig>('HammerGestureConfig');\n\n\n/**\n * Function that loads HammerJS, returning a promise that is resolved once HammerJs is loaded.\n *\n * @publicApi\n */\nexport type HammerLoader = () => Promise<void>;\n\n/**\n * Injection token used to provide a {@link HammerLoader} to Angular.\n *\n * @publicApi\n */\nexport const HAMMER_LOADER = new InjectionToken<HammerLoader>('HammerLoader');\n\nexport interface HammerInstance {\n  on(eventName: string, callback?: Function): void;\n  off(eventName: string, callback?: Function): void;\n  destroy?(): void;\n}\n\n/**\n * An injectable [HammerJS Manager](http://hammerjs.github.io/api/#hammer.manager)\n * for gesture recognition. Configures specific event recognition.\n * @publicApi\n */\n@Injectable()\nexport class HammerGestureConfig {\n  /**\n   * A set of supported event names for gestures to be used in Angular.\n   * Angular supports all built-in recognizers, as listed in\n   * [HammerJS documentation](http://hammerjs.github.io/).\n   */\n  events: string[] = [];\n\n  /**\n  * Maps gesture event names to a set of configuration options\n  * that specify overrides to the default values for specific properties.\n  *\n  * The key is a supported event name to be configured,\n  * and the options object contains a set of properties, with override values\n  * to be applied to the named recognizer event.\n  * For example, to disable recognition of the rotate event, specify\n  *  `{\"rotate\": {\"enable\": false}}`.\n  *\n  * Properties that are not present take the HammerJS default values.\n  * For information about which properties are supported for which events,\n  * and their allowed and default values, see\n  * [HammerJS documentation](http://hammerjs.github.io/).\n  *\n  */\n  overrides: {[key: string]: Object} = {};\n\n  /**\n   * Properties whose default values can be overridden for a given event.\n   * Different sets of properties apply to different events.\n   * For information about which properties are supported for which events,\n   * and their allowed and default values, see\n   * [HammerJS documentation](http://hammerjs.github.io/).\n   */\n  options?: {\n    cssProps?: any; domEvents?: boolean; enable?: boolean | ((manager: any) => boolean);\n    preset?: any[];\n    touchAction?: string;\n    recognizers?: any[];\n    inputClass?: any;\n    inputTarget?: EventTarget;\n  };\n\n  /**\n   * Creates a [HammerJS Manager](http://hammerjs.github.io/api/#hammer.manager)\n   * and attaches it to a given HTML element.\n   * @param element The element that will recognize gestures.\n   * @returns A HammerJS event-manager object.\n   */\n  buildHammer(element: HTMLElement): HammerInstance {\n    const mc = new Hammer !(element, this.options);\n\n    mc.get('pinch').set({enable: true});\n    mc.get('rotate').set({enable: true});\n\n    for (const eventName in this.overrides) {\n      mc.get(eventName).set(this.overrides[eventName]);\n    }\n\n    return mc;\n  }\n}\n\n@Injectable()\nexport class HammerGesturesPlugin extends EventManagerPlugin {\n  constructor(\n      @Inject(DOCUMENT) doc: any,\n      @Inject(HAMMER_GESTURE_CONFIG) private _config: HammerGestureConfig, private console: Console,\n      @Optional() @Inject(HAMMER_LOADER) private loader?: HammerLoader|null) {\n    super(doc);\n  }\n\n  supports(eventName: string): boolean {\n    if (!EVENT_NAMES.hasOwnProperty(eventName.toLowerCase()) && !this.isCustomEvent(eventName)) {\n      return false;\n    }\n\n    if (!(window as any).Hammer && !this.loader) {\n      this.console.warn(\n          `The \"${eventName}\" event cannot be bound because Hammer.JS is not ` +\n          `loaded and no custom loader has been specified.`);\n      return false;\n    }\n\n    return true;\n  }\n\n  addEventListener(element: HTMLElement, eventName: string, handler: Function): Function {\n    const zone = this.manager.getZone();\n    eventName = eventName.toLowerCase();\n\n    // If Hammer is not present but a loader is specified, we defer adding the event listener\n    // until Hammer is loaded.\n    if (!(window as any).Hammer && this.loader) {\n      // This `addEventListener` method returns a function to remove the added listener.\n      // Until Hammer is loaded, the returned function needs to *cancel* the registration rather\n      // than remove anything.\n      let cancelRegistration = false;\n      let deregister: Function = () => { cancelRegistration = true; };\n\n      this.loader()\n          .then(() => {\n            // If Hammer isn't actually loaded when the custom loader resolves, give up.\n            if (!(window as any).Hammer) {\n              this.console.warn(\n                  `The custom HAMMER_LOADER completed, but Hammer.JS is not present.`);\n              deregister = () => {};\n              return;\n            }\n\n            if (!cancelRegistration) {\n              // Now that Hammer is loaded and the listener is being loaded for real,\n              // the deregistration function changes from canceling registration to removal.\n              deregister = this.addEventListener(element, eventName, handler);\n            }\n          })\n          .catch(() => {\n            this.console.warn(\n                `The \"${eventName}\" event cannot be bound because the custom ` +\n                `Hammer.JS loader failed.`);\n            deregister = () => {};\n          });\n\n      // Return a function that *executes* `deregister` (and not `deregister` itself) so that we\n      // can change the behavior of `deregister` once the listener is added. Using a closure in\n      // this way allows us to avoid any additional data structures to track listener removal.\n      return () => { deregister(); };\n    }\n\n    return zone.runOutsideAngular(() => {\n      // Creating the manager bind events, must be done outside of angular\n      const mc = this._config.buildHammer(element);\n      const callback = function(eventObj: HammerInput) {\n        zone.runGuarded(function() { handler(eventObj); });\n      };\n      mc.on(eventName, callback);\n      return () => {\n        mc.off(eventName, callback);\n        // destroy mc to prevent memory leak\n        if (typeof mc.destroy === 'function') {\n          mc.destroy();\n        }\n      };\n    });\n  }\n\n  isCustomEvent(eventName: string): boolean { return this._config.events.indexOf(eventName) > -1; }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DOCUMENT} from '@angular/common';\nimport {Inject, Injectable, NgZone} from '@angular/core';\n\nimport {getDOM} from '../dom_adapter';\n\nimport {EventManagerPlugin} from './event_manager';\n\n/**\n * Defines supported modifiers for key events.\n */\nconst MODIFIER_KEYS = ['alt', 'control', 'meta', 'shift'];\n\n/**\n * Retrieves modifiers from key-event objects.\n */\nconst MODIFIER_KEY_GETTERS: {[key: string]: (event: KeyboardEvent) => boolean} = {\n  'alt': (event: KeyboardEvent) => event.altKey,\n  'control': (event: KeyboardEvent) => event.ctrlKey,\n  'meta': (event: KeyboardEvent) => event.metaKey,\n  'shift': (event: KeyboardEvent) => event.shiftKey\n};\n\n/**\n * @publicApi\n * A browser plug-in that provides support for handling of key events in Angular.\n */\n@Injectable()\nexport class KeyEventsPlugin extends EventManagerPlugin {\n  /**\n   * Initializes an instance of the browser plug-in.\n   * @param doc The document in which key events will be detected.\n   */\n  constructor(@Inject(DOCUMENT) doc: any) { super(doc); }\n\n  /**\n    * Reports whether a named key event is supported.\n    * @param eventName The event name to query.\n    * @return True if the named key event is supported.\n   */\n  supports(eventName: string): boolean { return KeyEventsPlugin.parseEventName(eventName) != null; }\n\n  /**\n   * Registers a handler for a specific element and key event.\n   * @param element The HTML element to receive event notifications.\n   * @param eventName The name of the key event to listen for.\n   * @param handler A function to call when the notification occurs. Receives the\n   * event object as an argument.\n   * @returns The key event that was registered.\n  */\n  addEventListener(element: HTMLElement, eventName: string, handler: Function): Function {\n    const parsedEvent = KeyEventsPlugin.parseEventName(eventName) !;\n\n    const outsideHandler =\n        KeyEventsPlugin.eventCallback(parsedEvent['fullKey'], handler, this.manager.getZone());\n\n    return this.manager.getZone().runOutsideAngular(() => {\n      return getDOM().onAndCancel(element, parsedEvent['domEventName'], outsideHandler);\n    });\n  }\n\n  static parseEventName(eventName: string): {[key: string]: string}|null {\n    const parts: string[] = eventName.toLowerCase().split('.');\n\n    const domEventName = parts.shift();\n    if ((parts.length === 0) || !(domEventName === 'keydown' || domEventName === 'keyup')) {\n      return null;\n    }\n\n    const key = KeyEventsPlugin._normalizeKey(parts.pop() !);\n\n    let fullKey = '';\n    MODIFIER_KEYS.forEach(modifierName => {\n      const index: number = parts.indexOf(modifierName);\n      if (index > -1) {\n        parts.splice(index, 1);\n        fullKey += modifierName + '.';\n      }\n    });\n    fullKey += key;\n\n    if (parts.length != 0 || key.length === 0) {\n      // returning null instead of throwing to let another plugin process the event\n      return null;\n    }\n\n    const result: {[k: string]: string} = {};\n    result['domEventName'] = domEventName;\n    result['fullKey'] = fullKey;\n    return result;\n  }\n\n  static getEventFullKey(event: KeyboardEvent): string {\n    let fullKey = '';\n    let key = getDOM().getEventKey(event);\n    key = key.toLowerCase();\n    if (key === ' ') {\n      key = 'space';  // for readability\n    } else if (key === '.') {\n      key = 'dot';  // because '.' is used as a separator in event names\n    }\n    MODIFIER_KEYS.forEach(modifierName => {\n      if (modifierName != key) {\n        const modifierGetter = MODIFIER_KEY_GETTERS[modifierName];\n        if (modifierGetter(event)) {\n          fullKey += modifierName + '.';\n        }\n      }\n    });\n    fullKey += key;\n    return fullKey;\n  }\n\n  /**\n   * Configures a handler callback for a key event.\n   * @param fullKey The event name that combines all simultaneous keystrokes.\n   * @param handler The function that responds to the key event.\n   * @param zone The zone in which the event occurred.\n   * @returns A callback function.\n   */\n  static eventCallback(fullKey: any, handler: Function, zone: NgZone): Function {\n    return (event: any /** TODO #9100 */) => {\n      if (KeyEventsPlugin.getEventFullKey(event) === fullKey) {\n        zone.runGuarded(() => handler(event));\n      }\n    };\n  }\n\n  /** @internal */\n  static _normalizeKey(keyName: string): string {\n    // TODO: switch to a Map if the mapping grows too much\n    switch (keyName) {\n      case 'esc':\n        return 'escape';\n      default:\n        return keyName;\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DOCUMENT} from '@angular/common';\nimport {Inject, Injectable, Sanitizer, SecurityContext, √â¬µ_sanitizeHtml as _sanitizeHtml, √â¬µ_sanitizeStyle as _sanitizeStyle, √â¬µ_sanitizeUrl as _sanitizeUrl} from '@angular/core';\n\n\nexport {SecurityContext};\n\n\n\n/**\n * Marker interface for a value that's safe to use in a particular context.\n *\n * @publicApi\n */\nexport interface SafeValue {}\n\n/**\n * Marker interface for a value that's safe to use as HTML.\n *\n * @publicApi\n */\nexport interface SafeHtml extends SafeValue {}\n\n/**\n * Marker interface for a value that's safe to use as style (CSS).\n *\n * @publicApi\n */\nexport interface SafeStyle extends SafeValue {}\n\n/**\n * Marker interface for a value that's safe to use as JavaScript.\n *\n * @publicApi\n */\nexport interface SafeScript extends SafeValue {}\n\n/**\n * Marker interface for a value that's safe to use as a URL linking to a document.\n *\n * @publicApi\n */\nexport interface SafeUrl extends SafeValue {}\n\n/**\n * Marker interface for a value that's safe to use as a URL to load executable code from.\n *\n * @publicApi\n */\nexport interface SafeResourceUrl extends SafeValue {}\n\n/**\n * DomSanitizer helps preventing Cross Site Scripting Security bugs (XSS) by sanitizing\n * values to be safe to use in the different DOM contexts.\n *\n * For example, when binding a URL in an `<a [href]=\"someValue\">` hyperlink, `someValue` will be\n * sanitized so that an attacker cannot inject e.g. a `javascript:` URL that would execute code on\n * the website.\n *\n * In specific situations, it might be necessary to disable sanitization, for example if the\n * application genuinely needs to produce a `javascript:` style link with a dynamic value in it.\n * Users can bypass security by constructing a value with one of the `bypassSecurityTrust...`\n * methods, and then binding to that value from the template.\n *\n * These situations should be very rare, and extraordinary care must be taken to avoid creating a\n * Cross Site Scripting (XSS) security bug!\n *\n * When using `bypassSecurityTrust...`, make sure to call the method as early as possible and as\n * close as possible to the source of the value, to make it easy to verify no security bug is\n * created by its use.\n *\n * It is not required (and not recommended) to bypass security if the value is safe, e.g. a URL that\n * does not start with a suspicious protocol, or an HTML snippet that does not contain dangerous\n * code. The sanitizer leaves safe values intact.\n *\n * @security Calling any of the `bypassSecurityTrust...` APIs disables Angular's built-in\n * sanitization for the value passed in. Carefully check and audit all values and code paths going\n * into this call. Make sure any user data is appropriately escaped for this security context.\n * For more detail, see the [Security Guide](http://g.co/ng/security).\n *\n * @publicApi\n */\nexport abstract class DomSanitizer implements Sanitizer {\n  /**\n   * Sanitizes a value for use in the given SecurityContext.\n   *\n   * If value is trusted for the context, this method will unwrap the contained safe value and use\n   * it directly. Otherwise, value will be sanitized to be safe in the given context, for example\n   * by replacing URLs that have an unsafe protocol part (such as `javascript:`). The implementation\n   * is responsible to make sure that the value can definitely be safely used in the given context.\n   */\n  abstract sanitize(context: SecurityContext, value: SafeValue|string|null): string|null;\n\n  /**\n   * Bypass security and trust the given value to be safe HTML. Only use this when the bound HTML\n   * is unsafe (e.g. contains `<script>` tags) and the code should be executed. The sanitizer will\n   * leave safe HTML intact, so in most situations this method should not be used.\n   *\n   * **WARNING:** calling this method with untrusted user data exposes your application to XSS\n   * security risks!\n   */\n  abstract bypassSecurityTrustHtml(value: string): SafeHtml;\n\n  /**\n   * Bypass security and trust the given value to be safe style value (CSS).\n   *\n   * **WARNING:** calling this method with untrusted user data exposes your application to XSS\n   * security risks!\n   */\n  abstract bypassSecurityTrustStyle(value: string): SafeStyle;\n\n  /**\n   * Bypass security and trust the given value to be safe JavaScript.\n   *\n   * **WARNING:** calling this method with untrusted user data exposes your application to XSS\n   * security risks!\n   */\n  abstract bypassSecurityTrustScript(value: string): SafeScript;\n\n  /**\n   * Bypass security and trust the given value to be a safe style URL, i.e. a value that can be used\n   * in hyperlinks or `<img src>`.\n   *\n   * **WARNING:** calling this method with untrusted user data exposes your application to XSS\n   * security risks!\n   */\n  abstract bypassSecurityTrustUrl(value: string): SafeUrl;\n\n  /**\n   * Bypass security and trust the given value to be a safe resource URL, i.e. a location that may\n   * be used to load executable code from, like `<script src>`, or `<iframe src>`.\n   *\n   * **WARNING:** calling this method with untrusted user data exposes your application to XSS\n   * security risks!\n   */\n  abstract bypassSecurityTrustResourceUrl(value: string): SafeResourceUrl;\n}\n\n\n@Injectable()\nexport class DomSanitizerImpl extends DomSanitizer {\n  constructor(@Inject(DOCUMENT) private _doc: any) { super(); }\n\n  sanitize(ctx: SecurityContext, value: SafeValue|string|null): string|null {\n    if (value == null) return null;\n    switch (ctx) {\n      case SecurityContext.NONE:\n        return value as string;\n      case SecurityContext.HTML:\n        if (value instanceof SafeHtmlImpl) return value.changingThisBreaksApplicationSecurity;\n        this.checkNotSafeValue(value, 'HTML');\n        return _sanitizeHtml(this._doc, String(value));\n      case SecurityContext.STYLE:\n        if (value instanceof SafeStyleImpl) return value.changingThisBreaksApplicationSecurity;\n        this.checkNotSafeValue(value, 'Style');\n        return _sanitizeStyle(value as string);\n      case SecurityContext.SCRIPT:\n        if (value instanceof SafeScriptImpl) return value.changingThisBreaksApplicationSecurity;\n        this.checkNotSafeValue(value, 'Script');\n        throw new Error('unsafe value used in a script context');\n      case SecurityContext.URL:\n        if (value instanceof SafeResourceUrlImpl || value instanceof SafeUrlImpl) {\n          // Allow resource URLs in URL contexts, they are strictly more trusted.\n          return value.changingThisBreaksApplicationSecurity;\n        }\n        this.checkNotSafeValue(value, 'URL');\n        return _sanitizeUrl(String(value));\n      case SecurityContext.RESOURCE_URL:\n        if (value instanceof SafeResourceUrlImpl) {\n          return value.changingThisBreaksApplicationSecurity;\n        }\n        this.checkNotSafeValue(value, 'ResourceURL');\n        throw new Error(\n            'unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n      default:\n        throw new Error(`Unexpected SecurityContext ${ctx} (see http://g.co/ng/security#xss)`);\n    }\n  }\n\n  private checkNotSafeValue(value: any, expectedType: string) {\n    if (value instanceof SafeValueImpl) {\n      throw new Error(\n          `Required a safe ${expectedType}, got a ${value.getTypeName()} ` +\n          `(see http://g.co/ng/security#xss)`);\n    }\n  }\n\n  bypassSecurityTrustHtml(value: string): SafeHtml { return new SafeHtmlImpl(value); }\n  bypassSecurityTrustStyle(value: string): SafeStyle { return new SafeStyleImpl(value); }\n  bypassSecurityTrustScript(value: string): SafeScript { return new SafeScriptImpl(value); }\n  bypassSecurityTrustUrl(value: string): SafeUrl { return new SafeUrlImpl(value); }\n  bypassSecurityTrustResourceUrl(value: string): SafeResourceUrl {\n    return new SafeResourceUrlImpl(value);\n  }\n}\n\nabstract class SafeValueImpl implements SafeValue {\n  constructor(public changingThisBreaksApplicationSecurity: string) {\n    // empty\n  }\n\n  abstract getTypeName(): string;\n\n  toString() {\n    return `SafeValue must use [property]=binding: ${this.changingThisBreaksApplicationSecurity}` +\n        ` (see http://g.co/ng/security#xss)`;\n  }\n}\n\nclass SafeHtmlImpl extends SafeValueImpl implements SafeHtml {\n  getTypeName() { return 'HTML'; }\n}\nclass SafeStyleImpl extends SafeValueImpl implements SafeStyle {\n  getTypeName() { return 'Style'; }\n}\nclass SafeScriptImpl extends SafeValueImpl implements SafeScript {\n  getTypeName() { return 'Script'; }\n}\nclass SafeUrlImpl extends SafeValueImpl implements SafeUrl {\n  getTypeName() { return 'URL'; }\n}\nclass SafeResourceUrlImpl extends SafeValueImpl implements SafeResourceUrl {\n  getTypeName() { return 'ResourceURL'; }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CommonModule, DOCUMENT, PlatformLocation, √â¬µPLATFORM_BROWSER_ID as PLATFORM_BROWSER_ID} from '@angular/common';\nimport {APP_ID, ApplicationModule, ErrorHandler, Inject, ModuleWithProviders, NgModule, NgZone, Optional, PLATFORM_ID, PLATFORM_INITIALIZER, PlatformRef, RendererFactory2, Sanitizer, SkipSelf, StaticProvider, Testability, createPlatformFactory, platformCore, √â¬µAPP_ROOT as APP_ROOT, √â¬µConsole as Console} from '@angular/core';\n\nimport {BrowserDomAdapter} from './browser/browser_adapter';\nimport {BrowserPlatformLocation} from './browser/location/browser_platform_location';\nimport {SERVER_TRANSITION_PROVIDERS, TRANSITION_ID} from './browser/server-transition';\nimport {BrowserGetTestability} from './browser/testability';\nimport {ELEMENT_PROBE_PROVIDERS} from './dom/debug/ng_probe';\nimport {DomRendererFactory2} from './dom/dom_renderer';\nimport {DomEventsPlugin} from './dom/events/dom_events';\nimport {EVENT_MANAGER_PLUGINS, EventManager} from './dom/events/event_manager';\nimport {HAMMER_GESTURE_CONFIG, HAMMER_LOADER, HammerGestureConfig, HammerGesturesPlugin} from './dom/events/hammer_gestures';\nimport {KeyEventsPlugin} from './dom/events/key_events';\nimport {DomSharedStylesHost, SharedStylesHost} from './dom/shared_styles_host';\nimport {DomSanitizer, DomSanitizerImpl} from './security/dom_sanitization_service';\n\nexport const INTERNAL_BROWSER_PLATFORM_PROVIDERS: StaticProvider[] = [\n  {provide: PLATFORM_ID, useValue: PLATFORM_BROWSER_ID},\n  {provide: PLATFORM_INITIALIZER, useValue: initDomAdapter, multi: true},\n  {provide: PlatformLocation, useClass: BrowserPlatformLocation, deps: [DOCUMENT]},\n  {provide: DOCUMENT, useFactory: _document, deps: []},\n];\n\n/**\n * @security Replacing built-in sanitization providers exposes the application to XSS risks.\n * Attacker-controlled data introduced by an unsanitized provider could expose your\n * application to XSS risks. For more detail, see the [Security Guide](http://g.co/ng/security).\n * @publicApi\n */\nexport const BROWSER_SANITIZATION_PROVIDERS: StaticProvider[] = [\n  {provide: Sanitizer, useExisting: DomSanitizer},\n  {provide: DomSanitizer, useClass: DomSanitizerImpl, deps: [DOCUMENT]},\n];\n\n/**\n * @publicApi\n */\nexport const platformBrowser: (extraProviders?: StaticProvider[]) => PlatformRef =\n    createPlatformFactory(platformCore, 'browser', INTERNAL_BROWSER_PLATFORM_PROVIDERS);\n\nexport function initDomAdapter() {\n  BrowserDomAdapter.makeCurrent();\n  BrowserGetTestability.init();\n}\n\nexport function errorHandler(): ErrorHandler {\n  return new ErrorHandler();\n}\n\nexport function _document(): any {\n  return document;\n}\n\nexport const BROWSER_MODULE_PROVIDERS: StaticProvider[] = [\n  BROWSER_SANITIZATION_PROVIDERS,\n  {provide: APP_ROOT, useValue: true},\n  {provide: ErrorHandler, useFactory: errorHandler, deps: []},\n  {\n    provide: EVENT_MANAGER_PLUGINS,\n    useClass: DomEventsPlugin,\n    multi: true,\n    deps: [DOCUMENT, NgZone, PLATFORM_ID]\n  },\n  {provide: EVENT_MANAGER_PLUGINS, useClass: KeyEventsPlugin, multi: true, deps: [DOCUMENT]},\n  {\n    provide: EVENT_MANAGER_PLUGINS,\n    useClass: HammerGesturesPlugin,\n    multi: true,\n    deps: [DOCUMENT, HAMMER_GESTURE_CONFIG, Console, [new Optional(), HAMMER_LOADER]]\n  },\n  {provide: HAMMER_GESTURE_CONFIG, useClass: HammerGestureConfig, deps: []},\n  {\n    provide: DomRendererFactory2,\n    useClass: DomRendererFactory2,\n    deps: [EventManager, DomSharedStylesHost, APP_ID]\n  },\n  {provide: RendererFactory2, useExisting: DomRendererFactory2},\n  {provide: SharedStylesHost, useExisting: DomSharedStylesHost},\n  {provide: DomSharedStylesHost, useClass: DomSharedStylesHost, deps: [DOCUMENT]},\n  {provide: Testability, useClass: Testability, deps: [NgZone]},\n  {provide: EventManager, useClass: EventManager, deps: [EVENT_MANAGER_PLUGINS, NgZone]},\n  ELEMENT_PROBE_PROVIDERS,\n];\n\n/**\n * Exports required infrastructure for all Angular apps.\n * Included by default in all Angular apps created with the CLI\n * `new` command.\n * Re-exports `CommonModule` and `ApplicationModule`, making their\n * exports and providers available to all apps.\n *\n * @publicApi\n */\n@NgModule({providers: BROWSER_MODULE_PROVIDERS, exports: [CommonModule, ApplicationModule]})\nexport class BrowserModule {\n  constructor(@Optional() @SkipSelf() @Inject(BrowserModule) parentModule: BrowserModule|null) {\n    if (parentModule) {\n      throw new Error(\n          `BrowserModule has already been loaded. If you need access to common directives such as NgIf and NgFor from a lazy loaded module, import CommonModule instead.`);\n    }\n  }\n\n  /**\n   * Configures a browser-based app to transition from a server-rendered app, if\n   * one is present on the page.\n   *\n   * @param params An object containing an identifier for the app to transition.\n   * The ID must match between the client and server versions of the app.\n   * @returns The reconfigured `BrowserModule` to import into the app's root `AppModule`.\n   */\n  static withServerTransition(params: {appId: string}): ModuleWithProviders<BrowserModule> {\n    return {\n      ngModule: BrowserModule,\n      providers: [\n        {provide: APP_ID, useValue: params.appId},\n        {provide: TRANSITION_ID, useExisting: APP_ID},\n        SERVER_TRANSITION_PROVIDERS,\n      ],\n    };\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DOCUMENT} from '@angular/common';\nimport {Inject, Injectable, √â¬µ√â¬µinject} from '@angular/core';\n\nimport {DomAdapter, getDOM} from '../dom/dom_adapter';\n\n\n\n/**\n * Represents a meta element.\n *\n * @publicApi\n */\nexport type MetaDefinition = {\n  charset?: string; content?: string; httpEquiv?: string; id?: string; itemprop?: string;\n  name?: string;\n  property?: string;\n  scheme?: string;\n  url?: string;\n} &\n{\n  // TODO(IgorMinar): this type looks wrong\n  [prop: string]: string;\n};\n\n/**\n * Factory to create Meta service.\n */\nexport function createMeta() {\n  return new Meta(√â¬µ√â¬µinject(DOCUMENT));\n}\n\n/**\n * A service that can be used to get and add meta tags.\n *\n * @publicApi\n */\n@Injectable({providedIn: 'root', useFactory: createMeta, deps: []})\nexport class Meta {\n  private _dom: DomAdapter;\n  constructor(@Inject(DOCUMENT) private _doc: any) { this._dom = getDOM(); }\n\n  addTag(tag: MetaDefinition, forceCreation: boolean = false): HTMLMetaElement|null {\n    if (!tag) return null;\n    return this._getOrCreateElement(tag, forceCreation);\n  }\n\n  addTags(tags: MetaDefinition[], forceCreation: boolean = false): HTMLMetaElement[] {\n    if (!tags) return [];\n    return tags.reduce((result: HTMLMetaElement[], tag: MetaDefinition) => {\n      if (tag) {\n        result.push(this._getOrCreateElement(tag, forceCreation));\n      }\n      return result;\n    }, []);\n  }\n\n  getTag(attrSelector: string): HTMLMetaElement|null {\n    if (!attrSelector) return null;\n    return this._dom.querySelector(this._doc, `meta[${attrSelector}]`) || null;\n  }\n\n  getTags(attrSelector: string): HTMLMetaElement[] {\n    if (!attrSelector) return [];\n    const list /*NodeList*/ = this._dom.querySelectorAll(this._doc, `meta[${attrSelector}]`);\n    return list ? [].slice.call(list) : [];\n  }\n\n  updateTag(tag: MetaDefinition, selector?: string): HTMLMetaElement|null {\n    if (!tag) return null;\n    selector = selector || this._parseSelector(tag);\n    const meta: HTMLMetaElement = this.getTag(selector) !;\n    if (meta) {\n      return this._setMetaElementAttributes(tag, meta);\n    }\n    return this._getOrCreateElement(tag, true);\n  }\n\n  removeTag(attrSelector: string): void { this.removeTagElement(this.getTag(attrSelector) !); }\n\n  removeTagElement(meta: HTMLMetaElement): void {\n    if (meta) {\n      this._dom.remove(meta);\n    }\n  }\n\n  private _getOrCreateElement(meta: MetaDefinition, forceCreation: boolean = false):\n      HTMLMetaElement {\n    if (!forceCreation) {\n      const selector: string = this._parseSelector(meta);\n      const elem: HTMLMetaElement = this.getTag(selector) !;\n      // It's allowed to have multiple elements with the same name so it's not enough to\n      // just check that element with the same name already present on the page. We also need to\n      // check if element has tag attributes\n      if (elem && this._containsAttributes(meta, elem)) return elem;\n    }\n    const element: HTMLMetaElement = this._dom.createElement('meta') as HTMLMetaElement;\n    this._setMetaElementAttributes(meta, element);\n    const head = this._dom.getElementsByTagName(this._doc, 'head')[0];\n    this._dom.appendChild(head, element);\n    return element;\n  }\n\n  private _setMetaElementAttributes(tag: MetaDefinition, el: HTMLMetaElement): HTMLMetaElement {\n    Object.keys(tag).forEach((prop: string) => this._dom.setAttribute(el, prop, tag[prop]));\n    return el;\n  }\n\n  private _parseSelector(tag: MetaDefinition): string {\n    const attr: string = tag.name ? 'name' : 'property';\n    return `${attr}=\"${tag[attr]}\"`;\n  }\n\n  private _containsAttributes(tag: MetaDefinition, elem: HTMLMetaElement): boolean {\n    return Object.keys(tag).every((key: string) => this._dom.getAttribute(elem, key) === tag[key]);\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DOCUMENT} from '@angular/common';\nimport {Inject, Injectable, √â¬µ√â¬µinject} from '@angular/core';\n\nimport {getDOM} from '../dom/dom_adapter';\n\n/**\n * Factory to create Title service.\n */\nexport function createTitle() {\n  return new Title(√â¬µ√â¬µinject(DOCUMENT));\n}\n\n/**\n * A service that can be used to get and set the title of a current HTML document.\n *\n * Since an Angular application can't be bootstrapped on the entire HTML document (`<html>` tag)\n * it is not possible to bind to the `text` property of the `HTMLTitleElement` elements\n * (representing the `<title>` tag). Instead, this service can be used to set and get the current\n * title value.\n *\n * @publicApi\n */\n@Injectable({providedIn: 'root', useFactory: createTitle, deps: []})\nexport class Title {\n  constructor(@Inject(DOCUMENT) private _doc: any) {}\n  /**\n   * Get the title of the current HTML document.\n   */\n  getTitle(): string { return getDOM().getTitle(this._doc); }\n\n  /**\n   * Set the title of the current HTML document.\n   * @param newTitle\n   */\n  setTitle(newTitle: string) { getDOM().setTitle(this._doc, newTitle); }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nconst win = typeof window !== 'undefined' && window || <any>{};\nexport {win as window};\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ApplicationRef, ComponentRef} from '@angular/core';\nimport {getDOM} from '../../dom/dom_adapter';\nimport {window} from './browser';\n\nexport class ChangeDetectionPerfRecord {\n  constructor(public msPerTick: number, public numTicks: number) {}\n}\n\n/**\n * Entry point for all Angular profiling-related debug tools. This object\n * corresponds to the `ng.profiler` in the dev console.\n */\nexport class AngularProfiler {\n  appRef: ApplicationRef;\n\n  constructor(ref: ComponentRef<any>) { this.appRef = ref.injector.get(ApplicationRef); }\n\n  // tslint:disable:no-console\n  /**\n   * Exercises change detection in a loop and then prints the average amount of\n   * time in milliseconds how long a single round of change detection takes for\n   * the current state of the UI. It runs a minimum of 5 rounds for a minimum\n   * of 500 milliseconds.\n   *\n   * Optionally, a user may pass a `config` parameter containing a map of\n   * options. Supported options are:\n   *\n   * `record` (boolean) - causes the profiler to record a CPU profile while\n   * it exercises the change detector. Example:\n   *\n   * ```\n   * ng.profiler.timeChangeDetection({record: true})\n   * ```\n   */\n  timeChangeDetection(config: any): ChangeDetectionPerfRecord {\n    const record = config && config['record'];\n    const profileName = 'Change Detection';\n    // Profiler is not available in Android browsers, nor in IE 9 without dev tools opened\n    const isProfilerAvailable = window.console.profile != null;\n    if (record && isProfilerAvailable) {\n      window.console.profile(profileName);\n    }\n    const start = getDOM().performanceNow();\n    let numTicks = 0;\n    while (numTicks < 5 || (getDOM().performanceNow() - start) < 500) {\n      this.appRef.tick();\n      numTicks++;\n    }\n    const end = getDOM().performanceNow();\n    if (record && isProfilerAvailable) {\n      window.console.profileEnd(profileName);\n    }\n    const msPerTick = (end - start) / numTicks;\n    window.console.log(`ran ${numTicks} change detection cycles`);\n    window.console.log(`${msPerTick.toFixed(2)} ms per check`);\n\n    return new ChangeDetectionPerfRecord(msPerTick, numTicks);\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DOCUMENT} from '@angular/common';\nimport {APP_ID, Injectable, NgModule} from '@angular/core';\n\nexport function escapeHtml(text: string): string {\n  const escapedText: {[k: string]: string} = {\n    '&': '&a;',\n    '\"': '&q;',\n    '\\'': '&s;',\n    '<': '&l;',\n    '>': '&g;',\n  };\n  return text.replace(/[&\"'<>]/g, s => escapedText[s]);\n}\n\nexport function unescapeHtml(text: string): string {\n  const unescapedText: {[k: string]: string} = {\n    '&a;': '&',\n    '&q;': '\"',\n    '&s;': '\\'',\n    '&l;': '<',\n    '&g;': '>',\n  };\n  return text.replace(/&[^;]+;/g, s => unescapedText[s]);\n}\n\n/**\n * A type-safe key to use with `TransferState`.\n *\n * Example:\n *\n * ```\n * const COUNTER_KEY = makeStateKey<number>('counter');\n * let value = 10;\n *\n * transferState.set(COUNTER_KEY, value);\n * ```\n *\n * @publicApi\n */\nexport type StateKey<T> = string & {__not_a_string: never};\n\n/**\n * Create a `StateKey<T>` that can be used to store value of type T with `TransferState`.\n *\n * Example:\n *\n * ```\n * const COUNTER_KEY = makeStateKey<number>('counter');\n * let value = 10;\n *\n * transferState.set(COUNTER_KEY, value);\n * ```\n *\n * @publicApi\n */\nexport function makeStateKey<T = void>(key: string): StateKey<T> {\n  return key as StateKey<T>;\n}\n\n/**\n * A key value store that is transferred from the application on the server side to the application\n * on the client side.\n *\n * `TransferState` will be available as an injectable token. To use it import\n * `ServerTransferStateModule` on the server and `BrowserTransferStateModule` on the client.\n *\n * The values in the store are serialized/deserialized using JSON.stringify/JSON.parse. So only\n * boolean, number, string, null and non-class objects will be serialized and deserialzied in a\n * non-lossy manner.\n *\n * @publicApi\n */\n@Injectable()\nexport class TransferState {\n  private store: {[k: string]: {} | undefined} = {};\n  private onSerializeCallbacks: {[k: string]: () => {} | undefined} = {};\n\n  /** @internal */\n  static init(initState: {}) {\n    const transferState = new TransferState();\n    transferState.store = initState;\n    return transferState;\n  }\n\n  /**\n   * Get the value corresponding to a key. Return `defaultValue` if key is not found.\n   */\n  get<T>(key: StateKey<T>, defaultValue: T): T {\n    return this.store[key] !== undefined ? this.store[key] as T : defaultValue;\n  }\n\n  /**\n   * Set the value corresponding to a key.\n   */\n  set<T>(key: StateKey<T>, value: T): void { this.store[key] = value; }\n\n  /**\n   * Remove a key from the store.\n   */\n  remove<T>(key: StateKey<T>): void { delete this.store[key]; }\n\n  /**\n   * Test whether a key exists in the store.\n   */\n  hasKey<T>(key: StateKey<T>) { return this.store.hasOwnProperty(key); }\n\n  /**\n   * Register a callback to provide the value for a key when `toJson` is called.\n   */\n  onSerialize<T>(key: StateKey<T>, callback: () => T): void {\n    this.onSerializeCallbacks[key] = callback;\n  }\n\n  /**\n   * Serialize the current state of the store to JSON.\n   */\n  toJson(): string {\n    // Call the onSerialize callbacks and put those values into the store.\n    for (const key in this.onSerializeCallbacks) {\n      if (this.onSerializeCallbacks.hasOwnProperty(key)) {\n        try {\n          this.store[key] = this.onSerializeCallbacks[key]();\n        } catch (e) {\n          console.warn('Exception in onSerialize callback: ', e);\n        }\n      }\n    }\n    return JSON.stringify(this.store);\n  }\n}\n\nexport function initTransferState(doc: Document, appId: string) {\n  // Locate the script tag with the JSON data transferred from the server.\n  // The id of the script tag is set to the Angular appId + 'state'.\n  const script = doc.getElementById(appId + '-state');\n  let initialState = {};\n  if (script && script.textContent) {\n    try {\n      initialState = JSON.parse(unescapeHtml(script.textContent));\n    } catch (e) {\n      console.warn('Exception while restoring TransferState for app ' + appId, e);\n    }\n  }\n  return TransferState.init(initialState);\n}\n\n/**\n * NgModule to install on the client side while using the `TransferState` to transfer state from\n * server to client.\n *\n * @publicApi\n */\n@NgModule({\n  providers: [{provide: TransferState, useFactory: initTransferState, deps: [DOCUMENT, APP_ID]}],\n})\nexport class BrowserTransferStateModule {\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DebugElement, DebugNode, Predicate, Type} from '@angular/core';\nimport {getDOM} from '../../dom/dom_adapter';\n\n\n\n/**\n * Predicates for use with {@link DebugElement}'s query functions.\n *\n * @publicApi\n */\nexport class By {\n  /**\n   * Match all nodes.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * {@example platform-browser/dom/debug/ts/by/by.ts region='by_all'}\n   */\n  static all(): Predicate<DebugNode> { return () => true; }\n\n  /**\n   * Match elements by the given CSS selector.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * {@example platform-browser/dom/debug/ts/by/by.ts region='by_css'}\n   */\n  static css(selector: string): Predicate<DebugElement> {\n    return (debugElement) => {\n      return debugElement.nativeElement != null ?\n          getDOM().elementMatches(debugElement.nativeElement, selector) :\n          false;\n    };\n  }\n\n  /**\n   * Match nodes that have the given directive present.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * {@example platform-browser/dom/debug/ts/by/by.ts region='by_directive'}\n   */\n  static directive(type: Type<any>): Predicate<DebugNode> {\n    return (debugNode) => debugNode.providerTokens !.indexOf(type) !== -1;\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of the common package.\n */\n\nimport {Version} from '@angular/core';\n\n/**\n * @publicApi\n */\nexport const VERSION = new Version('8.2.14');\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SwipeAngularListService {\n\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'sw-swipe-angular-list',\n  template: `\n    <p>\n      swipe-angular-list works!\n    </p>\n  `,\n  styles: []\n})\nexport class SwipeAngularListComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import {EventEmitter, Injectable} from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SwipeServiceService {\n  swipeObserver: EventEmitter<number> = new EventEmitter();\n\n  constructor() {\n  }\n\n  closeAll(id) {\n    this.swipeObserver.emit(id);\n  }\n}\n","import {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  Output,\n  TemplateRef,\n  ViewChild, ViewContainerRef, OnInit\n} from '@angular/core';\nimport {SwipeServiceService} from '../swipe-service.service';\n\n@Component({\n  selector: 'sw-item-list',\n  templateUrl: './item-list.component.html',\n  styleUrls: ['./item-list.component.css']\n})\nexport class ItemListComponent implements AfterViewInit, OnInit  {\n  alive = true;\n  result: boolean;\n  selfElement = null;\n  idElement = null;\n  @Input() inside: {\n    id,\n    title: '',\n    subTitle: '',\n    mark: false,\n  };\n\n  @Input('disable-mark') disabledMark = false;\n\n  @Input('show-mark') showMark = false;\n\n  @Input('item-class') itemClass = '';\n\n  // @ts-ignore\n  @ViewChild('defaultEdit') defaultEdit: TemplateRef<any>;\n  // @ts-ignore\n  @ViewChild('defaultTrash') defaultTrash: TemplateRef<any>;\n\n  // @ts-ignore\n  @ViewChild('defaultMark') defaultMark: TemplateRef<any>;\n  // @ts-ignore\n  @ViewChild('defaultNotMark') defaultNotMark: TemplateRef<any>;\n  // @ts-ignore\n  @ViewChild('defaultCustom') defaultCustom: TemplateRef<any>;\n\n  // tslint:disable-next-line:no-input-rename\n  @Input('customTemplate') customTemplate: TemplateRef<any>;\n  // tslint:disable-next-line:no-input-rename\n  @Input('editTemplate') editTemplate: TemplateRef<any>;\n  // tslint:disable-next-line:no-input-rename\n  @Input('trashTemplate') trashTemplate: TemplateRef<any>;\n  // tslint:disable-next-line:no-input-rename\n  @Input('markTemplate') markTemplate: TemplateRef<any>;\n  // tslint:disable-next-line:no-input-rename\n  @Input('notMarkTemplate') notMarkTemplate: TemplateRef<any>;\n\n  @Output()\n  callback = new EventEmitter<any>();\n\n  @Output()\n  swClick = new EventEmitter<any>();\n\n  @ViewChild('viewContainerEdit', {static: false, read: ViewContainerRef})\n  viewContainerEdit: ViewContainerRef;\n\n  @ViewChild('viewContainerTrash', {static: false, read: ViewContainerRef})\n  viewContainerTrash: ViewContainerRef;\n\n  @ViewChild('viewContainerMark', {static: false, read: ViewContainerRef})\n  viewContainerMark: ViewContainerRef;\n\n  @ViewChild('viewContainerCustom', {static: false, read: ViewContainerRef})\n  viewContainerCustom: ViewContainerRef;\n\n  @HostListener('document:click', ['$event'])\n  clickOut(event) {\n    if (!this.selfElement.contains(event.target)) {\n      this.result = false;\n    }\n  }\n\n  constructor(elRef: ElementRef, private swService: SwipeServiceService) {\n    this.selfElement = elRef.nativeElement;\n    this.idElement = `list-swipe-${this.random()}`;\n    this.selfElement.setAttribute('data-id', this.idElement);\n    this.selfElement.id = this.idElement;\n    this.swService.swipeObserver.subscribe(a => {\n      if (a !== this.selfElement.id) {\n        this.result = false;\n      }\n    });\n  }\n  ngAfterViewInit(): void {\n    this.render();\n    // throw new Error(\"Method not implemented.\");\n  }\n\n  private random = () => {\n    const d = new Date();\n    return d.getTime();\n  };\n\n\n  public swipeleft = (res:any) => {\n    this.swService.closeAll(this.selfElement.id);\n        if (!this.disabledMark) {\n          this.result = (res.deltaX < 0);\n        }\n  }\n\n  clickItem = (a: any) => this.swClick.emit(a);\n\n  action = (opt = '') => {\n    try {\n      this.result = false;\n      const {id} = this.inside;\n      if (opt === 'edit') {\n        this.callback.emit({action: 'edit', value: id});\n      } else if (opt === 'trash') {\n        this.callback.emit({action: 'trash', value: id});\n      }\n    } catch (e) {\n      console.error('Debes definir ID de edit, y trash');\n    }\n  };\n\n  ngOnInit(): void {\n\n\n  }\n\n  render = () => {\n        console.log('INIT')\n    /**\n     * Template MARK\n     **/\n    if (this.showMark) {\n      if (this.inside.mark && !this.markTemplate) {\n        const viewMark = this.defaultMark.createEmbeddedView(null);\n        this.viewContainerMark.insert(viewMark);\n      } else if (this.inside.mark && this.markTemplate) {\n        const viewMark = this.markTemplate.createEmbeddedView(null);\n        this.viewContainerMark.insert(viewMark);\n      }\n\n      if (!this.inside.mark && !this.notMarkTemplate) {\n        const viewMark = this.defaultNotMark.createEmbeddedView(null);\n        this.viewContainerMark.insert(viewMark);\n      } else if (!this.inside.mark && this.notMarkTemplate) {\n        const viewMark = this.notMarkTemplate.createEmbeddedView(null);\n        this.viewContainerMark.insert(viewMark);\n      }\n    }\n    /**\n     * Template EDIT\n     **/\n    if (this.editTemplate) {\n      const viewEdit = this.editTemplate.createEmbeddedView(null);\n      if (this.viewContainerEdit) {\n        this.viewContainerEdit.insert(viewEdit);\n      }\n    } else if (this.editTemplate !== null) {\n      const viewEdit = this.defaultEdit.createEmbeddedView(null);\n      this.viewContainerEdit.insert(viewEdit);\n    }\n\n    /**\n     * Template TRASH\n     **/\n\n    if (this.trashTemplate) {\n      const viewTrash = this.trashTemplate.createEmbeddedView(null);\n      if (this.viewContainerTrash) {\n        this.viewContainerTrash.insert(viewTrash);\n      }\n    } else if (this.trashTemplate !== null) {\n      const viewTrash = this.defaultTrash.createEmbeddedView(null);\n      this.viewContainerTrash.insert(viewTrash);\n    }\n\n    setTimeout(() => {\n      if (this.customTemplate) { // Si tiene\n        const dataInside = {...this.inside, ...{touch: this.selfElement.id}};\n        const viewCustomTemplate = this.customTemplate.createEmbeddedView({\n          item: dataInside,\n          id: this.selfElement.id\n        });\n        if (viewCustomTemplate) {\n          this.viewContainerCustom.insert(viewCustomTemplate);\n        }\n      } else {\n        const viewCustomTemplate = this.defaultCustom.createEmbeddedView(null);\n        this.viewContainerCustom.insert(viewCustomTemplate);\n      }\n    }, 10);\n  }\n\n}\n","import {NgModule} from '@angular/core';\nimport {SwipeAngularListComponent} from './swipe-angular-list.component';\nimport {ItemListComponent} from './item-list/item-list.component';\nimport {CommonModule} from '@angular/common';\nimport {HAMMER_GESTURE_CONFIG, HammerGestureConfig} from '@angular/platform-browser';\n\nexport class HammerConfig extends HammerGestureConfig {\n  overrides = {\n    pinch: {enable: false},\n    rotate: {enable: false}\n  };\n}\n\n@NgModule({\n  declarations: [SwipeAngularListComponent, ItemListComponent],\n  imports: [\n    CommonModule\n  ],\n  providers: [\n    {\n      provide: HAMMER_GESTURE_CONFIG,\n      useClass: HammerConfig\n    }\n  ],\n  exports: [SwipeAngularListComponent, ItemListComponent]\n})\nexport class SwipeAngularListModule {\n}\n"]}